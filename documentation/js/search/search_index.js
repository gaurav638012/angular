var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.482,1,0.987]],["body/components/AboutComponent.html",[0,0.655,1,1.48,2,1.382,3,0.136,4,0.114,5,1.005,6,1.005,7,1.005,8,1.005,9,0.114,10,2.212,11,1.209,12,1.88,13,1.005,14,2.46,15,2.336,16,1.479,17,4.566,18,1.479,19,3.849,20,0.114,21,0.806,22,2.073,23,0.957,24,0.698,25,2.616,26,2.616,27,0.51,28,0.026,29,1.382,30,0.316,31,0.44,32,0.136,33,0.316,34,3.849,35,0.768,36,4.257,37,3.849,38,3.254,39,3.849,40,3.849,41,2.57,42,3.849,43,3.849,44,2.143,45,3.849,46,3.849,47,3.849,48,3.849,49,3.849,50,3.849,51,3.849,52,3.254,53,3.849,54,3.849,55,3.849,56,3.849,57,3.849,58,3.849,59,3.254,60,4.566,61,3.849,62,3.849,63,3.849,64,3.849,65,3.849,66,3.849,67,3.849,68,3.849,69,3.849,70,4.566,71,5.035,72,3.861,73,2.616,74,2.616,75,3.849,76,5.952,77,4.566,78,5.952,79,2.616,80,2.616,81,5.611,82,2.616,83,3.849,84,4.566,85,2.616,86,3.254,87,2.616,88,5.035,89,2.616,90,5.035,91,5.035,92,2.755,93,1.476,94,1.588,95,3.849,96,2.616,97,3.258,98,3.258,99,2.616,100,2.831,101,1.808,102,2.143,103,2.616,104,2.585,105,2.57,106,2.212,107,2.212,108,1.747,109,4.566,110,1.588,111,3.849,112,1.456,113,2.616,114,1.946,115,2.212,116,1.588,117,2.803,118,2.616,119,1.456,120,1.456,121,1.588,122,3.254,123,1.588,124,0.878,125,1.479,126,1.382,127,1.005,128,1.48,129,1.005,130,0.698,131,1.005,132,0.769,133,0.939,134,1.005,135,0.769,136,1.005,137,0.769,138,1.479,139,0.769,140,0.769,141,1.005,142,0.769,143,1.005,144,0.769,145,1.005,146,0.769,147,1.005,148,0.769,149,1.005,150,0.769,151,1.005,152,1.005,153,1.005,154,0.029,155,0.043,156,0.029]],["title/components/AddCourseComponent.html",[0,0.482,132,0.987]],["body/components/AddCourseComponent.html",[0,0.61,1,0.681,2,1.262,3,0.121,4,0.101,5,0.89,6,0.89,7,0.89,8,0.89,9,0.101,11,1.104,12,1.748,13,0.89,14,2.401,15,2.244,16,1.35,18,1.35,20,0.101,21,0.736,22,1.952,23,0.736,24,1.011,27,0.686,28,0.026,29,1.525,30,0.615,31,0.39,32,0.121,33,0.28,35,1.051,92,1.804,94,2.134,97,2.134,98,2.134,100,2.651,101,1.702,102,1.956,104,1.804,110,1.406,112,2.364,116,1.406,117,1.956,119,2.364,120,2.364,121,1.406,124,0.778,125,1.821,126,1.262,127,0.89,128,1.394,129,0.89,130,1.041,131,0.89,132,1.394,133,2.287,134,0.89,135,0.681,136,0.89,137,0.681,138,1.35,139,0.681,140,0.681,141,0.89,142,0.681,143,0.89,144,0.681,145,0.89,146,0.681,147,0.89,148,0.681,149,0.89,150,0.681,151,0.89,152,0.89,153,0.89,154,0.026,155,0.04,156,0.026,157,4.854,158,4.27,159,1.958,160,4.246,161,3.514,162,0.637,163,4.246,164,2.836,165,3.158,166,3.526,167,2.134,168,2.836,169,1.547,170,3.582,171,2.295,172,3.526,173,2.836,174,3.514,175,0.596,176,0.215,177,0.596,178,2.316,179,2.316,180,3.582,181,2.347,182,2.614,183,3.514,184,1.956,185,3.514,186,2.971,187,2.971,188,3.514,189,2.134,190,2.371,191,3.514,192,3.514,193,2.347,194,3.514,195,3.514,196,2.836,197,2.316,198,1.804,199,1.35,200,2.095,201,2.316,202,1.547,203,2.316,204,1.489,205,2.347,206,0.728,207,1.547,208,1.289,209,1.289,210,1.024,211,1.958,212,1.958,213,1.093,214,2.316,215,2.316,216,1.723,217,2.347,218,3.384,219,2.316,220,2.316,221,1.723,222,1.553,223,2.316,224,1.723,225,2.316,226,2.316,227,1.547,228,1.102,229,1.024,230,1.547,231,2.316,232,1.723,233,2.316,234,1.958,235,3.403,236,2.971,237,3.59,238,2.364,239,2.347,240,2.578,241,1.547,242,1.547,243,1.723,244,2.347,245,2.134,246,1.547,247,1.547,248,1.406,249,1.958,250,1.958,251,2.134,252,1.956,253,1.723,254,1.958,255,1.723,256,1.958]],["title/injectables/AddCourseService.html",[173,2.243,257,0.808]],["body/injectables/AddCourseService.html",[3,0.205,4,0.171,9,0.171,20,0.171,21,1.069,23,1.069,24,0.925,27,0.766,28,0.026,30,0.751,31,0.661,32,0.205,33,0.474,35,1.091,93,1.08,128,1.155,130,0.925,154,0.044,155,0.057,156,0.044,172,3.795,173,3.407,175,1.313,176,0.346,177,1.313,193,3.407,204,1.603,213,1.011,229,2.255,257,1.227,258,1.868,259,3.784,260,2.623,261,1.736,262,2.034,263,3.32,264,1.41,265,3.927,266,3.927,267,2.426,268,5.101,269,5.998,270,4.462,271,5.101,272,5.101,273,4.006,274,1.903,275,1.736,276,3.407,277,2.034,278,1.713,279,3.32,280,1.319,281,1.319,282,2.921,283,1.234,284,1.509,285,1.713,286,2.921,287,2.921,288,1.41,289,1.155,290,1.41,291,1.617,292,1.41,293,2.384,294,2.623,295,3.927,296,3.927,297,3.927]],["title/injectables/AddToCourseService.html",[257,0.808,298,2.243]],["body/injectables/AddToCourseService.html",[3,0.194,4,0.162,9,0.162,20,0.162,21,1.031,23,1.031,24,0.892,27,0.725,28,0.026,30,0.758,31,0.625,32,0.194,33,0.448,35,1.106,93,1.022,128,1.092,130,0.892,154,0.042,155,0.055,156,0.042,175,1.266,176,0.337,177,1.266,184,2.738,193,3.285,204,1.167,213,0.956,229,1.642,257,1.183,258,1.767,259,3.683,260,2.481,261,1.642,262,1.98,263,3.14,264,1.334,274,1.247,275,1.642,276,3.92,277,1.98,278,1.652,279,3.14,280,1.247,281,1.247,282,3.658,283,1.167,284,1.427,285,1.652,288,1.334,289,1.092,290,1.334,291,1.529,292,1.334,293,2.255,294,3.683,298,3.285,299,4.963,300,3.714,301,1.065,302,2.514,303,1.652,304,3.564,305,3.714,306,4.159,307,4.918,308,3.285,309,1.726,310,2.792,311,4.918,312,2.525,313,2.738,314,3.285,315,2.481,316,3.714,317,3.714,318,3.714,319,2.763]],["title/components/AppComponent.html",[0,0.482,135,0.987]],["body/components/AppComponent.html",[0,0.825,1,1.189,2,1.866,3,0.211,4,0.176,5,1.553,6,1.553,7,1.553,8,1.553,9,0.176,13,1.553,14,2.634,15,2.462,16,1.997,18,1.997,20,0.176,24,0.733,28,0.026,30,0.488,31,0.68,32,0.211,33,0.488,35,0.68,41,3.472,101,1.452,124,1.357,125,1.997,126,1.866,127,1.553,128,1.783,129,1.553,130,0.943,131,1.553,132,1.189,133,1.452,134,1.553,135,1.783,136,1.553,137,1.189,138,1.997,139,1.189,140,1.189,141,1.553,142,1.189,143,1.553,144,1.189,145,1.553,146,1.189,147,1.553,148,1.189,149,1.553,150,1.189,151,1.553,152,1.553,153,1.553,154,0.046,155,0.059,156,0.046,162,0.943,176,0.247,198,2.076,199,1.553,292,1.866,301,0.733,320,3.418,321,5.745,322,5.198,323,4.858,324,4.042]],["title/modules/AppModule.html",[325,2.498,326,2.243]],["body/modules/AppModule.html",[0,0.873,1,1.748,3,0.148,4,0.123,9,0.123,28,0.026,30,0.82,31,0.476,32,0.148,33,0.342,35,0.476,101,1.017,124,0.951,132,1.696,133,1.017,135,1.892,137,1.696,139,1.696,140,1.748,142,1.748,144,1.696,146,1.748,148,1.696,150,1.696,154,0.032,155,0.046,156,0.032,158,2.107,206,0.89,208,1.577,210,1.252,222,1.252,280,0.951,325,2.107,326,4.64,327,2.107,328,1.891,329,4.04,330,3.888,331,4.04,332,2.395,333,2.395,334,2.395,335,2.395,336,2.395,337,2.635,338,2.128,339,2.962,340,3.448,341,2.395,342,1.166,343,2.832,344,4.077,345,3.448,346,1.891,347,4.077,348,2.832,349,2.832,350,2.832,351,2.107,352,2.832,353,2.832,354,4.077,355,2.832,356,2.832,357,2.107,358,2.832,359,2.832,360,2.107,361,2.832,362,2.832,363,2.832,364,4.077,365,2.107,366,2.395,367,3.448,368,2.395,369,4.077,370,2.832,371,2.832,372,2.107,373,2.832,374,2.832,375,2.832,376,2.832,377,2.832,378,4.139,379,2.832,380,2.832,381,2.832,382,2.832,383,2.832,384,2.832,385,2.832,386,2.832,387,2.832,388,1.017,389,1.891,390,1.72,391,2.832,392,1.454,393,2.395,394,2.832,395,2.832,396,2.832]],["title/classes/AppPage.html",[33,0.405,397,2.498]],["body/classes/AppPage.html",[3,0.249,4,0.208,9,0.208,20,0.208,21,1.209,24,1.046,27,1.125,28,0.026,30,0.577,32,0.249,33,0.577,93,1.314,126,1.715,154,0.054,155,0.065,156,0.054,204,1.812,292,1.715,346,3.19,397,4.29,398,3.553,399,4.039,400,6.435,401,6.435,402,4.777,403,6.694,404,4.777,405,4.039,406,4.777,407,4.777,408,4.777]],["title/guards/AuthGuard.html",[392,1.724,409,2.498]],["body/guards/AuthGuard.html",[3,0.139,4,0.116,9,0.116,11,1.223,20,0.116,21,0.815,23,0.815,24,0.706,27,0.899,28,0.026,30,0.781,31,0.447,32,0.24,33,0.556,93,0.731,130,0.482,154,0.03,155,0.044,156,0.03,171,2.4,175,0.683,176,0.238,177,0.683,190,1.72,199,1.495,200,1.174,204,1.997,206,0.834,210,1.174,213,1.389,222,1.174,228,1.263,257,1.22,262,1.397,264,0.954,274,0.892,277,1.397,278,1.307,280,1.307,281,0.892,283,0.834,284,1.021,285,2.082,288,1.397,289,0.781,290,0.954,291,1.094,292,0.954,301,0.92,303,1.307,309,0.781,312,1.998,337,1.263,338,1.949,342,1.602,388,1.821,390,2.363,392,1.998,410,2.656,411,1.479,412,3.768,413,2.656,414,2.191,415,2.656,416,2.599,417,2.656,418,1.654,419,2.599,420,2.897,421,2.599,422,2.74,423,2.599,424,2.599,425,2.599,426,2.599,427,2.599,428,2.599,429,2.363,430,2.599,431,1.774,432,1.263,433,2.167,434,1.364,435,2.599,436,2.599,437,2.599,438,2.599,439,1.774,440,1.774,441,3.076,442,1.774,443,1.774,444,2.363,445,1.613,446,2.363,447,1.479,448,1.613,449,1.479,450,1.613,451,0.35,452,1.479,453,1.774,454,1.364,455,1.774,456,1.774,457,1.774,458,1.774,459,2.599,460,1.774,461,1.774,462,1.774,463,1.774,464,2.599,465,1.774,466,1.774,467,1.774,468,1.774,469,1.774,470,1.774,471,2.599,472,1.774,473,1.774,474,1.774,475,1.774,476,1.774,477,1.774,478,1.774,479,1.774,480,1.774,481,1.774,482,1.774,483,1.774,484,2.599,485,2.599,486,2.599,487,1.774,488,1.774,489,1.774,490,1.774,491,1.774,492,1.774,493,1.774,494,1.774,495,1.774,496,1.774,497,1.774,498,1.774,499,1.774,500,1.774,501,1.774,502,1.774,503,1.774,504,1.774,505,1.774,506,1.774,507,1.774,508,1.774,509,1.364,510,1.774,511,1.774,512,1.774,513,1.613,514,1.613]],["title/interceptors/AuthInterceptor.html",[337,1.597,515,2.839]],["body/interceptors/AuthInterceptor.html",[3,0.144,4,0.12,9,0.12,11,1.26,20,0.12,21,0.84,23,0.58,24,0.502,27,0.782,28,0.027,30,0.787,31,0.465,32,0.246,33,0.569,93,0.761,130,0.502,154,0.031,155,0.045,156,0.031,171,1.942,175,0.712,176,0.245,177,0.712,190,1.223,199,1.063,200,1.223,204,2.013,206,0.869,210,1.223,213,1.412,222,1.223,228,1.316,257,1.244,262,1.44,264,0.993,274,0.929,277,1.693,278,1.346,280,1.346,281,0.929,283,0.869,284,1.063,285,2.101,288,1.44,289,0.814,290,0.993,291,1.139,292,0.993,301,0.938,303,1.346,309,0.814,312,1.421,337,1.907,338,1.541,342,1.139,388,1.693,392,1.421,411,1.54,412,3.149,414,1.316,416,1.848,418,0.993,419,1.848,420,2.421,421,1.848,422,2.724,423,1.848,424,1.848,425,1.848,426,1.848,427,1.848,428,1.848,429,1.68,430,1.848,431,1.848,432,1.316,433,2.232,434,1.421,435,2.678,436,2.678,437,3.453,438,3.453,439,1.848,440,1.848,441,3.149,442,1.848,443,1.848,444,2.435,445,1.68,446,2.435,447,1.54,448,1.68,449,1.54,450,1.68,451,0.365,452,1.54,453,1.848,454,1.421,455,1.848,456,1.848,457,1.848,458,1.848,459,2.678,460,1.848,461,1.848,462,1.848,463,1.848,464,2.678,465,1.848,466,1.848,467,1.848,468,1.848,469,1.848,470,1.848,471,2.678,472,1.848,473,1.848,474,1.848,475,1.848,476,1.848,477,1.848,478,1.848,479,1.848,480,1.848,481,1.848,482,1.848,483,1.848,484,2.678,485,2.678,486,2.678,487,1.848,488,1.848,489,1.848,490,1.848,491,1.848,492,1.848,493,1.848,494,1.848,495,1.848,496,1.848,497,1.848,498,1.848,499,1.848,500,1.848,501,2.678,502,3.149,503,1.848,504,1.848,505,1.848,506,1.848,507,1.848,508,1.848,509,1.421,510,1.848,511,1.848,512,1.848,513,1.68,514,1.68,516,2.767,517,4.009,518,2.767,519,2.767]],["title/injectables/AuthenticationService.html",[257,0.808,338,1.29]],["body/injectables/AuthenticationService.html",[3,0.129,4,0.108,9,0.108,11,1.161,20,0.108,21,0.775,23,0.775,24,1.106,27,1.143,28,0.026,29,0.89,30,0.772,31,0.417,32,0.231,33,0.534,93,0.682,130,0.889,154,0.028,155,0.042,156,0.028,162,0.671,167,2.245,171,1.821,175,1.262,176,0.299,177,1.262,190,1.095,199,0.952,200,1.095,204,1.969,206,0.778,210,1.095,213,1.541,222,1.095,228,1.178,229,1.095,257,1.179,258,1.178,261,1.095,262,1.76,264,1.327,274,0.832,277,1.327,278,1.241,280,1.241,281,0.832,283,0.778,284,0.952,285,2.047,288,1.327,289,0.728,290,0.89,291,1.02,292,0.89,301,0.998,303,1.241,309,0.728,312,1.272,337,1.178,338,1.699,342,1.02,388,2.047,392,1.272,411,1.379,412,2.953,414,1.178,416,1.655,418,1.327,419,1.655,420,2.271,421,1.655,422,2.77,423,1.655,424,1.655,425,1.655,426,1.655,427,1.655,428,1.655,429,1.504,430,1.655,431,1.655,432,1.178,433,2.058,434,1.272,435,2.469,436,2.469,437,2.469,438,2.469,439,1.655,440,1.655,441,2.953,442,1.655,443,1.655,444,2.245,445,2.685,446,2.245,447,1.379,448,1.504,449,1.379,450,1.504,451,0.327,452,1.379,453,1.655,454,1.272,455,1.655,456,2.953,457,2.469,458,1.655,459,2.469,460,1.655,461,1.655,462,1.655,463,1.655,464,2.469,465,1.655,466,1.655,467,1.655,468,1.655,469,1.655,470,1.655,471,2.469,472,2.469,473,1.655,474,1.655,475,1.655,476,1.655,477,1.655,478,1.655,479,3.275,480,1.655,481,1.655,482,1.655,483,1.655,484,2.469,485,2.469,486,2.469,487,3.275,488,1.655,489,1.655,490,1.655,491,1.655,492,2.469,493,1.655,494,1.655,495,1.655,496,1.655,497,3.275,498,1.655,499,3.275,500,1.655,501,1.655,502,1.655,503,1.655,504,1.655,505,1.655,506,1.655,507,1.655,508,1.655,509,1.272,510,1.655,511,1.655,512,1.655,513,1.504,514,1.504,520,3.697,521,3.697,522,2.478,523,2.478,524,2.478,525,2.478,526,2.478,527,2.478,528,2.478,529,2.478,530,2.478,531,2.478]],["title/interfaces/Course.html",[35,0.565,451,0.443]],["body/interfaces/Course.html",[3,0.256,4,0.214,9,0.214,20,0.214,28,0.025,32,0.256,35,1.117,38,4.153,102,2.734,130,1.204,154,0.055,155,0.066,156,0.055,162,1.064,176,0.358,218,4.031,273,3.28,275,2.171,301,1.222,451,0.648,532,1.763,533,4.153,534,4.911]],["title/components/CourseHomeComponent.html",[0,0.482,137,0.987]],["body/components/CourseHomeComponent.html",[0,0.426,1,0.4,2,0.822,3,0.071,4,0.059,5,0.522,6,0.522,7,0.522,8,0.522,9,0.059,11,0.72,12,1.222,13,0.522,14,2.095,15,1.957,16,0.88,18,0.88,20,0.059,21,0.48,22,1.435,23,0.48,24,1.063,27,0.759,28,0.026,29,1.514,30,0.629,31,0.229,32,0.071,33,0.164,35,0.934,44,1.94,86,1.149,92,1.524,94,0.825,97,1.802,98,1.802,100,2.683,101,1.397,102,1.275,104,1.997,105,0.908,112,1.94,114,1.011,117,1.652,119,1.652,120,1.652,123,1.391,124,0.456,125,1.62,126,0.822,127,0.522,128,1.024,129,0.522,130,0.538,131,0.522,132,0.4,133,2.054,134,0.522,135,0.4,136,0.522,137,1.024,138,0.88,139,0.4,140,0.4,141,0.522,142,0.4,143,0.522,144,0.4,145,0.522,146,0.4,147,0.522,148,0.4,149,0.522,150,0.4,151,0.522,152,0.522,153,0.522,154,0.015,155,0.026,156,0.015,162,0.415,164,3.707,167,1.391,168,1.982,169,0.908,170,2.816,171,1.602,175,0.35,176,0.181,177,0.35,180,1.982,181,2.327,182,2.592,184,1.94,189,1.391,190,1.012,193,1.53,196,1.53,198,2.165,199,1.62,200,1.983,202,0.908,204,1.222,205,1.53,206,0.72,207,0.908,208,0.757,209,1.652,210,0.601,211,1.149,212,1.149,213,1.085,217,1.53,227,0.908,228,1.657,230,0.908,235,1.53,238,1.275,240,0.825,241,0.908,242,0.908,244,0.908,245,0.825,246,0.908,248,1.391,251,1.391,252,0.757,255,1.011,267,2.241,270,1.704,277,0.488,281,0.456,298,1.982,299,2.946,302,0.943,306,2.946,309,1.442,310,2.756,313,1.275,314,3.914,323,1.149,360,4.404,367,1.149,368,1.149,378,1.53,393,1.936,535,5.006,536,1.149,537,2.51,538,1.936,539,2.29,540,2.29,541,3.289,542,3.889,543,2.29,544,2.29,545,2.842,546,5.451,547,2.29,548,2.29,549,4.217,550,3.484,551,3.484,552,4.217,553,2.724,554,1.652,555,2.724,556,2.29,557,1.359,558,3.484,559,2.29,560,2.592,561,5.551,562,2.592,563,1.704,564,3.484,565,2.29,566,1.359,567,2.56,568,3.484,569,3.484,570,1.359,571,1.789,572,1.704,573,1.704,574,2.592,575,1.936,576,2.29,577,2.29,578,3.505,579,1.359,580,2.592,581,5.92,582,3.484,583,2.29,584,1.936,585,1.359,586,2.29,587,2.29,588,2.29,589,2.29,590,1.359,591,3.147,592,1.359,593,1.359,594,1.53,595,1.359,596,1.359,597,1.359,598,2.29,599,2.29,600,2.29,601,2.29,602,1.359,603,4.217,604,1.704,605,2.29,606,1.359,607,2.29,608,3.484,609,1.359,610,2.29,611,1.359,612,1.359,613,2.29,614,1.011,615,1.149,616,1.149,617,1.359,618,1.359,619,1.359,620,1.359,621,1.359,622,1.359,623,1.359,624,1.359,625,1.011,626,1.359,627,1.359,628,1.149,629,1.149,630,1.149,631,1.359,632,1.359,633,1.359,634,1.359,635,1.359,636,1.359,637,1.149,638,1.149,639,1.359,640,1.359,641,2.29,642,2.29,643,1.359,644,1.359,645,1.359,646,1.359,647,2.29,648,2.29,649,1.704,650,1.359,651,2.29,652,1.359,653,1.359,654,1.359,655,1.359,656,2.29,657,2.29,658,1.359,659,1.359,660,1.936,661,2.29,662,1.359,663,2.29,664,1.359,665,1.359,666,1.359,667,2.946,668,4.609,669,3.565,670,2.29,671,2.29,672,2.29,673,5.551,674,5.551,675,2.29,676,2.29,677,1.802,678,3.137,679,1.359,680,1.359,681,1.359,682,1.359,683,1.359,684,1.359,685,1.359,686,1.149,687,1.936,688,1.149,689,1.149,690,1.359,691,1.149]],["title/interfaces/CourseStatus.html",[315,2.243,451,0.443]],["body/interfaces/CourseStatus.html",[3,0.262,4,0.218,9,0.218,20,0.218,28,0.025,30,0.605,32,0.262,35,1.15,154,0.056,155,0.067,156,0.056,162,1.077,176,0.363,301,1.077,304,3.841,315,3.965,451,0.661,532,1.8,692,4.239,693,4.239,694,5.014,695,5.014]],["title/components/HomeComponent.html",[0,0.482,139,0.987]],["body/components/HomeComponent.html",[0,0.767,1,0.761,2,1.371,3,0.135,4,0.113,5,0.994,6,0.994,7,0.994,8,0.994,9,0.113,11,1.2,12,1.868,13,0.994,14,2.454,15,2.293,16,1.467,18,1.467,20,0.113,21,0.8,22,2.062,23,0.8,24,0.969,27,0.745,28,0.026,29,1.629,30,0.605,31,0.435,32,0.135,33,0.312,35,1.019,92,1.329,93,0.712,100,2.158,101,1.918,104,1.96,105,1.728,106,2.188,107,2.188,108,1.728,112,2.126,115,2.188,116,2.318,121,2.755,124,0.869,125,1.467,126,1.371,127,0.994,128,1.473,129,0.994,130,0.823,131,0.994,132,0.761,133,2.076,134,0.994,135,0.761,136,0.994,137,0.761,138,1.467,139,1.473,140,0.761,141,0.994,142,0.761,143,0.994,144,0.761,145,0.994,146,0.761,147,0.994,148,0.761,149,0.994,150,0.761,151,0.994,152,0.994,153,0.994,154,0.029,155,0.043,156,0.029,162,0.823,171,2.38,172,3.973,175,0.666,176,0.158,177,0.666,184,2.126,189,2.318,206,0.813,213,1.168,229,1.144,230,1.728,234,2.188,238,2.126,239,1.728,240,2.318,245,3.244,248,1.571,251,1.571,252,1.441,267,1.816,273,1.728,289,1.123,310,1.816,313,2.126,338,2.221,372,1.925,537,3.836,538,3.228,554,2.788,560,2.84,567,3.394,571,1.96,575,3.228,594,2.55,604,3.726,614,1.925,677,1.571,689,2.188,696,2.188,697,3.861,698,2.541,699,2.588,700,3.818,701,2.588,702,3.818,703,3.818,704,3.818,705,2.588,706,2.588,707,2.126,708,1.925,709,3.818,710,3.818,711,3.818,712,3.818,713,2.588,714,2.588,715,2.188,716,2.188,717,2.188,718,2.588,719,3.818,720,3.818,721,2.55,722,5.589,723,2.588,724,2.588,725,2.588,726,2.588,727,2.588,728,2.188,729,2.588,730,2.588,731,2.588,732,2.588,733,2.588,734,2.588,735,2.588,736,2.588,737,2.588,738,2.588,739,2.588,740,2.588,741,3.228,742,2.588,743,2.188,744,2.588,745,2.588,746,2.188,747,2.588,748,2.588,749,2.588,750,2.588]],["title/interfaces/JWTPayload.html",[451,0.443,452,1.869]],["body/interfaces/JWTPayload.html",[3,0.143,4,0.119,9,0.119,11,1.249,20,0.119,23,0.573,27,0.534,28,0.027,30,0.785,31,0.46,32,0.244,33,0.566,93,0.753,154,0.031,155,0.045,156,0.031,162,0.721,171,1.929,176,0.334,190,1.209,199,1.051,200,1.209,204,2.009,206,0.859,210,1.209,213,1.406,222,1.209,228,1.301,257,1.237,262,1.428,264,0.982,274,0.918,277,1.428,278,1.335,280,1.335,281,0.918,283,0.859,284,1.051,285,2.096,288,1.428,289,0.804,290,0.982,291,1.126,292,0.982,301,1.093,303,1.914,309,1.512,312,1.404,337,1.301,338,1.528,342,1.126,388,1.682,392,1.404,411,1.523,412,3.129,414,1.301,416,1.827,418,0.982,419,1.827,420,2.405,421,1.827,422,2.716,423,1.827,424,1.827,425,1.827,426,1.827,427,1.827,428,1.827,429,1.661,430,1.827,431,1.827,432,1.301,433,2.214,434,1.404,435,2.656,436,2.656,437,2.656,438,2.656,439,1.827,440,1.827,441,3.129,442,1.827,443,1.827,444,2.414,445,1.661,446,2.414,447,1.523,448,1.661,449,1.523,450,1.661,451,0.361,452,2.214,453,3.435,454,2.641,455,3.435,456,1.827,457,1.827,458,1.827,459,2.656,460,1.827,461,1.827,462,1.827,463,1.827,464,2.656,465,1.827,466,1.827,467,1.827,468,1.827,469,1.827,470,1.827,471,2.656,472,1.827,473,1.827,474,1.827,475,1.827,476,1.827,477,1.827,478,1.827,479,1.827,480,1.827,481,1.827,482,1.827,483,1.827,484,2.656,485,2.656,486,2.656,487,1.827,488,1.827,489,1.827,490,1.827,491,1.827,492,1.827,493,1.827,494,1.827,495,1.827,496,1.827,497,1.827,498,1.827,499,1.827,500,1.827,501,1.827,502,1.827,503,1.827,504,1.827,505,1.827,506,1.827,507,1.827,508,1.827,509,1.404,510,1.827,511,1.827,512,1.827,513,1.661,514,1.661,532,0.982]],["title/interfaces/Login.html",[388,1.206,451,0.443]],["body/interfaces/Login.html",[3,0.263,4,0.219,9,0.219,20,0.219,28,0.025,32,0.263,154,0.057,155,0.067,156,0.057,162,1.08,176,0.364,301,1.229,309,1.926,388,2.138,451,0.665,532,1.81,751,4.262,752,3.978]],["title/components/LoginComponent.html",[0,0.482,140,0.987]],["body/components/LoginComponent.html",[0,0.551,1,0.58,2,1.115,3,0.103,4,0.086,5,0.758,6,0.758,7,0.758,8,0.758,9,0.086,11,0.976,12,1.581,13,0.758,14,2.317,15,2.165,16,1.193,18,1.193,20,0.086,21,0.651,22,1.792,23,0.651,24,0.988,27,0.606,28,0.026,29,1.115,30,0.635,31,0.332,32,0.103,33,0.238,35,0.646,72,1.669,92,1.594,94,1.198,97,1.885,98,1.885,100,2.728,101,1.805,104,2.235,105,1.318,108,1.318,110,1.198,112,2.137,114,1.468,117,1.729,119,2.423,120,2.423,121,1.198,123,1.885,124,0.663,125,1.193,126,1.115,127,0.758,128,1.28,129,0.758,130,0.696,131,0.758,132,0.58,133,0.709,134,0.758,135,0.58,136,0.758,137,0.58,138,1.193,139,0.58,140,1.28,141,0.758,142,0.58,143,0.758,144,0.58,145,0.758,146,0.58,147,0.758,148,0.58,149,0.758,150,0.58,151,0.758,152,0.758,153,0.758,154,0.022,155,0.049,156,0.022,162,0.563,164,3.161,165,3.521,166,3.238,167,1.885,168,2.564,169,1.318,170,3.357,171,2.165,175,0.799,176,0.234,177,0.508,180,3.638,181,3.161,187,2.625,189,2.331,190,1.924,196,2.564,198,1.971,199,1.193,200,2.092,202,1.318,204,1.487,205,2.074,206,0.62,207,1.318,208,1.099,209,1.099,210,0.872,213,1.218,216,1.468,217,2.074,221,1.468,222,1.372,224,2.31,227,1.318,228,1.477,229,2.324,232,1.468,235,3.161,238,2.137,239,2.074,240,2.331,241,1.318,242,1.318,243,1.468,245,2.643,246,2.074,247,1.318,248,1.198,251,1.885,252,2.137,267,2.391,285,0.663,301,0.563,309,1.392,338,2.021,372,1.468,388,2.237,420,1.013,514,1.198,553,2.643,554,2.137,562,2.31,563,2.31,571,2.235,580,2.31,591,2.907,594,2.074,614,1.468,649,2.31,660,1.669,677,1.885,678,1.468,686,1.669,688,3.246,698,1.477,708,1.475,728,1.669,741,2.625,743,1.669,752,2.874,753,1.669,754,3.838,755,3.105,756,3.838,757,3.838,758,4.353,759,4.353,760,3.105,761,1.973,762,1.973,763,2.625,764,2.625,765,3.838,766,3.105,767,3.246,768,3.105,769,3.105,770,3.105,771,2.625,772,1.885,773,1.885,774,2.625,775,1.973,776,3.681,777,3.105,778,1.973,779,2.31,780,1.973,781,1.973,782,1.669,783,1.973,784,1.669,785,1.973,786,1.973,787,1.669,788,1.973,789,1.669,790,1.973,791,1.973,792,1.669,793,1.669,794,1.669,795,1.669,796,1.669,797,1.973,798,2.855,799,1.973,800,1.973,801,1.973,802,1.973,803,1.669,804,1.973,805,1.973,806,1.973,807,1.973,808,1.973,809,1.973,810,1.973,811,3.105,812,3.105,813,3.105,814,1.973,815,1.973,816,1.973,817,1.973,818,1.973,819,1.973,820,1.973,821,1.973]],["title/components/LogoutComponent.html",[0,0.482,142,0.987]],["body/components/LogoutComponent.html",[0,0.772,1,1.04,2,1.709,3,0.185,4,0.154,5,1.359,6,1.359,7,1.359,8,1.359,9,0.154,11,1.496,12,2.215,13,1.359,14,2.586,15,2.417,16,1.829,18,1.829,20,0.154,21,0.997,22,2.37,23,0.997,24,0.863,27,0.69,28,0.026,29,1.709,30,0.65,31,0.595,32,0.185,33,0.427,35,0.595,101,1.27,124,1.187,125,1.829,126,1.709,127,1.359,128,1.692,129,1.359,130,0.976,131,1.359,132,1.04,133,1.27,134,1.359,135,1.04,136,1.359,137,1.04,138,1.829,139,1.04,140,1.04,141,1.359,142,1.692,143,1.359,144,1.04,145,1.359,146,1.04,147,1.359,148,1.04,149,1.359,150,1.04,151,1.359,152,1.359,153,1.359,154,0.04,155,0.054,156,0.04,171,2.473,175,0.91,176,0.216,177,0.91,190,2.104,206,1.111,213,1.225,342,1.96,388,1.709,390,3.757,414,2.738,513,2.147,553,2.147,629,2.99,772,2.89,773,2.89,822,2.99,823,5.38,824,4.76,825,3.536,826,3.536,827,3.536,828,4.76,829,3.541,830,4.76,831,4.025,832,3.536,833,3.536,834,2.99,835,4.76]],["title/injectables/LogoutService.html",[257,0.808,414,1.597]],["body/injectables/LogoutService.html",[3,0.222,4,0.185,9,0.185,20,0.185,21,1.124,23,1.124,24,0.973,27,0.829,28,0.026,29,1.525,30,0.746,31,0.715,32,0.222,33,0.513,93,1.169,130,0.771,154,0.048,155,0.06,156,0.048,175,1.093,176,0.328,177,1.093,213,1.093,257,1.291,258,2.021,261,1.878,262,2.218,264,1.926,267,2.552,274,1.427,277,1.525,278,1.802,280,1.427,281,1.427,283,1.335,284,1.632,285,1.802,288,1.525,289,1.249,290,1.525,291,1.749,292,1.525,342,2.209,390,3.751,414,2.552,429,3.258,772,3.258,773,3.258,829,3.991,836,3.16,837,4.248,838,4.248,839,3.16,840,3.592,841,4.248,842,4.248,843,4.248,844,4.248]],["title/interfaces/Message.html",[451,0.443,545,1.484]],["body/interfaces/Message.html",[3,0.218,4,0.182,9,0.182,20,0.182,28,0.026,32,0.218,35,0.982,154,0.047,155,0.06,156,0.047,162,0.964,176,0.419,301,1.208,302,2.404,303,2.176,310,2.527,314,3.548,418,2.205,451,0.552,532,1.502,545,2.91,578,4.343,594,4.102,698,2.777,845,3.537,846,5.838,847,5.838,848,5.838,849,3.548,850,3.952,851,5.313,852,4.183,853,4.183,854,4.183,855,4.183,856,4.183,857,4.183,858,4.183,859,4.183,860,4.183,861,3.537]],["title/interfaces/MessageSent.html",[451,0.443,862,2.243]],["body/interfaces/MessageSent.html",[3,0.257,4,0.214,9,0.214,20,0.214,28,0.025,32,0.257,93,1.355,117,2.741,154,0.055,155,0.066,156,0.055,162,1.065,176,0.359,275,2.176,301,1.065,418,2.109,451,0.775,532,1.768,545,2.775,637,5.308,638,5.308,667,4.163,668,4.163,669,4.163,707,2.741,862,3.923,863,4.163,864,4.924,865,4.924]],["title/injectables/MessageService.html",[257,0.808,555,2.039]],["body/injectables/MessageService.html",[3,0.196,4,0.164,9,0.164,20,0.164,21,1.04,23,1.04,24,1.07,27,1.083,28,0.026,30,0.775,31,0.633,32,0.196,33,0.455,93,1.036,128,1.107,130,1.07,154,0.042,155,0.056,156,0.042,175,1.519,176,0.375,177,1.519,204,1.744,213,0.969,229,1.664,230,2.515,257,1.194,258,1.791,261,1.664,262,1.993,264,1.352,274,1.264,277,2.119,278,1.666,280,1.264,281,1.264,283,1.183,284,1.447,285,1.982,288,1.352,289,1.107,290,1.352,291,1.55,292,1.352,293,2.286,301,0.9,302,2.286,303,2.115,319,2.801,545,2.454,555,3.014,616,3.184,862,3.708,866,2.801,867,4.963,868,4.963,869,4.963,870,3.765,871,3.765,872,3.765,873,3.765,874,3.765,875,3.765,876,3.765,877,2.515,878,3.765,879,3.765,880,3.765,881,4.963,882,4.196,883,3.765,884,3.765,885,3.765,886,3.765,887,3.765,888,3.765,889,3.765,890,3.765,891,3.765,892,3.765,893,3.765]],["title/interfaces/ReadBy.html",[451,0.443,877,2.243]],["body/interfaces/ReadBy.html",[3,0.265,4,0.221,9,0.221,20,0.221,28,0.024,32,0.265,154,0.057,155,0.067,156,0.057,162,1.085,176,0.31,275,2.245,276,3.393,301,1.085,308,3.393,309,1.931,451,0.789,532,1.824,545,2.245,850,3.779,877,3.996,894,4.295,895,4.295,896,4.295]],["title/components/ReadComponent.html",[0,0.482,144,0.987]],["body/components/ReadComponent.html",[0,0.721,1,0.912,2,1.562,3,0.162,4,0.135,5,1.192,6,1.192,7,1.192,8,1.192,9,0.135,11,1.367,12,2.069,13,1.192,14,2.534,15,2.368,16,1.672,18,1.672,20,0.135,21,0.911,22,2.242,23,0.65,24,0.988,27,0.605,28,0.026,29,1.562,30,0.692,31,0.522,32,0.162,33,0.374,35,0.522,92,1.593,100,1.475,101,1.114,102,1.727,104,1.593,124,1.042,125,1.672,126,1.562,127,1.192,128,1.601,129,1.192,130,0.911,131,1.192,132,0.912,133,1.114,134,1.192,135,0.912,136,1.192,137,0.912,138,1.672,139,0.912,140,0.912,141,1.192,142,0.912,143,1.192,144,1.601,145,1.192,146,0.912,147,1.192,148,0.912,149,1.192,150,0.912,151,1.93,152,1.192,153,1.192,154,0.035,155,0.049,156,0.035,162,0.789,175,0.798,176,0.307,177,0.798,184,2.422,206,0.975,209,2.422,213,1.119,238,1.727,256,2.623,261,1.371,262,1.804,264,1.114,278,1.042,280,1.042,283,0.975,293,1.884,302,2.242,308,2.905,378,2.905,509,1.593,545,2.835,553,3.707,555,3.482,572,3.236,573,3.236,574,3.236,604,4.051,615,2.623,625,2.307,628,2.623,691,2.623,707,3.032,850,4.634,895,4.604,897,2.623,898,5.024,899,4.35,900,4.35,901,4.35,902,4.35,903,3.102,904,4.35,905,3.102,906,2.623,907,3.102,908,3.102,909,3.102,910,3.102,911,3.102,912,3.102,913,2.623,914,4.35,915,3.102]],["title/components/RegisterComponent.html",[0,0.482,146,0.987]],["body/components/RegisterComponent.html",[0,0.528,1,0.544,2,1.06,3,0.097,4,0.081,5,0.711,6,0.711,7,0.711,8,0.711,9,0.081,11,0.928,12,1.516,13,0.711,14,2.282,15,2.133,16,1.134,18,1.134,20,0.081,21,0.619,22,1.73,23,0.619,24,1.021,27,0.576,28,0.026,29,1.06,30,0.554,31,0.312,32,0.097,33,0.224,35,0.312,44,1.031,92,1.516,94,2.236,97,1.793,98,1.793,100,2.534,101,1.508,102,1.644,104,1.516,108,1.237,110,1.124,112,1.644,116,1.124,117,1.644,119,2.339,120,2.339,121,1.124,123,1.124,124,0.622,125,1.134,126,1.06,127,0.711,128,1.349,129,0.711,130,0.668,131,0.711,132,0.544,133,0.665,134,0.711,135,0.544,136,0.711,137,0.544,138,1.134,139,0.544,140,0.544,141,0.711,142,0.544,143,0.711,144,0.544,145,0.711,146,1.235,147,0.711,148,0.544,149,0.711,150,0.544,151,0.711,152,0.711,153,0.711,154,0.021,155,0.041,156,0.021,162,0.535,164,3.065,165,3.413,166,3.125,167,1.793,168,2.459,169,1.237,170,3.266,171,2.112,175,0.477,176,0.225,177,0.477,180,3.838,181,1.972,182,2.196,184,1.644,189,1.124,190,1.305,196,2.805,198,1.89,199,1.415,200,2.161,202,1.237,204,1.674,205,2.805,206,0.582,207,1.237,208,1.031,209,2.339,210,0.818,213,1.181,216,1.377,217,2.805,218,3.49,221,1.377,222,1.305,224,2.196,227,1.237,228,0.881,229,0.818,232,1.377,235,3.667,236,2.496,237,3.113,238,2.05,239,1.972,240,1.793,241,1.237,242,1.237,243,1.377,244,1.237,245,1.124,246,1.237,247,1.237,248,1.124,249,1.566,250,1.566,251,1.124,252,2.05,253,1.377,254,1.566,255,1.377,267,1.404,285,0.991,304,1.793,309,1.349,310,0.881,338,1.134,339,2.634,357,1.377,388,1.508,389,3.558,420,0.951,454,2.356,545,1.305,562,2.196,563,2.196,571,2.157,591,1.972,649,2.196,677,1.124,708,1.134,752,3.115,763,2.496,764,2.496,767,1.566,774,2.496,776,4.135,779,2.739,784,3.113,787,1.566,792,1.566,793,1.566,794,1.566,795,1.566,796,3.88,798,2.196,803,1.566,831,2.496,834,1.566,916,1.377,917,3.681,918,2.952,919,2.952,920,2.952,921,3.681,922,3.681,923,2.952,924,1.852,925,1.852,926,2.952,927,3.552,928,2.952,929,2.952,930,2.952,931,4.759,932,2.952,933,3.552,934,3.88,935,4.2,936,2.952,937,2.952,938,2.952,939,2.952,940,1.852,941,2.952,942,1.852,943,2.952,944,2.952,945,1.852,946,4.2,947,1.852,948,1.852,949,1.852,950,1.852,951,2.952,952,1.566,953,1.566,954,1.566,955,1.852,956,1.566,957,1.566,958,1.566,959,1.566,960,1.852,961,1.566,962,1.852,963,1.852,964,2.952,965,1.852,966,1.852,967,1.852,968,1.852,969,1.852,970,1.852,971,1.852,972,1.852,973,1.852,974,1.852,975,1.852,976,1.852,977,1.852,978,1.852,979,1.852,980,2.952,981,1.852,982,1.852,983,2.952,984,1.852,985,1.852,986,1.852,987,2.952,988,1.852,989,1.852,990,1.852,991,1.852,992,2.952,993,1.852]],["title/components/TopBarComponent.html",[0,0.482,148,0.987]],["body/components/TopBarComponent.html",[0,0.729,1,0.932,2,1.585,3,0.165,4,0.138,5,1.218,6,1.218,7,1.218,8,1.218,9,0.138,11,1.387,12,2.092,13,1.218,14,2.543,15,2.376,16,1.697,18,1.697,20,0.138,21,0.925,22,2.263,23,1.065,24,1.048,27,0.861,28,0.026,29,1.824,30,0.613,31,0.533,32,0.165,33,0.383,35,0.533,41,2.949,59,4.647,101,2.249,119,1.764,120,1.764,124,1.064,125,1.697,126,1.585,127,1.218,128,1.616,129,1.218,130,0.801,131,1.218,132,0.932,133,1.138,134,1.218,135,0.932,136,1.218,137,0.932,138,1.697,139,0.932,140,0.932,141,1.218,142,0.932,143,1.218,144,0.932,145,1.218,146,0.932,147,1.218,148,1.616,149,1.218,150,0.932,151,1.218,152,1.218,153,1.218,162,0.801,176,0.193,198,1.627,199,1.218,252,1.764,253,2.357,267,2.1,277,1.138,281,1.064,304,2.681,312,2.267,342,1.818,351,4.452,388,1.585,389,2.949,390,2.681,418,1.138,420,2.822,571,2.267,677,1.924,708,2.112,772,2.681,773,2.681,779,2.357,829,3.284,927,4.647,994,5.06,995,2.679,996,4.415,997,5.081,998,4.415,999,5.496,1000,4.415,1001,5.496,1002,4.415,1003,3.168,1004,4.415,1005,4.415,1006,3.168,1007,3.168,1008,3.168,1009,3.168,1010,2.357,1011,3.168,1012,3.168,1013,3.168,1014,3.168,1015,3.168,1016,3.168]],["title/classes/User.html",[33,0.405,708,1.29]],["body/classes/User.html",[3,0.247,4,0.206,9,0.206,20,0.206,24,1.163,28,0.025,32,0.247,33,0.571,154,0.053,155,0.065,156,0.053,162,1.04,176,0.392,186,3.999,275,2.091,301,1.211,309,1.814,313,2.633,398,3.518,418,2.059,454,3.168,567,2.872,698,2.935,707,2.633,708,2.371,752,3.747,1017,3.999,1018,4.73,1019,4.73,1020,4.73,1021,4.73,1022,4.73]],["title/interfaces/UserMy.html",[432,1.597,451,0.443]],["body/interfaces/UserMy.html",[3,0.218,4,0.182,9,0.182,20,0.182,28,0.026,30,0.505,32,0.218,35,0.894,154,0.047,155,0.06,156,0.047,162,0.964,176,0.375,275,1.849,301,1.059,302,2.188,303,1.961,310,2.527,312,2.728,313,3.42,314,3.548,418,2.096,422,2.715,432,2.527,451,0.77,532,1.502,567,3.73,697,4.327,698,2.921,707,2.958,708,2.56,721,3.548,849,3.899,1023,2.794,1024,3.537,1025,5.313,1026,5.313,1027,5.313,1028,5.313,1029,5.313,1030,4.492,1031,5.313]],["title/interfaces/UserMyList.html",[451,0.443,1032,2.243]],["body/interfaces/UserMyList.html",[3,0.236,4,0.197,9,0.197,20,0.197,28,0.026,30,0.547,32,0.236,35,1.063,44,3.108,154,0.051,155,0.063,156,0.051,162,1.013,176,0.396,275,2.002,301,1.177,303,2.033,309,1.78,418,2.173,422,2.793,451,0.799,532,1.626,697,4.22,698,3.006,708,2.428,721,3.729,849,4.043,896,3.829,1032,3.729,1033,3.829,1034,4.721]],["title/interfaces/UserReal.html",[451,0.443,1035,2.243]],["body/interfaces/UserReal.html",[3,0.24,4,0.2,9,0.2,20,0.2,28,0.026,32,0.24,154,0.052,155,0.063,156,0.052,162,1.022,176,0.405,301,1.271,302,2.615,303,2.046,309,1.867,451,0.606,454,3.261,532,1.649,752,3.856,1023,3.068,1035,3.762,1036,3.884,1037,6.35,1038,6.35]],["title/injectables/UserService.html",[257,0.808,339,1.724]],["body/injectables/UserService.html",[3,0.195,4,0.163,9,0.163,20,0.163,21,1.034,23,0.783,24,1.067,27,1.079,28,0.026,30,0.786,31,0.629,32,0.195,33,0.451,93,1.028,128,1.626,130,1.067,154,0.042,155,0.056,156,0.042,175,1.514,176,0.374,177,1.514,204,1.738,229,1.651,257,1.188,258,1.777,261,1.651,262,2.112,264,1.773,274,1.658,277,2.112,278,1.658,280,1.254,281,1.254,283,1.174,284,1.436,285,1.658,288,1.341,289,1.098,290,1.341,291,1.538,292,1.341,301,0.896,302,2.033,303,1.976,309,1.452,319,2.779,339,2.535,389,3.298,432,1.777,433,2.08,509,1.918,708,2.415,782,3.159,882,3.159,1010,2.779,1032,2.495,1039,2.779,1040,4.937,1041,4.937,1042,3.736,1043,3.736,1044,3.736,1045,3.736,1046,3.736,1047,4.937,1048,3.736,1049,3.736,1050,3.736,1051,2.779,1052,2.779,1053,3.736,1054,3.736,1055,4.937,1056,3.736,1057,3.736,1058,3.736,1059,3.736]],["title/interfaces/UserToken.html",[434,1.724,451,0.443]],["body/interfaces/UserToken.html",[3,0.244,4,0.203,9,0.203,20,0.203,28,0.025,30,0.564,32,0.244,35,0.957,154,0.053,155,0.064,156,0.053,162,1.032,176,0.4,301,1.188,303,2.061,418,2.204,422,2.823,434,2.922,451,0.616,532,1.678,697,4.266,698,3.038,708,2.454,849,4.099,1023,3.12,1060,3.951,1061,6.137,1062,4.672]],["title/components/UsersComponent.html",[0,0.482,150,0.987]],["body/components/UsersComponent.html",[0,0.661,1,0.78,2,1.396,3,0.138,4,0.115,5,1.019,6,1.019,7,1.019,8,1.019,9,0.115,11,1.221,12,1.895,13,1.019,14,2.466,15,2.304,16,1.494,18,1.494,20,0.115,21,0.815,22,2.087,23,0.556,24,1.023,27,0.759,28,0.026,29,1.652,30,0.651,31,0.446,32,0.138,33,0.32,35,0.98,44,2.164,93,0.73,100,1.849,101,0.952,122,2.243,123,1.61,124,0.891,125,1.494,126,1.396,127,1.019,128,1.49,129,1.019,130,0.919,131,1.019,132,0.78,133,0.952,134,1.019,135,0.78,136,1.019,137,0.78,138,1.494,139,0.78,140,0.78,141,1.019,142,0.78,143,1.019,144,0.78,145,1.019,146,0.78,147,1.019,148,0.78,149,1.019,150,1.49,151,2.073,152,1.019,153,1.019,154,0.03,155,0.044,156,0.03,162,0.705,175,1,176,0.344,177,1,206,0.833,209,2.164,213,1,261,1.172,262,1.652,264,0.952,267,2.411,274,0.891,275,1.172,276,3.385,278,1.305,280,0.891,283,0.833,285,0.891,288,0.952,289,0.78,290,0.952,293,1.61,294,1.771,301,0.705,302,1.601,308,2.596,309,1.658,310,2.411,313,2.164,339,3.13,357,1.973,378,2.596,418,0.952,509,1.362,541,3.287,553,3.538,560,2.892,567,3.424,571,1.996,572,2.892,573,2.892,574,2.892,584,2.243,625,1.973,630,2.243,698,2.411,715,2.243,716,2.243,717,2.243,721,3.074,771,3.287,772,2.361,773,2.361,798,2.892,861,2.243,906,2.243,913,2.243,1034,3.287,1063,1.973,1064,4.602,1065,3.887,1066,5.068,1067,3.887,1068,3.887,1069,2.652,1070,2.652,1071,3.887,1072,3.887,1073,2.652,1074,3.887,1075,5.639,1076,3.887,1077,3.287,1078,3.887,1079,3.887,1080,3.887,1081,3.887,1082,3.887,1083,2.652,1084,2.652,1085,3.887,1086,2.652,1087,2.652,1088,2.652,1089,2.652,1090,2.652,1091,5.068,1092,2.652,1093,2.652]],["title/injectables/UserwhoService.html",[257,0.808,554,1.869]],["body/injectables/UserwhoService.html",[3,0.204,4,0.171,9,0.171,20,0.171,21,1.067,23,1.067,24,1.087,27,1.105,28,0.026,30,0.769,31,0.659,32,0.204,33,0.473,35,0.659,93,1.078,130,0.924,154,0.044,155,0.057,156,0.044,175,1.311,176,0.346,177,1.311,204,1.779,213,1.009,257,1.225,258,1.864,261,1.732,262,2.152,264,1.829,274,1.711,277,1.407,278,1.711,280,1.316,281,1.316,282,2.915,283,1.601,284,1.506,285,2.086,287,2.915,288,1.407,289,1.152,290,1.407,291,1.614,292,1.407,294,2.617,302,2.098,303,1.711,304,3.093,433,2.182,554,2.836,1035,2.617,1052,2.915,1094,2.915,1095,5.993,1096,3.919,1097,3.919,1098,3.919,1099,3.919,1100,3.919,1101,3.919,1102,2.915,1103,5.094,1104,3.919,1105,3.919,1106,3.919,1107,5.094,1108,3.919]],["title/coverage.html",[1109,3.886]],["body/coverage.html",[0,0.907,1,0.803,9,0.119,10,2.31,28,0.026,33,0.48,35,0.46,110,2.412,116,4.207,132,0.803,135,0.803,137,0.803,139,0.803,140,0.803,142,0.803,144,0.803,146,0.803,148,0.803,150,0.803,154,0.031,155,0.045,156,0.031,157,2.31,158,2.032,159,2.31,173,1.824,176,0.167,247,1.824,257,1.414,259,3.647,260,3.647,274,2.023,283,0.858,286,2.032,289,0.803,298,1.824,315,1.824,320,2.31,337,1.299,338,1.05,339,1.402,351,2.032,360,2.032,388,0.981,392,1.402,397,2.032,399,2.31,409,2.032,411,3.273,414,1.299,432,1.299,434,1.402,447,1.521,449,1.521,451,0.834,452,1.521,515,2.31,533,2.31,535,2.31,536,2.31,545,1.207,554,1.521,555,1.659,571,3.474,678,2.032,687,2.31,692,2.31,693,2.31,696,2.31,708,1.05,746,3.958,751,2.31,753,2.31,822,2.31,836,3.482,839,2.032,845,2.31,862,1.824,863,2.31,866,2.955,877,1.824,894,2.31,897,2.31,916,3.482,994,2.31,995,2.31,1017,2.31,1023,3.126,1024,2.31,1032,1.824,1033,2.31,1035,1.824,1036,2.31,1039,3.482,1051,2.032,1060,2.31,1063,2.955,1094,3.482,1102,2.032,1109,2.31,1110,2.731,1111,2.731,1112,2.731,1113,5.46,1114,5.88,1115,5.697,1116,2.731,1117,2.731,1118,2.731,1119,2.731,1120,2.731,1121,2.731,1122,2.731,1123,2.731,1124,2.731,1125,2.731,1126,2.731,1127,3.972,1128,2.731,1129,2.731,1130,2.731,1131,2.731,1132,2.731,1133,2.731,1134,2.731,1135,2.731,1136,2.31,1137,4.681,1138,2.31,1139,6.692,1140,2.731,1141,5.139,1142,3.359,1143,2.31,1144,2.731,1145,2.731,1146,2.731,1147,2.31,1148,3.359,1149,2.31,1150,3.359,1151,2.31,1152,2.31,1153,2.731,1154,2.731]],["title/dependencies.html",[328,2.7,1155,2.798]],["body/dependencies.html",[28,0.026,31,0.734,154,0.049,155,0.061,156,0.049,206,1.371,208,2.43,281,1.465,328,2.915,330,4.428,345,4.614,346,3.644,365,3.246,366,3.69,422,1.929,444,3.313,445,3.313,446,2.65,1010,3.246,1156,4.364,1157,6.775,1158,4.364,1159,5.456,1160,4.364,1161,4.364,1162,4.364,1163,4.364,1164,4.364,1165,4.364,1166,4.364,1167,4.364,1168,4.364,1169,4.364,1170,4.364,1171,4.364,1172,4.364,1173,4.364,1174,4.364,1175,4.364,1176,4.364,1177,4.364,1178,4.364,1179,4.364,1180,4.364,1181,4.364,1182,4.364,1183,4.364,1184,4.364,1185,4.364,1186,4.364,1187,4.364,1188,4.364,1189,4.364]],["title/index.html",[20,0.122,1190,2.798,1191,2.798]],["body/index.html",[0,0.854,4,0.19,15,1.563,28,0.02,36,4.607,41,2.908,130,0.79,154,0.049,155,0.061,156,0.049,218,2.644,289,1.28,342,1.793,365,4.94,405,3.682,591,2.908,1030,3.682,1077,4.607,1192,4.354,1193,5.947,1194,5.947,1195,4.354,1196,4.354,1197,4.354,1198,5.449,1199,6.416,1200,4.354,1201,4.354,1202,4.354,1203,4.354,1204,4.354,1205,4.354,1206,4.354,1207,4.354,1208,4.354,1209,5.947,1210,5.947,1211,4.354,1212,6.416,1213,4.354,1214,4.354,1215,4.354,1216,4.354,1217,4.354,1218,3.682,1219,5.449,1220,5.449,1221,6.232,1222,4.354,1223,5.449,1224,4.354,1225,6.232,1226,4.354,1227,4.354,1228,5.947,1229,4.354,1230,4.354,1231,4.354]],["title/modules.html",[327,3.418]],["body/modules.html",[28,0.023,154,0.061,155,0.07,156,0.061,326,3.613,327,4.024,346,3.613,1232,5.409,1233,5.409,1234,5.409]],["title/overview.html",[1235,3.886]],["body/overview.html",[1,1.699,2,1.47,28,0.026,124,1.375,132,1.699,135,1.926,137,1.699,139,1.699,140,1.699,142,1.699,144,1.699,146,1.699,148,1.699,150,1.699,154,0.046,155,0.059,156,0.046,244,2.734,258,1.947,325,3.898,326,4.742,328,2.734,329,3.462,330,3.046,331,3.462,332,3.462,333,3.462,334,3.462,335,3.462,336,3.462,337,2.749,338,2.221,339,2.968,340,4.431,341,3.462,342,1.686,398,3.046,409,3.046,532,1.47,1235,3.462,1236,4.431,1237,5.24,1238,4.094]],["title/miscellaneous/variables.html",[1239,2.366,1240,3.418]],["body/miscellaneous/variables.html",[20,0.125,28,0.026,44,1.6,52,2.431,93,1.681,154,0.032,155,0.054,156,0.032,176,0.416,198,3.483,199,2.607,200,1.271,218,2.503,222,1.822,259,2.753,260,3.721,270,2.138,273,4.215,274,2.23,278,2.051,283,1.295,284,1.105,286,3.066,287,2.138,288,2.193,289,1.796,290,2.193,301,0.748,310,1.367,411,1.6,422,1.822,447,2.294,448,1.745,449,2.294,450,1.745,578,2.138,580,2.138,707,1.6,789,3.485,836,2.138,839,3.066,840,2.431,866,2.138,916,2.138,931,2.431,933,3.485,934,4.074,952,2.431,953,2.431,954,2.431,956,2.431,957,2.431,958,2.431,959,2.431,961,2.431,1039,2.138,1051,3.066,1052,3.066,1063,2.138,1094,2.138,1102,3.066,1136,3.485,1138,3.485,1142,2.431,1143,3.485,1147,2.431,1148,4.45,1149,2.431,1150,2.431,1151,3.485,1152,3.485,1218,3.485,1236,2.431,1239,2.431,1240,2.431,1241,4.121,1242,4.121,1243,4.818,1244,2.874,1245,2.874,1246,4.121,1247,4.121,1248,2.874,1249,4.818,1250,4.121,1251,2.874,1252,4.121,1253,2.874,1254,2.874,1255,2.874,1256,2.874,1257,2.874,1258,2.874,1259,2.874,1260,2.874,1261,2.874,1262,2.874,1263,2.874,1264,2.874,1265,2.874]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["0.10.3",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["0.5sec",{"_index":1005,"title":{},"body":{"components/TopBarComponent.html":{}}}],["0/1",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1236,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.9",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["1.14.1",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":240,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["10.2.6",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":746,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["10px",{"_index":251,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["11",{"_index":1237,"title":{},"body":{"overview.html":{}}}],["12.12.67",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["1200px",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{}}}],["13/18",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":676,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["15px",{"_index":686,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["15vw",{"_index":747,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["190050037",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["190050069",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["190050117",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["190100036",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["1px",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":244,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":678,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["20px",{"_index":677,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["25",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{}}}],["28",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["2]\\d[a",{"_index":956,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/UsersComponent.html":{}}}],["3.1.2",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["3.5.14",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["30px",{"_index":743,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["33",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":242,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["4.5.3",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":691,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{}}}],["40px",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["5/9",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["50px",{"_index":688,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["55",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["576px",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["5px",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["6",{"_index":992,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6.1.0",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":687,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["66",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1238,"title":{},"body":{"overview.html":{}}}],["70",{"_index":675,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["72",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{}}}],["8",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{}}}],["80",{"_index":247,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["9.1.1",{"_index":1196,"title":{},"body":{"index.html":{}}}],["9.1.12",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["992px",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{}}}],["9]\\d{6",{"_index":958,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["_models",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["_models/course",{"_index":282,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/UserwhoService.html":{}}}],["_models/list_of_student",{"_index":1049,"title":{},"body":{"injectables/UserService.html":{}}}],["_models/login",{"_index":431,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["_models/message",{"_index":616,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["_models/message_sent",{"_index":879,"title":{},"body":{"injectables/MessageService.html":{}}}],["_models/read_by",{"_index":878,"title":{},"body":{"injectables/MessageService.html":{}}}],["_models/user",{"_index":433,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["a_s_l",{"_index":539,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_s_l=false",{"_index":621,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_t_l",{"_index":540,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_t_l=false",{"_index":622,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["about'},{'name",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["access",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":167,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["account",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":553,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["activatedroute:activatedroute",{"_index":625,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["actual_component",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["add_course_button",{"_index":744,"title":{},"body":{"components/HomeComponent.html":{}}}],["add_course_url",{"_index":271,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["add_course_url=course_url",{"_index":296,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse",{"_index":172,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"components/HomeComponent.html":{}}}],["addcourse',component",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["addcourse(data",{"_index":265,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse(data:course",{"_index":295,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse:addcourseservice",{"_index":214,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["addcoursecomponent",{"_index":132,"title":{"components/AddCourseComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addcoursecomponent,canactivate:[authguard",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["addcourseservice",{"_index":173,"title":{"injectables/AddCourseService.html":{}},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"coverage.html":{}}}],["added",{"_index":193,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["adding",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adds",{"_index":306,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["addstudent",{"_index":549,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addta",{"_index":550,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addtocourse",{"_index":299,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["addtocourse(username",{"_index":300,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["addtocourse(username:string,id:number,status:string",{"_index":316,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["addtocourse:addtocourseservice",{"_index":627,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addtocourseservice",{"_index":298,"title":{"injectables/AddToCourseService.html":{}},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["al",{"_index":993,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["alerts",{"_index":564,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["alertservice",{"_index":964,"title":{},"body":{"components/RegisterComponent.html":{}}}],["align",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["allowed",{"_index":582,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["allowed,else",{"_index":953,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{}}}],["already",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["android",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{}}}],["angular",{"_index":1193,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":280,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["angular/compiler",{"_index":1010,"title":{},"body":{"components/TopBarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":208,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["angular/material/expansion",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["angular/platform",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":206,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["another",{"_index":712,"title":{},"body":{"components/HomeComponent.html":{}}}],["api/usermy",{"_index":1108,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":135,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":290,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":326,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":397,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":587,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["array",{"_index":849,"title":{},"body":{"interfaces/Message.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{}}}],["artifacts",{"_index":1213,"title":{},"body":{"index.html":{}}}],["associated",{"_index":709,"title":{},"body":{"components/HomeComponent.html":{}}}],["associated.he/she",{"_index":1028,"title":{},"body":{"interfaces/UserMy.html":{}}}],["auth",{"_index":951,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code",{"_index":970,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_form",{"_index":919,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_form:formgroup",{"_index":963,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_status",{"_index":920,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_status=false",{"_index":962,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authentication",{"_index":931,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["authenticationservice",{"_index":338,"title":{"injectables/AuthenticationService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservice,authguard,authinterceptor",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":392,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":337,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"overview.html":{}}}],["authresult",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authresult.token",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["authservice",{"_index":416,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["auto",{"_index":239,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["automatically",{"_index":1204,"title":{},"body":{"index.html":{}}}],["back",{"_index":939,"title":{},"body":{"components/RegisterComponent.html":{}}}],["background",{"_index":741,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["bar",{"_index":996,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar'},{'name",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["bar.component",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":998,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.scss",{"_index":997,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts",{"_index":995,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:14",{"_index":1008,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:15",{"_index":1002,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1006,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:26",{"_index":1003,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar/top",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":284,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["base_other_url",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":283,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/get",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/logout",{"_index":840,"title":{},"body":{"injectables/LogoutService.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/refresh",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/courses",{"_index":287,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/user",{"_index":1052,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":736,"title":{},"body":{"components/HomeComponent.html":{}}}],["before",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{}}}],["between",{"_index":729,"title":{},"body":{"components/HomeComponent.html":{}}}],["bg",{"_index":732,"title":{},"body":{"components/HomeComponent.html":{}}}],["black",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["blue",{"_index":255,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":243,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["boolean",{"_index":418,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{}}}],["bootstrap",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["both",{"_index":583,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["bottom",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["box",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{}}}],["bro",{"_index":1059,"title":{},"body":{"injectables/UserService.html":{}}}],["browse",{"_index":1234,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":406,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":685,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["build",{"_index":1212,"title":{},"body":{"index.html":{}}}],["button",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["by:number",{"_index":857,"title":{},"body":{"interfaces/Message.html":{}}}],["calc(50",{"_index":737,"title":{},"body":{"components/HomeComponent.html":{}}}],["call",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{}}}],["called",{"_index":574,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["calling",{"_index":937,"title":{},"body":{"components/RegisterComponent.html":{}}}],["calls",{"_index":560,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["calss",{"_index":183,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["can't",{"_index":600,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["canactivate",{"_index":412,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cancel",{"_index":237,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["cancel:hover",{"_index":254,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["card",{"_index":238,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["catch",{"_index":475,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cent",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{}}}],["center",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":1206,"title":{},"body":{"index.html":{}}}],["character",{"_index":534,"title":{},"body":{"interfaces/Course.html":{}}}],["characters",{"_index":236,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["chartreuse",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["check",{"_index":591,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["check_login",{"_index":1001,"title":{},"body":{"components/TopBarComponent.html":{}}}],["checks",{"_index":927,"title":{},"body":{"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["chosen",{"_index":608,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["class",{"_index":33,"title":{"classes/AppPage.html":{},"classes/User.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["classes",{"_index":398,"title":{},"body":{"classes/AppPage.html":{},"classes/User.html":{},"overview.html":{}}}],["clears",{"_index":829,"title":{},"body":{"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["cli",{"_index":1194,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":503,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cluster_appmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":218,"title":{},"body":{"components/AddCourseComponent.html":{},"interfaces/Course.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":252,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["color:blue",{"_index":256,"title":{},"body":{"components/AddCourseComponent.html":{},"components/ReadComponent.html":{}}}],["color:red",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["combineall",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["common",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["concat(token",{"_index":506,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["consist",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Course.html":{}}}],["console.log(\"1",{"_index":493,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"error",{"_index":477,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"expiry",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"hai",{"_index":911,"title":{},"body":{"components/ReadComponent.html":{}}}],["console.log(\"hello",{"_index":1058,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"hi",{"_index":844,"title":{},"body":{"injectables/LogoutService.html":{}}}],["console.log(\"init",{"_index":495,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"login",{"_index":496,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"payload",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"start",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"token",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log('clicked",{"_index":718,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(authresult.token",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(data",{"_index":230,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"injectables/MessageService.html":{}}}],["console.log(error",{"_index":233,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["console.log(this.courseform.value",{"_index":225,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["console.log(this.read_list",{"_index":912,"title":{},"body":{"components/ReadComponent.html":{}}}],["console.log(this.registerform.value",{"_index":991,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.submitted",{"_index":973,"title":{},"body":{"components/RegisterComponent.html":{}}}],["const",{"_index":285,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["constantpool",{"_index":1050,"title":{},"body":{"injectables/UserService.html":{}}}],["constraint",{"_index":711,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["constructor(authservice",{"_index":413,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(formbuilder",{"_index":169,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":261,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["constructor(logout",{"_index":825,"title":{},"body":{"components/LogoutComponent.html":{}}}],["constructor(private",{"_index":509,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(who",{"_index":699,"title":{},"body":{"components/HomeComponent.html":{}}}],["container",{"_index":689,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["contains",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MessageSent.html":{},"components/ReadComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":246,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["controls",{"_index":205,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["convenience",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cors",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["course",{"_index":35,"title":{"interfaces/Course.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Message.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["course'},{'name",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["course.code",{"_index":719,"title":{},"body":{"components/HomeComponent.html":{}}}],["course.component",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["course.component.html",{"_index":161,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.scss",{"_index":160,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts",{"_index":159,"title":{},"body":{"components/AddCourseComponent.html":{},"coverage.html":{}}}],["course.component.ts:12",{"_index":197,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:13",{"_index":201,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:14",{"_index":174,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:21",{"_index":178,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:30",{"_index":203,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:40",{"_index":179,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.name",{"_index":720,"title":{},"body":{"components/HomeComponent.html":{}}}],["course.service",{"_index":212,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{}}}],["course.service.ts",{"_index":260,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["course.service.ts:15",{"_index":263,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{}}}],["course.service.ts:25",{"_index":266,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["course.service.ts:27",{"_index":305,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["course/:id",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["course/:id/list",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["course/:id/read",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["course/add",{"_index":158,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["course:course",{"_index":694,"title":{},"body":{"interfaces/CourseStatus.html":{}}}],["course:number",{"_index":856,"title":{},"body":{"interfaces/Message.html":{}}}],["course_id",{"_index":541,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/UsersComponent.html":{}}}],["course_id:any",{"_index":1087,"title":{},"body":{"components/UsersComponent.html":{}}}],["course_status",{"_index":542,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["course_url",{"_index":286,"title":{},"body":{"injectables/AddCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courseform",{"_index":163,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["coursehomecomponent",{"_index":137,"title":{"components/CourseHomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursehomecomponent,canactivate:[authguard",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["courses",{"_index":697,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{}}}],["coursestatus",{"_index":315,"title":{"interfaces/CourseStatus.html":{}},"body":{"injectables/AddToCourseService.html":{},"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["cover",{"_index":749,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1109,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cs251",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["current",{"_index":1026,"title":{},"body":{"interfaces/UserMy.html":{}}}],["currentuservalue",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["danger",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{}}}],["dashboard",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/TopBarComponent.html":{},"index.html":{}}}],["dashboard.herokuapp.com",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":229,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["data=>{console.log(data",{"_index":660,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["data=>{console.log(data);window.alert(\"ta",{"_index":654,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["data=>{window.alert(\"student",{"_index":646,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["data['message']=message['message_text",{"_index":885,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['prior']=false",{"_index":890,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['prior']=message['message_priority",{"_index":887,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['prior']=true",{"_index":889,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['status']=status",{"_index":318,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["data['to']=to",{"_index":884,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['username']=username",{"_index":1057,"title":{},"body":{"injectables/UserService.html":{}}}],["database",{"_index":1031,"title":{},"body":{"interfaces/UserMy.html":{}}}],["days",{"_index":481,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["decides",{"_index":311,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["declarations",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["decode(token",{"_index":472,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["decoding",{"_index":478,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["default",{"_index":198,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["delete",{"_index":1072,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_student",{"_index":1067,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_student(username",{"_index":1069,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_student(username:string",{"_index":1089,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_students",{"_index":1040,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_students(id",{"_index":1043,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_students(id:number,username:string",{"_index":1056,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":328,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":275,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"interfaces/Course.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"components/UsersComponent.html":{}}}],["desktops",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{}}}],["details",{"_index":186,"title":{},"body":{"components/AddCourseComponent.html":{},"classes/User.html":{}}}],["dev",{"_index":1201,"title":{},"body":{"index.html":{}}}],["development",{"_index":1197,"title":{},"body":{"index.html":{}}}],["devices",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{}}}],["different",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1211,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1215,"title":{},"body":{"index.html":{}}}],["display",{"_index":723,"title":{},"body":{"components/HomeComponent.html":{}}}],["dist",{"_index":1214,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["don't",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["done",{"_index":558,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["dont",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":476,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["e2e",{"_index":1226,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":399,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":404,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":402,"title":{},"body":{"classes/AppPage.html":{}}}],["easy",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["element",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["element(by.css('app",{"_index":407,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserReal.html":{}}}],["empty",{"_index":671,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["end",{"_index":1225,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":232,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error=>{window.alert(\"adding",{"_index":648,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["etc",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["everything",{"_index":938,"title":{},"body":{"components/RegisterComponent.html":{}}}],["execute",{"_index":1223,"title":{},"body":{"index.html":{}}}],["exp",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["expansion",{"_index":680,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["expiration",{"_index":488,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["expiresat",{"_index":464,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["exports",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["expression",{"_index":934,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["extracted",{"_index":572,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["f",{"_index":168,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["f1",{"_index":922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["failed",{"_index":565,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["false",{"_index":200,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":577,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["field",{"_index":928,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fields",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["files",{"_index":1207,"title":{},"body":{"index.html":{}}}],["fingertips",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["first",{"_index":209,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["first_name",{"_index":1037,"title":{},"body":{"interfaces/UserReal.html":{}}}],["fit",{"_index":748,"title":{},"body":{"components/HomeComponent.html":{}}}],["flag",{"_index":1217,"title":{},"body":{"index.html":{}}}],["flex",{"_index":722,"title":{},"body":{"components/HomeComponent.html":{}}}],["float",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["flow",{"_index":724,"title":{},"body":{"components/HomeComponent.html":{}}}],["font",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["form",{"_index":180,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":170,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":610,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["formcontrol('',validators.required",{"_index":635,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["formgroup",{"_index":196,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["from_username",{"_index":846,"title":{},"body":{"interfaces/Message.html":{}}}],["from_username:string",{"_index":860,"title":{},"body":{"interfaces/Message.html":{}}}],["frontend",{"_index":944,"title":{},"body":{"components/RegisterComponent.html":{}}}],["function",{"_index":267,"title":{},"body":{"injectables/AddCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["functions",{"_index":828,"title":{},"body":{"components/LogoutComponent.html":{}}}],["further",{"_index":1227,"title":{},"body":{"index.html":{}}}],["gap",{"_index":730,"title":{},"body":{"components/HomeComponent.html":{}}}],["gaurav",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["generate",{"_index":1209,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1192,"title":{},"body":{"index.html":{}}}],["get_messages",{"_index":867,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_messages(id",{"_index":871,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_messages(id:number):observable",{"_index":880,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_students",{"_index":1041,"title":{},"body":{"injectables/UserService.html":{}}}],["get_students(id",{"_index":1045,"title":{},"body":{"injectables/UserService.html":{}}}],["get_students(id:number):observable",{"_index":1054,"title":{},"body":{"injectables/UserService.html":{}}}],["getexpiration",{"_index":487,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["getf",{"_index":202,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getf1",{"_index":949,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getter",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getting",{"_index":1190,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":400,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["girish",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["give",{"_index":1080,"title":{},"body":{"components/UsersComponent.html":{}}}],["given",{"_index":185,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["go",{"_index":1230,"title":{},"body":{"index.html":{}}}],["group",{"_index":249,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["grow",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{}}}],["guard",{"_index":409,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":410,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":915,"title":{},"body":{"components/ReadComponent.html":{}}}],["header",{"_index":241,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["headers",{"_index":288,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":248,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["help",{"_index":1228,"title":{},"body":{"index.html":{}}}],["helps",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{}}}],["here",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["high",{"_index":667,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["himself",{"_index":1076,"title":{},"body":{"components/UsersComponent.html":{}}}],["holds",{"_index":1029,"title":{},"body":{"interfaces/UserMy.html":{}}}],["home",{"_index":189,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["home'},{'name",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["home.component",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["home.component.html",{"_index":538,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":537,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.ts",{"_index":536,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["home.component.ts:119",{"_index":566,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:143",{"_index":585,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:163",{"_index":579,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:21",{"_index":593,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:22",{"_index":595,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:26",{"_index":606,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:30",{"_index":609,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:31",{"_index":611,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:32",{"_index":602,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:36",{"_index":590,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:40",{"_index":592,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:44",{"_index":597,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:48",{"_index":596,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:52",{"_index":556,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:68",{"_index":570,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:86",{"_index":612,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:99",{"_index":557,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home/course",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["home/home.component",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":139,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homecomponent,canactivate:[authguard",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["html",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":264,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["http://127.0.0.1:8000",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1203,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":293,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["http_interceptors",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":262,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["httpclientmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule,http_interceptors",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httphandler",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httpheaders",{"_index":278,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":436,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httpoptions",{"_index":274,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":279,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{}}}],["httprequest",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["https://back",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":302,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["id:number",{"_index":852,"title":{},"body":{"interfaces/Message.html":{}}}],["identifier",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1095,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["idle",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["idservice",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["idservice:userwhoservice",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["ie11",{"_index":739,"title":{},"body":{"components/HomeComponent.html":{}}}],["if(!this.auth_code_status",{"_index":984,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if((localstorage.getitem('token')==null)||(localstorage.getitem('token')=='undefined",{"_index":1014,"title":{},"body":{"components/TopBarComponent.html":{}}}],["if(data['is_professor']==true",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(data['prior']==\"true",{"_index":888,"title":{},"body":{"injectables/MessageService.html":{}}}],["if(localstorage.getitem('is_professor')=='true",{"_index":715,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["if(professor_expression.test(s)==true",{"_index":981,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(student_expression.test(s)==true",{"_index":979,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.message.invalid",{"_index":657,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["if(this.username.invalid",{"_index":642,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["if(tok==null||tok=='undefined",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["iitb",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{}}}],["img",{"_index":745,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["important",{"_index":684,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["imports",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{}}}],["including",{"_index":1085,"title":{},"body":{"components/UsersComponent.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["inherit",{"_index":683,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["injectable",{"_index":257,"title":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["injectables",{"_index":258,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"overview.html":{}}}],["input",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["input[type=\"radio",{"_index":250,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["intercept",{"_index":517,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":501,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["interceptor",{"_index":515,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":516,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":451,"title":{"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["interfaces",{"_index":532,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"overview.html":{}}}],["interval",{"_index":999,"title":{},"body":{"components/TopBarComponent.html":{}}}],["interval=setinterval(()=>{this.check_login();},500",{"_index":1012,"title":{},"body":{"components/TopBarComponent.html":{}}}],["invalid",{"_index":181,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["is_professor",{"_index":698,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{}}}],["is_professor:[false,validators.required",{"_index":968,"title":{},"body":{"components/RegisterComponent.html":{}}}],["is_professor:boolean",{"_index":861,"title":{},"body":{"interfaces/Message.html":{},"components/UsersComponent.html":{}}}],["isloggedin",{"_index":497,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["isloggedout",{"_index":499,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["isnt",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["jquery",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["json.parse(atob(token.split(\".\")[1",{"_index":474,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["json.parse(expiration",{"_index":490,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["json.stringify(expiresat.valueof",{"_index":470,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["justify",{"_index":727,"title":{},"body":{"components/HomeComponent.html":{}}}],["jwt",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["jwtpayload",{"_index":452,"title":{"interfaces/JWTPayload.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{}}}],["karma",{"_index":1224,"title":{},"body":{"index.html":{}}}],["keep",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["kinds",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["krushnakant",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["landscape",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["large",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{}}}],["last",{"_index":586,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["last_name",{"_index":1038,"title":{},"body":{"interfaces/UserReal.html":{}}}],["leads",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{}}}],["left",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["lg",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{}}}],["list",{"_index":721,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"components/UsersComponent.html":{}}}],["list_of_students",{"_index":1066,"title":{},"body":{"components/UsersComponent.html":{}}}],["list_of_students:any",{"_index":1086,"title":{},"body":{"components/UsersComponent.html":{}}}],["literal",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":164,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["loading.note",{"_index":598,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["local",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["localstorage.clear",{"_index":843,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.getitem('expires_at",{"_index":489,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.getitem('token",{"_index":471,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.getitem('token')!=\"undefined",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('token')!=null",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem('expires_at",{"_index":842,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.removeitem('token",{"_index":841,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.setitem('expires_at",{"_index":469,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.setitem('is_professor','false",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('is_professor','true",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('token",{"_index":468,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["location.reload",{"_index":661,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["logged",{"_index":420,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["logged_in",{"_index":1000,"title":{},"body":{"components/TopBarComponent.html":{}}}],["logged_in:boolean",{"_index":1011,"title":{},"body":{"components/TopBarComponent.html":{}}}],["loggen",{"_index":1027,"title":{},"body":{"interfaces/UserMy.html":{}}}],["logic",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login",{"_index":388,"title":{"interfaces/Login.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["login'},{'name",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["login(data",{"_index":492,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["login.component.html",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["login_button",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["login_url",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":140,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{}}}],["logout",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["logout'},{'name",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["logout.component.html",{"_index":824,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":823,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.service",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["logout/logout.component",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["logout:logoutservice",{"_index":510,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["logout_url",{"_index":839,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logoutcomponent",{"_index":142,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logoutservice",{"_index":414,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"coverage.html":{}}}],["logs",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{}}}],["long",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["looking",{"_index":1079,"title":{},"body":{"components/UsersComponent.html":{}}}],["low",{"_index":669,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["lower",{"_index":670,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_s_l",{"_index":543,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_s_l=false",{"_index":624,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_t_l",{"_index":544,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_t_l=false",{"_index":623,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["main",{"_index":710,"title":{},"body":{"components/HomeComponent.html":{}}}],["make",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["makes",{"_index":576,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["margin",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["mat",{"_index":679,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["matches",{"_index":935,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["max",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{}}}],["md",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["media",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{}}}],["medium",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["members",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["message",{"_index":545,"title":{"interfaces/Message.html":{}},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["message.from_username",{"_index":673,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message.message",{"_index":674,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message:formgroup",{"_index":620,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message:string",{"_index":854,"title":{},"body":{"interfaces/Message.html":{}}}],["message_id",{"_index":900,"title":{},"body":{"components/ReadComponent.html":{}}}],["message_id:any",{"_index":907,"title":{},"body":{"components/ReadComponent.html":{}}}],["message_priority",{"_index":638,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["message_priority:boolean",{"_index":865,"title":{},"body":{"interfaces/MessageSent.html":{}}}],["message_text",{"_index":637,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["message_text:string",{"_index":864,"title":{},"body":{"interfaces/MessageSent.html":{}}}],["messages",{"_index":546,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["messagesent",{"_index":862,"title":{"interfaces/MessageSent.html":{}},"body":{"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["messageservice",{"_index":555,"title":{"injectables/MessageService.html":{}},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"coverage.html":{}}}],["messageservice:messageservice",{"_index":628,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{}}}],["messsage",{"_index":904,"title":{},"body":{"components/ReadComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["min",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["miscellaneous",{"_index":1239,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mixin",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{}}}],["module",{"_index":325,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":327,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moment",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["moment().isbefore(this.getexpiration",{"_index":498,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment().isbetween(this.getexpiration().subtract(1",{"_index":480,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment(expiresat",{"_index":491,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment.unix(payload.exp",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moodle",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{}}}],["more",{"_index":1229,"title":{},"body":{"index.html":{}}}],["moves",{"_index":830,"title":{},"body":{"components/LogoutComponent.html":{}}}],["moving",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{}}}],["multi",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["my.ts",{"_index":1024,"title":{},"body":{"interfaces/UserMy.html":{},"coverage.html":{}}}],["name",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"index.html":{}}}],["navigate",{"_index":1202,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":188,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["navigateto",{"_index":401,"title":{},"body":{"classes/AppPage.html":{}}}],["needed",{"_index":941,"title":{},"body":{"components/RegisterComponent.html":{}}}],["new",{"_index":289,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":192,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["next",{"_index":502,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["next.handle(cloned",{"_index":507,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["next.handle(req",{"_index":508,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["ng",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["ngx",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["none_type",{"_index":1009,"title":{},"body":{"components/TopBarComponent.html":{}}}],["noopanimationsmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["note",{"_index":1074,"title":{},"body":{"components/UsersComponent.html":{}}}],["notifications",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{}}}],["notify",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["number",{"_index":303,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{}}}],["object",{"_index":273,"title":{},"body":{"injectables/AddCourseService.html":{},"interfaces/Course.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":277,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["onsubmit",{"_index":166,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["onto",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{}}}],["option",{"_index":607,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["optional",{"_index":177,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["orange",{"_index":742,"title":{},"body":{"components/HomeComponent.html":{}}}],["out",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":682,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["overview",{"_index":1235,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p[a",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":1155,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":245,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["page",{"_index":190,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["panel",{"_index":681,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["param",{"_index":294,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["parameters",{"_index":175,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["part",{"_index":613,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["particular",{"_index":308,"title":{},"body":{"injectables/AddToCourseService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["parts",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{}}}],["password",{"_index":752,"title":{},"body":{"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserReal.html":{}}}],["path",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["path:'**',component:logincomponent",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["people",{"_index":895,"title":{},"body":{"interfaces/ReadBy.html":{},"components/ReadComponent.html":{}}}],["performs",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["permission",{"_index":1081,"title":{},"body":{"components/UsersComponent.html":{}}}],["person",{"_index":313,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"components/UsersComponent.html":{}}}],["piazza",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["pipe",{"_index":484,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["pipe(first",{"_index":227,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["place",{"_index":986,"title":{},"body":{"components/RegisterComponent.html":{}}}],["popper.js",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["portrait",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["post",{"_index":269,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["prajeeth",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["prefix",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous",{"_index":672,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["prior",{"_index":847,"title":{},"body":{"interfaces/Message.html":{}}}],["prior:boolean",{"_index":858,"title":{},"body":{"interfaces/Message.html":{}}}],["priority",{"_index":668,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["private",{"_index":213,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["proceeds",{"_index":936,"title":{},"body":{"components/RegisterComponent.html":{}}}],["process",{"_index":561,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["prod",{"_index":1216,"title":{},"body":{"index.html":{}}}],["production",{"_index":1218,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prof",{"_index":690,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["professor",{"_index":567,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"components/UsersComponent.html":{}}}],["professor_expression",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["professor_expression=/p[a",{"_index":960,"title":{},"body":{"components/RegisterComponent.html":{}}}],["professors",{"_index":959,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["profs",{"_index":599,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["project",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["promise",{"_index":403,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":162,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{}}}],["protractor",{"_index":405,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["providedin",{"_index":291,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["providers",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["radius",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":850,"title":{},"body":{"interfaces/Message.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{}}}],["read'},{'name",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["read.component.html",{"_index":899,"title":{},"body":{"components/ReadComponent.html":{}}}],["read.component.scss",{"_index":898,"title":{},"body":{"components/ReadComponent.html":{}}}],["read/read.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["read_by",{"_index":848,"title":{},"body":{"interfaces/Message.html":{}}}],["read_by:array",{"_index":859,"title":{},"body":{"interfaces/Message.html":{}}}],["read_list",{"_index":901,"title":{},"body":{"components/ReadComponent.html":{}}}],["read_list:any",{"_index":908,"title":{},"body":{"components/ReadComponent.html":{}}}],["read_message",{"_index":868,"title":{},"body":{"injectables/MessageService.html":{}}}],["read_message(id",{"_index":873,"title":{},"body":{"injectables/MessageService.html":{}}}],["read_message(id:number",{"_index":892,"title":{},"body":{"injectables/MessageService.html":{}}}],["readby",{"_index":877,"title":{"interfaces/ReadBy.html":{}},"body":{"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"coverage.html":{}}}],["readcomponent",{"_index":144,"title":{"components/ReadComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readcomponent,canactivate:[authguard",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["reader.username",{"_index":914,"title":{},"body":{"components/ReadComponent.html":{}}}],["readme",{"_index":1231,"title":{},"body":{"index.html":{}}}],["real",{"_index":1101,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["real.ts",{"_index":1036,"title":{},"body":{"interfaces/UserReal.html":{},"coverage.html":{}}}],["receive",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{}}}],["receive,it",{"_index":851,"title":{},"body":{"interfaces/Message.html":{}}}],["red",{"_index":750,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirect",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirects",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["refresh_url",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshes",{"_index":421,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["refreshtoken",{"_index":479,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["register",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["register(user",{"_index":1047,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.html",{"_index":918,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":917,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["register_url",{"_index":1051,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registercomponent",{"_index":146,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":1034,"title":{},"body":{"interfaces/UserMyList.html":{},"components/UsersComponent.html":{}}}],["registerform",{"_index":921,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":946,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regular",{"_index":933,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["regularly",{"_index":1004,"title":{},"body":{"components/TopBarComponent.html":{}}}],["reload",{"_index":1205,"title":{},"body":{"index.html":{}}}],["reloaded",{"_index":588,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["remember",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["remove",{"_index":1075,"title":{},"body":{"components/UsersComponent.html":{}}}],["removed",{"_index":1071,"title":{},"body":{"components/UsersComponent.html":{}}}],["render",{"_index":605,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["represent",{"_index":1025,"title":{},"body":{"interfaces/UserMy.html":{}}}],["representing",{"_index":952,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":276,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"interfaces/ReadBy.html":{},"components/UsersComponent.html":{}}}],["req",{"_index":519,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":504,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["req.headers.set('authorization",{"_index":505,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["request",{"_index":270,"title":{},"body":{"injectables/AddCourseService.html":{},"components/CourseHomeComponent.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":235,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rest",{"_index":568,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["result",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":204,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["returnurl",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["right",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["right:80",{"_index":1092,"title":{},"body":{"components/UsersComponent.html":{}}}],["root",{"_index":292,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["root'},{'name",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":171,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["router:router",{"_index":629,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LogoutComponent.html":{}}}],["routermodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":725,"title":{},"body":{"components/HomeComponent.html":{}}}],["run",{"_index":1199,"title":{},"body":{"index.html":{}}}],["running",{"_index":1219,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":281,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":210,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["s!=\"undefined",{"_index":978,"title":{},"body":{"components/RegisterComponent.html":{}}}],["s!=null",{"_index":977,"title":{},"body":{"components/RegisterComponent.html":{}}}],["s=this.f1.auth_code.value",{"_index":976,"title":{},"body":{"components/RegisterComponent.html":{}}}],["same",{"_index":195,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["scaffolding",{"_index":1208,"title":{},"body":{"index.html":{}}}],["screen",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["see",{"_index":601,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["seen",{"_index":589,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["send",{"_index":581,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["send_message",{"_index":869,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message(id",{"_index":875,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message(id:number,message:messagesent,to:string",{"_index":883,"title":{},"body":{"injectables/MessageService.html":{}}}],["sending",{"_index":272,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["sends",{"_index":268,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["sendstudent",{"_index":551,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["sendta",{"_index":552,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["sent",{"_index":578,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["sent:string",{"_index":853,"title":{},"body":{"interfaces/Message.html":{}}}],["separate",{"_index":738,"title":{},"body":{"components/HomeComponent.html":{}}}],["serve",{"_index":1200,"title":{},"body":{"index.html":{}}}],["server",{"_index":1198,"title":{},"body":{"index.html":{}}}],["server/website",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{}}}],["service",{"_index":184,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["services/add",{"_index":211,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{}}}],["services/authentication.service",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["services/base",{"_index":906,"title":{},"body":{"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["services/logout.service",{"_index":832,"title":{},"body":{"components/LogoutComponent.html":{}}}],["services/message.service",{"_index":615,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{}}}],["services/user.service",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["services/userwho.service",{"_index":614,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["set",{"_index":604,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/ReadComponent.html":{}}}],["setinterval(()=>{this.check_login();},500",{"_index":1007,"title":{},"body":{"components/TopBarComponent.html":{}}}],["sets",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersComponent.html":{}}}],["setsession",{"_index":520,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setsession(authresult",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["sharereplay",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["show",{"_index":191,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["shrink",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{}}}],["sign",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{}}}],["similar",{"_index":569,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["size",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["slateblue",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["sm",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["small",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["smartphones",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["solid",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"index.html":{}}}],["sources",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["space",{"_index":728,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["span')).gettext",{"_index":408,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../add",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.ts",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logout.service.ts",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.service.ts",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.component.ts",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../userwho.service.ts",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/_models/course",{"_index":692,"title":{},"body":{"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["src/app/_models/course.ts",{"_index":533,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/app/_models/list_of_student.ts",{"_index":1033,"title":{},"body":{"interfaces/UserMyList.html":{},"coverage.html":{}}}],["src/app/_models/login.ts",{"_index":751,"title":{},"body":{"interfaces/Login.html":{},"coverage.html":{}}}],["src/app/_models/message.ts",{"_index":845,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/_models/message_sent.ts",{"_index":863,"title":{},"body":{"interfaces/MessageSent.html":{},"coverage.html":{}}}],["src/app/_models/read_by.ts",{"_index":894,"title":{},"body":{"interfaces/ReadBy.html":{},"coverage.html":{}}}],["src/app/_models/user",{"_index":1023,"title":{},"body":{"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["src/app/_models/user.ts",{"_index":1017,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/_models/user.ts:5",{"_index":1022,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:6",{"_index":1021,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:7",{"_index":1019,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:8",{"_index":1020,"title":{},"body":{"classes/User.html":{}}}],["src/app/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:13",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:9",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/add",{"_index":157,"title":{},"body":{"components/AddCourseComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/course",{"_index":535,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:14",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:20",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:31",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:47",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:77",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/logout/logout.component.ts",{"_index":822,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/logout/logout.component.ts:20",{"_index":827,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/logout/logout.component.ts:9",{"_index":826,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/read/read.component.ts",{"_index":897,"title":{},"body":{"components/ReadComponent.html":{},"coverage.html":{}}}],["src/app/read/read.component.ts:15",{"_index":905,"title":{},"body":{"components/ReadComponent.html":{}}}],["src/app/read/read.component.ts:19",{"_index":902,"title":{},"body":{"components/ReadComponent.html":{}}}],["src/app/read/read.component.ts:28",{"_index":903,"title":{},"body":{"components/ReadComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":916,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/register/register.component.ts:26",{"_index":945,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":942,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:34",{"_index":947,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:38",{"_index":940,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:39",{"_index":923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:55",{"_index":924,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:72",{"_index":948,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:77",{"_index":950,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:89",{"_index":925,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/services/add",{"_index":259,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts",{"_index":411,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:105",{"_index":518,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/services/authentication.service.ts:121",{"_index":415,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/authentication.service.ts:129",{"_index":417,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/authentication.service.ts:34",{"_index":521,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:38",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:51",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:55",{"_index":522,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":527,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:73",{"_index":523,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:80",{"_index":526,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:92",{"_index":524,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:96",{"_index":525,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/base.ts",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/logout.service.ts",{"_index":836,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/logout.service.ts:14",{"_index":837,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/logout.service.ts:23",{"_index":838,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/message.service.ts",{"_index":866,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/message.service.ts:16",{"_index":870,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:21",{"_index":872,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:25",{"_index":876,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:42",{"_index":874,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/user.service.ts",{"_index":1039,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/user.service.ts:18",{"_index":1042,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:23",{"_index":1048,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1046,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:32",{"_index":1044,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/userwho.service.ts",{"_index":1094,"title":{},"body":{"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/userwho.service.ts:16",{"_index":1096,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:24",{"_index":1100,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:32",{"_index":1099,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:39",{"_index":1097,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/top",{"_index":994,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["src/app/users/users.component.ts",{"_index":1063,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/users/users.component.ts:22",{"_index":1084,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:24",{"_index":1083,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:26",{"_index":1068,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:43",{"_index":1073,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:60",{"_index":1070,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srivatsa",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["started",{"_index":1191,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":304,"title":{},"body":{"injectables/AddToCourseService.html":{},"interfaces/CourseStatus.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserwhoService.html":{}}}],["status(id",{"_index":1098,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["status(id:number",{"_index":1105,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["status.ts",{"_index":693,"title":{},"body":{"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["status:string",{"_index":695,"title":{},"body":{"interfaces/CourseStatus.html":{}}}],["stays",{"_index":194,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["stop",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["stops",{"_index":182,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{}}}],["storage",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["store",{"_index":603,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["stored",{"_index":1030,"title":{},"body":{"interfaces/UserMy.html":{},"index.html":{}}}],["stores",{"_index":594,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{}}}],["string",{"_index":301,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":310,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/Message.html":{},"components/RegisterComponent.html":{},"interfaces/UserMy.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["student.username",{"_index":1091,"title":{},"body":{"components/UsersComponent.html":{}}}],["student/ta",{"_index":307,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["student_expression",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["student_expression=/[1",{"_index":955,"title":{},"body":{"components/RegisterComponent.html":{}}}],["students",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserMyList.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["students/ta's",{"_index":1082,"title":{},"body":{"components/UsersComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["submits",{"_index":926,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitted",{"_index":165,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitted_add",{"_index":547,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_add=false",{"_index":617,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_m",{"_index":548,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_m=false",{"_index":618,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["subscribe",{"_index":228,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(data",{"_index":632,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["success",{"_index":187,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{}}}],["successful",{"_index":562,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":990,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successfully\");location.reload",{"_index":647,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["such",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["suffix",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1232,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":424,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["svg",{"_index":1233,"title":{},"body":{"modules.html":{}}}],["ta",{"_index":314,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"interfaces/UserMy.html":{}}}],["ta's",{"_index":584,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/UsersComponent.html":{}}}],["ta/prof",{"_index":559,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["ta\\'s",{"_index":1093,"title":{},"body":{"components/UsersComponent.html":{}}}],["table",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["tablets",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["takes",{"_index":831,"title":{},"body":{"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["tap",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["tap(response",{"_index":485,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["team",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/TopBarComponent.html":{}}}],["tells",{"_index":419,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["test",{"_index":1222,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1221,"title":{},"body":{"index.html":{}}}],["text",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MessageSent.html":{},"components/RegisterComponent.html":{}}}],["this.a_s_l=false",{"_index":650,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_s_l=true",{"_index":644,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_t_l=false",{"_index":655,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_t_l=true",{"_index":652,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.addcourse.addcourse(this.courseform.value",{"_index":226,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.addtocourse.addtocourse(this.username.value,this.course_id,'student').pipe(first",{"_index":645,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.addtocourse.addtocourse(this.username.value,this.course_id,'ta').pipe(first",{"_index":653,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.auth_code_form.controls",{"_index":972,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_form.invalid",{"_index":975,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_form=this.formbuilder.group",{"_index":969,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_status=false",{"_index":983,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_status=true",{"_index":980,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":965,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authenticationservice.login(this.loginform.value",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isloggedin",{"_index":511,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.authservice.refreshtoken",{"_index":512,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.check_login",{"_index":1013,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.course_id=this.activatedroute.snapshot.parammap.get('id",{"_index":630,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.course_status=data['status",{"_index":633,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.courseform",{"_index":215,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courseform.controls",{"_index":220,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courseform.invalid",{"_index":223,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courses",{"_index":714,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.decode(token",{"_index":462,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.formbuilder.group",{"_index":216,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getexpiration",{"_index":482,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.get(url,httpoptions",{"_index":882,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["this.http.get(use_url",{"_index":1104,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["this.http.get(use_url,httpoptions",{"_index":1107,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["this.http.post(add_course_url,data,httpoptions",{"_index":297,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["this.http.post(login_url,data",{"_index":494,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.post(refresh_url,{token:this.token",{"_index":483,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.post(register_url",{"_index":1053,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(url,data,httpoptions",{"_index":319,"title":{},"body":{"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["this.idservice.identity().pipe(first",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.is_professor=false",{"_index":717,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.is_professor=true",{"_index":716,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.isloggedin",{"_index":500,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.loading",{"_index":224,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.loading=false",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.logged_in=false",{"_index":1015,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.logged_in=true",{"_index":1016,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.loginform",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout.logout",{"_index":513,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{}}}],["this.m_s_l=false",{"_index":666,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_s_l=true",{"_index":664,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_t_l=false",{"_index":662,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_t_l=true",{"_index":658,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message.controls",{"_index":640,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message=this.formbuilder.group",{"_index":636,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message_id=this.activatedroute.snapshot.parammap.get('id",{"_index":909,"title":{},"body":{"components/ReadComponent.html":{}}}],["this.messageservice.get_messages(this.course_id).subscribe(data1=>this.messages=data1",{"_index":639,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.messageservice.read_message(this.message_id).subscribe(data=>{this.read_list=data",{"_index":910,"title":{},"body":{"components/ReadComponent.html":{}}}],["this.messageservice.send_message(this.course_id,this.message.value,'student').pipe(first",{"_index":665,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.messageservice.send_message(this.course_id,this.message.value,'ta').pipe(first",{"_index":659,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.registerform",{"_index":966,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":971,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":974,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.patchvalue({is_professor:true",{"_index":982,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.returnurl",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/login",{"_index":834,"title":{},"body":{"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['addcourse",{"_index":234,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['home",{"_index":231,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.router.navigate(['login",{"_index":514,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.setsession(response",{"_index":486,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.submitted",{"_index":221,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.submitted_add=false",{"_index":651,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_add=true",{"_index":641,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_m=false",{"_index":663,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_m=true",{"_index":656,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.username=new",{"_index":634,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.userservice.delete_students(this.course_id,username).subscribe(data=>{location.reload",{"_index":1090,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.get_students(this.course_id).subscribe((data)=>{this.list_of_students=data",{"_index":913,"title":{},"body":{"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["this.userservice.register(this.registerform.value",{"_index":988,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.who.status(this.course_id",{"_index":631,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.who.who().subscribe(data",{"_index":713,"title":{},"body":{"components/HomeComponent.html":{}}}],["time",{"_index":943,"title":{},"body":{"components/RegisterComponent.html":{}}}],["title",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/CourseHomeComponent.html":{}}}],["to:string",{"_index":855,"title":{},"body":{"interfaces/Message.html":{}}}],["tok=localstorage.getitem('token",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["token",{"_index":422,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["token.ts",{"_index":1060,"title":{},"body":{"interfaces/UserToken.html":{},"coverage.html":{}}}],["token_form",{"_index":1061,"title":{},"body":{"interfaces/UserToken.html":{}}}],["token_form:string",{"_index":1062,"title":{},"body":{"interfaces/UserToken.html":{}}}],["top",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["topbarcomponent",{"_index":148,"title":{"components/TopBarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tot",{"_index":731,"title":{},"body":{"components/HomeComponent.html":{}}}],["track",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":222,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":473,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["tslib",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["type",{"_index":176,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jasmine",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["types/jasminewd2",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["types/jwt",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1078,"title":{},"body":{"components/UsersComponent.html":{}}}],["unit",{"_index":1220,"title":{},"body":{"index.html":{}}}],["unsuccessful",{"_index":649,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["up",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{}}}],["updates",{"_index":575,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["upport",{"_index":740,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["url=base_url+'/api'+'/readby/'+id.tostring",{"_index":893,"title":{},"body":{"injectables/MessageService.html":{}}}],["url=base_url+'/api/messages/'+id.tostring",{"_index":881,"title":{},"body":{"injectables/MessageService.html":{}}}],["url=base_url+'/api/user/'+id.tostring()+'/'+username",{"_index":317,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["url=base_url+'/api/usercourse/'+id.tostring",{"_index":1055,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1210,"title":{},"body":{"index.html":{}}}],["use_url",{"_index":1103,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["use_url=base_url+'/api/user/'+id.tostring()+'/abc",{"_index":1106,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["useclass",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":580,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":708,"title":{"classes/User.html":{}},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["user_id",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["user_url",{"_index":1102,"title":{},"body":{"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermy",{"_index":432,"title":{"interfaces/UserMy.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermylist",{"_index":1032,"title":{"interfaces/UserMyList.html":{}},"body":{"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":309,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/ReadBy.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["username,password,email",{"_index":1018,"title":{},"body":{"classes/User.html":{}}}],["username:formcontrol",{"_index":619,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["username:string",{"_index":896,"title":{},"body":{"interfaces/ReadBy.html":{},"interfaces/UserMyList.html":{}}}],["userreal",{"_index":1035,"title":{"interfaces/UserReal.html":{}},"body":{"interfaces/UserReal.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["users",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["users.component.html",{"_index":1065,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":1064,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/users.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["userscomponent",{"_index":150,"title":{"components/UsersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userscomponent,canactivate:[authguard",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["userservice",{"_index":339,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userservice:userservice",{"_index":1088,"title":{},"body":{"components/UsersComponent.html":{}}}],["usertoken",{"_index":434,"title":{"interfaces/UserToken.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["userwhoservice",{"_index":554,"title":{"injectables/UserwhoService.html":{}},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["using",{"_index":573,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["uuid",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["validators",{"_index":207,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(5",{"_index":219,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["validators.minlength(6",{"_index":967,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":217,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":199,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":929,"title":{},"body":{"components/RegisterComponent.html":{}}}],["var",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":571,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1240,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/variables.html":{}}}],["verifies",{"_index":932,"title":{},"body":{"components/RegisterComponent.html":{}}}],["version",{"_index":1195,"title":{},"body":{"index.html":{}}}],["via",{"_index":1077,"title":{},"body":{"components/UsersComponent.html":{},"index.html":{}}}],["view",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["webmail",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["website",{"_index":425,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["whether",{"_index":312,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{}}}],["white",{"_index":253,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["who:userwhoservice",{"_index":626,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["width",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["window",{"_index":563,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["window.alert(\"incorrect",{"_index":985,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert(\"invalid",{"_index":643,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["window.alert(\"registered",{"_index":989,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert(\"registration",{"_index":987,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert('invalid",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{}}}],["window.alert(data['prior",{"_index":891,"title":{},"body":{"injectables/MessageService.html":{}}}],["window.alert(message['message_text",{"_index":886,"title":{},"body":{"injectables/MessageService.html":{}}}],["window.localstorage.clear",{"_index":833,"title":{},"body":{"components/LogoutComponent.html":{}}}],["wont",{"_index":954,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":835,"title":{},"body":{"components/LogoutComponent.html":{}}}],["wrap",{"_index":726,"title":{},"body":{"components/HomeComponent.html":{}}}],["xl",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{}}}],["xs",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{}}}],["yes",{"_index":930,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z0",{"_index":957,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["z]{2,3}\\d{3",{"_index":961,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/about/about.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\n\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n        NOTIFY ME!\n        \n            Course project - CS251\n        \n        \n        \n            \n                This project consist of two parts - a dashboard and an android app. It helps students at IITB to keep track of all kinds of notifications at their fingertips that they receive from various sources such as moodle, webmail, piazza etc.,\n            \n        \n    \n\n\nTeam Members \n\n    \n        \n            \n                \n                \n                    Girish Srivatsa \n                    190050069\n                \n            \n        \n        \n            \n                \n                \n                    Krushnakant\n                    190100036\n                \n            \n        \n        \n            \n                \n                \n                    Prajeeth\n                    190050117\n                \n            \n        \n        \n            \n                \n                \n                    Gaurav\n                    190050037\n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                // Small tablets and large smartphones (landscape view)\n$screen-sm-min: 576px;\n// Small tablets (portrait view)\n$screen-md-min: 768px;\n// Tablets and small desktops\n$screen-lg-min: 992px;\n// Large tablets and desktops\n$screen-xl-min: 1200px;\n@mixin xs {\n    @media (max-width: #{$screen-sm-min}) {\n        @content;\n    }\n}\n@mixin sm {\n    @media (max-width: #{$screen-md-min}) {\n        @content;\n    }\n}\n\n// Medium devices\n@mixin md {\n    @media (max-width: #{$screen-lg-min}) {\n        @content;\n    }\n}\n// Large devices\n@mixin lg {\n    @media (max-width: #{$screen-xl-min}) {\n        @content;\n    }\n}\n\n.about {\n    box-align: center;\n}\n\n.logo {\n    margin-top: 5%;\n    float: left;\n    border: 1px solid black;\n    @include md {\n        width: 50%;\n        margin-left: 25%;\n        margin-right: 25%;\n    }\n    ;\n}\n\n.content {\n    margin-left: 5%;\n    margin-top: 8%;\n    border-radius: 5px;\n   \n    @include md {\n        margin-left: 0%;\n        text-align: center;\n    }\n}\n\n.cent {\n    text-align: center;\n    @include md {\n        text-align: center;\n    }\n}\n\n.members {\n    text-align: center;\n    font-size: 40px;\n    margin-top: 3%;\n    margin-bottom: 3%;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                NOTIFY ME!                    Course project - CS251                                                    This project consist of two parts - a dashboard and an android app. It helps students at IITB to keep track of all kinds of notifications at their fingertips that they receive from various sources such as moodle, webmail, piazza etc.,                        Team Members                                                                             Girish Srivatsa                     190050069                                                                                                            Krushnakant                    190100036                                                                                                            Prajeeth                    190050117                                                                                                            Gaurav                    190050037                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddCourseComponent.html":{"url":"components/AddCourseComponent.html","title":"component - AddCourseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddCourseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-course/add-course.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-course\n            \n\n            \n                styleUrls\n                ./add-course.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-course.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CourseForm\n                            \n                            \n                                loading\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, addCourse: AddCourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-course/add-course.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addCourse\n                                                  \n                                                        \n                                                                        AddCourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-course/add-course.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-course/add-course.component.ts:40\n                \n            \n\n\n            \n                \n                    If the course form is invalid it stops\nIt calss addCourse service to add the course of given details\nIf it is a success it navigates to the home page which will also show the newly added course\nElse it stays at the same page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CourseForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/add-course/add-course.component.ts:30\n                                \n                            \n                    \n                        \n                                To return form controls to the html page\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {AddCourseService} from '../services/add-course.service';\n@Component({\n  selector: 'app-add-course',\n  templateUrl: './add-course.component.html',\n  styleUrls: ['./add-course.component.scss']\n})\nexport class AddCourseComponent implements OnInit {\n  CourseForm: FormGroup;\n  loading = false;\n  submitted = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private addCourse:AddCourseService,\n  ) { }\n\n  ngOnInit(): void {\n    this.CourseForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      code: ['', [Validators.required, Validators.maxLength(5)]]\n  });\n  }\n  /**\n   * To return form controls to the html page\n   */\n  get f() { return this.CourseForm.controls; }\n  /**\n   * If the course form is invalid it stops\n   * \n   * It calss addCourse service to add the course of given details\n   * \n   * If it is a success it navigates to the home page which will also show the newly added course\n   * \n   * Else it stays at the same page\n   */\n  onSubmit(){\n    \n    this.submitted = true;\n    if (this.CourseForm.invalid) {\n      return;\n    }\n    this.loading = true;\n   // console.log(this.CourseForm.value);\n    this.addCourse.addCourse(this.CourseForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {console.log(data);\n                        this.router.navigate(['home']);\n                },\n                error => {\n                   // console.log(error);\n                    this.router.navigate(['addcourse']);\n                });\n  }\n}\n\n    \n\n    \n        \n\n\n    Add a Course!\n    \n        \n\n            \n                Name\n                \n                \n                    Name is required\n                \n            \n            \n                Code\n                \n                \n                    Code is required\n                    Code must be 5 characters\n                \n            \n            \n                \n                                            \n                         Add Course\n                \n                \n                \n                    Cancel\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./add-course.component.scss\n                \n                .card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10%;\n}\n\n.card-header {\n    font-size: 35px;\n    text-align: center;\n}\n\n.card-body {\n    // margin-top: 2%;\n    padding-top: 2%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    font-size: medium;\n}\n\n.form-group {\n    text-align: center;\n}\n\ninput[type=\"radio\"] {\n    margin: 0 10px;\n}\n\n.add {\n    padding-right: 10px;\n}\n\n.cancel {\n    color: white;\n}\n\n.cancel:hover {\n    color: blue;\n}\n\n.required{\n    font-size: medium;\n    color:blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Add a Course!                                        Name                                                    Name is required                                                        Code                                                    Code is required                    Code must be 5 characters                                                                                                                             Add Course                                                                    Cancel                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddCourseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddCourseService.html":{"url":"injectables/AddCourseService.html","title":"injectable - AddCourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddCourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-course.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-course.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCourse\n                        \n                        \n                    \n                \n            \n            \n                \naddCourse(data: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/add-course.service.ts:25\n                \n            \n\n\n            \n                \n                    This function sends a post request to ADD_COURSE_URL sending the course object with httpOptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this represents the course object to be added.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Post Request\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Course} from '../_models/course';\nimport {BASE_URL} from './base';\nconst COURSE_URL = BASE_URL+'/api/courses/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddCourseService {\n\n  constructor(\n    private http:HttpClient,\n  ) { }\n  /**\n   * This function sends a post request to ADD_COURSE_URL sending the course object with httpOptions\n   * @param data this represents the course object to be added.\n   * @return Post Request\n   */\n  addCourse(data:Course): Observable{\n    var ADD_COURSE_URL=COURSE_URL;\n    return this.http.post(ADD_COURSE_URL,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddToCourseService.html":{"url":"injectables/AddToCourseService.html","title":"injectable - AddToCourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddToCourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-to-course.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddToCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-to-course.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddToCourse\n                        \n                        \n                    \n                \n            \n            \n                \nAddToCourse(username: string, id: number, status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/add-to-course.service.ts:27\n                \n            \n\n\n            \n                \n                    AddToCourse service adds a student/TA in a particular course\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This represents the username of the student to be added in the course\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This represents the course id\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This decides whether the person is a TA or a student in that course\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Course} from '../_models/course';\nimport {CourseStatus} from '../_models/course-status';\nimport {BASE_URL} from './base';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddToCourseService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n  /**\n   * AddToCourse service adds a student/TA in a particular course\n   * \n   * @param username This represents the username of the student to be added in the course\n   * @param id This represents the course id\n   * @param status This decides whether the person is a TA or a student in that course\n   */\n  AddToCourse(username:string,id:number,status:string): Observable{\n    const URL=BASE_URL+'/api/user/'+id.toString()+'/'+username+'/';\n    var data = {};\n    data['status']=status\n    return this.http.post(URL,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"dashboard\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  title = \"dashboard\";\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAddCourseComponent\n\nAddCourseComponent\n\nAppModule -->\n\nAddCourseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCourseHomeComponent\n\nCourseHomeComponent\n\nAppModule -->\n\nCourseHomeComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nReadComponent\n\nReadComponent\n\nAppModule -->\n\nReadComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AddCourseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CourseHomeComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            ReadComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TopBarComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {UserService} from './services/user.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AddCourseComponent } from './add-course/add-course.component'\nimport { CourseHomeComponent } from './course-home/course-home.component';\nimport { combineAll } from 'rxjs/operators';\nimport { AboutComponent } from './about/about.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatExpansionModule }from '@angular/material/expansion';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {AuthenticationService,AuthGuard,AuthInterceptor} from './services/authentication.service';\nimport { UsersComponent } from './users/users.component';\nimport { ReadComponent } from './read/read.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TopBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    LogoutComponent,\n    AddCourseComponent,\n    CourseHomeComponent,\n    AboutComponent,\n    UsersComponent,\n    ReadComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent,canActivate:[AuthGuard]},\n      {path: 'about', component: AboutComponent},\n      {path: 'addcourse',component: AddCourseComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id', component: CourseHomeComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id/list', component: UsersComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id/read', component: ReadComponent,canActivate:[AuthGuard]},\n      {path: 'login', component: LoginComponent},\n      {path: 'register', component: RegisterComponent},\n      {path: 'logout', component: LogoutComponent,},\n      {path:'**',component:LoginComponent},\n    ]),\n    NgbModule,\n    MatExpansionModule,\n    NoopAnimationsModule,\n  ],\n  providers: [\n    UserService,\n    AuthenticationService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/authentication.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, logout: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:121\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logout\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        this returns a boolean value which tells whether its logged in or not\nIf you are logged in this refreshes the token to make sure the website isnt idle for long\nIf not logged in it logs out and redirects to login page\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                decode\n                            \n                            \n                                getExpiration\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isLoggedOut\n                            \n                            \n                                login\n                            \n                            \n                                refreshToken\n                            \n                            \n                                    Private\n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decode(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExpiration\n                        \n                        \n                    \n                \n            \n            \n                \ngetExpiration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedOut\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(data: Login)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSession(authResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authResult\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUserValue\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/course.ts\n        \n\n            \n                Description\n            \n            \n                course object consist of course name and course code which is 5 character\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Course {\n    name: string;\n    code: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseHomeComponent.html":{"url":"components/CourseHomeComponent.html","title":"component - CourseHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-home/course-home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-home\n            \n\n            \n                styleUrls\n                ./course-home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./course-home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                a_s_l\n                            \n                            \n                                a_t_l\n                            \n                            \n                                course_id\n                            \n                            \n                                course_status\n                            \n                            \n                                m_s_l\n                            \n                            \n                                m_t_l\n                            \n                            \n                                message\n                            \n                            \n                                messages\n                            \n                            \n                                submitted_add\n                            \n                            \n                                submitted_m\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddStudent\n                            \n                            \n                                AddTA\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                SendStudent\n                            \n                            \n                                SendTA\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, activatedRoute: ActivatedRoute, who: UserwhoService, addtocourse: AddToCourseService, messageService: MessageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-home/course-home.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        who\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addtocourse\n                                                  \n                                                        \n                                                                        AddToCourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddStudent\n                        \n                        \n                    \n                \n            \n            \n                \nAddStudent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:99\n                \n            \n\n\n            \n                \n                    This function adds a student which can be done by TA/Prof\nIf username is invalid it stops\nElse it calls the addToCourse to add the student\nIf the process is successful it window alerts the process is successful else it alerts process failed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddTA\n                        \n                        \n                    \n                \n            \n            \n                \nAddTA()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:119\n                \n            \n\n\n            \n                \n                    This function adds a student which can be done only by the professor\nRest is similar to AddStudent()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:68\n                \n            \n\n\n            \n                \n                    First course_id variable is extracted from the path using activatedRoute\nThen who service is called which updates the course_status variable\nThen messageService is called which makes a get request to fetch all the messages sent in the course\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SendStudent\n                        \n                        \n                    \n                \n            \n            \n                \nSendStudent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:163\n                \n            \n\n\n            \n                \n                    This function is used to send message to students which is allowed for both the  professor and TA's\nRest is similar as SendTA()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SendTA\n                        \n                        \n                    \n                \n            \n            \n                \nSendTA()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:143\n                \n            \n\n\n            \n                \n                    This function is used to send message to TA which is allowed only for the professor\nIf the message is invalid it stops\nElse it calls the send message service with last argument as TA to send the message\nIf the message is sent the page is reloaded and the message sent will be seen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            a_s_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:36\n                            \n                        \n\n                \n                    \n                        add student loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            a_t_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:40\n                            \n                        \n\n                \n                    \n                        add TA loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_id\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:21\n                            \n                        \n\n                \n                    \n                        this stores course id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_status\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            m_s_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:48\n                            \n                        \n\n                \n                    \n                        message student loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            m_t_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:44\n                            \n                        \n\n                \n                    \n                        message TA loading to check if the process is loading.Note only profs can send message to TA and student can't see them\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:52\n                            \n                        \n\n                \n                    \n                        to store the set of messages sent in the course to render in the html\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted_add\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:26\n                            \n                        \n\n                \n                    \n                        to store if add person option is chosen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted_m\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:30\n                            \n                        \n\n                \n                    \n                        to store if send message is chosen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course-home/course-home.component.ts:86\n                                \n                            \n                    \n                        \n                                to provide form controls to the html part\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {UserwhoService}  from '../services/userwho.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {AddToCourseService} from '../services/add-to-course.service';\nimport {MessageService} from '../services/message.service';\n//import {MatExpansionModule} from '@angular/material/expansion';\n//import { Observable } from 'rxjs';\n//import {Message} from '../_models/message';\n@Component({\n  selector: 'app-course-home',\n  templateUrl: './course-home.component.html',\n  styleUrls: ['./course-home.component.scss']\n})\nexport class CourseHomeComponent implements OnInit {\n  /**\n   * this stores course id\n   */\n  course_id;\n  course_status;\n  /**\n   * to store if add person option is chosen\n   */\n  submitted_add=false;\n  /**\n   * to store if send message is chosen\n   */\n  submitted_m=false;\n  username:FormControl;\n  message:FormGroup;\n  /**\n   * add student loading to check if the process is loading\n   */\n  a_s_l=false;\n  /**\n   * add TA loading to check if the process is loading\n   */\n  a_t_l=false;\n  /**\n   * message TA loading to check if the process is loading.Note only profs can send message to TA and student can't see them\n   */\n  m_t_l=false;\n  /**\n   * message student loading to check if the process is loading\n   */\n  m_s_l=false;\n  /**\n   * to store the set of messages sent in the course to render in the html\n   */\n  messages\n  constructor(\n    private formBuilder: FormBuilder,\n    private activatedRoute:ActivatedRoute,\n    private who:UserwhoService,\n    private addtocourse:AddToCourseService,\n    private messageService:MessageService,\n    private router:Router,\n  ) { }\n  /**\n   * First course_id variable is extracted from the path using activatedRoute\n   * \n   * Then who service is called which updates the course_status variable\n   * \n   * Then messageService is called which makes a get request to fetch all the messages sent in the course\n   */\n  ngOnInit(): void {\n    this.course_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.who.STATUS(this.course_id)\n    .pipe(first())\n    .subscribe(data=>{\n      console.log(data);\n      this.course_status=data['status'];\n    });\n    this.username=new FormControl('',Validators.required);\n    this.message=this.formBuilder.group({\n      message_text: ['', Validators.required],\n      message_priority: [false, Validators.required]\n  });\n    this.messageService.GET_MESSAGES(this.course_id).subscribe(data1=>this.messages=data1);\n  }\n  /**\n   * to provide form controls to the html part\n   */\n  get f()\n  {\n    return this.message.controls;\n  }\n  /**\n   * This function adds a student which can be done by TA/Prof\n   * \n   * If username is invalid it stops\n   * \n   * Else it calls the addToCourse to add the student\n   * \n   * If the process is successful it window alerts the process is successful else it alerts process failed\n   */\n  AddStudent(){\n    this.submitted_add=true;\n    if(this.username.invalid){\n      window.alert(\"Invalid Username\");\n      return ;\n    }\n    this.a_s_l=true;\n    this.addtocourse.AddToCourse(this.username.value,this.course_id,'student').pipe(first())\n    .subscribe(\n      data=>{window.alert(\"Student is added successfully\");location.reload();},\n      error=>{window.alert(\"Adding student is unsuccessful\");}\n    )\n    this.a_s_l=false;\n    this.submitted_add=false;\n  }\n  /**\n   * This function adds a student which can be done only by the professor\n   * \n   * Rest is similar to AddStudent()\n   */\n  AddTA(){\n    this.submitted_add=true;\n    if(this.username.invalid){\n      return ;\n    }\n    this.a_t_l=true;\n    this.addtocourse.AddToCourse(this.username.value,this.course_id,'TA').pipe(first())\n    .subscribe(\n      data=>{console.log(data);window.alert(\"TA is added successfully\");location.reload();},\n      error=>{window.alert(\"adding TA unsuccessful\");}\n      \n    )\n    this.a_t_l=false;\n    this.submitted_add=false;\n  }\n  /**\n   * This function is used to send message to TA which is allowed only for the professor\n   * \n   * If the message is invalid it stops\n   * \n   * Else it calls the send message service with last argument as TA to send the message\n   * \n   * If the message is sent the page is reloaded and the message sent will be seen\n   */\n  SendTA(){\n    this.submitted_m=true;\n    if(this.message.invalid){\n      return ;\n    }\n    this.m_t_l=true;\n    this.messageService.SEND_MESSAGE(this.course_id,this.message.value,'TA').pipe(first())\n    .subscribe(\n      data=>{console.log(data);\n        location.reload();\n      }\n    );\n    this.m_t_l=false;\n    this.submitted_m=false;\n  }\n  /**\n   * This function is used to send message to students which is allowed for both the  professor and TA's\n   * \n   * Rest is similar as SendTA()\n   */\n  SendStudent(){\n    this.submitted_m=true;\n    if(this.message.invalid){\n      return ;\n    }\n    this.m_s_l=true;\n    this.messageService.SEND_MESSAGE(this.course_id,this.message.value,'student').pipe(first())\n    .subscribe(\n      data=>{console.log(data);\n        location.reload();\n      }\n    )\n    this.m_s_l=false;\n    this.submitted_m=false;\n  }\n}\n\n    \n\n    \n            \n     \n        \n        \n            Add a student / TA\n        \n    \n    \n        \n              Username:\n              \n              \n                Username is required\n              \n              Add TA\n              Add Student  \n          \n      \n \n\n    \n     \n         -->\n        \n            Send a Message!\n        \n    \n    \n        \n            \n                Message:\n                \n                \n                    High Priority\n                    \n                \n                \n                    Low Priority\n                    \n                -->\n                \n                Lower Priority\n                \n                High Priority\n                \n                    Message cannot be empty\n                \n                \n                    Send to TA\n                \n                \n                    Send to Students  \n                \n            \n        \n      \n \n\n\n    Previous Messages\n         \n        \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n           \n        \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n    \n\n   Low Priority Messages:\n         \n        \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n               \n    \n    \n    Low Priority Messages:\n         \n        \n            \n                \n                    {{message.from_username}}\n                \n                \n                    {{message.message}}\n                \n            \n               \n    -->\n\n\n    \n\n    \n                \n                    ./course-home.component.scss\n                \n                .form-control {\n    width: 70%;\n    margin-left: 15%;\n    margin-right: 15%;\n    margin-bottom: 20px;\n    height: 35px;\n    font-size: medium;\n    // text-align: center;\n    // margin-top: 20%;\n}\n\n.mat-expansion-panel {\n    overflow: inherit !important;\n}\n\n.btn-xl {\n    padding: 10px 20px;\n    font-size: 15px;\n    border-radius: 10px;\n}\n\n.add {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 10%;\n    text-align: center;\n}\n.send {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: 20%;\n    text-align: center;\n}\n\n.message {\n    margin-top: 5%;\n    height: 20%;\n}\n\n.message-title {\n    margin-left: 50px;\n}\n\n.container {\n    margin-top: 5%;\n}\n\n.priority{\n    font-size: 20px;\n}\n\n.card{\n    \n    margin-bottom: 2%;\n}\n\n.prof{\n    margin-right: 40%;\n}\n\n.TA{\n    margin-left: 70%;\n}\n\n.card-header{\n    color: blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                     Add a student / TA                                      Username:                                            Username is required                            Add TA              Add Student                                     -->                    Send a Message!                                                    Message:                                                    High Priority                                                                        Low Priority                                    -->                                Lower Priority                                High Priority                                    Message cannot be empty                                                    Send to TA                                                    Send to Students                                                 Previous Messages                                                                                         {{message.from_username}}                                                                {{message.message}}                                                                                                                        {{message.from_username}}                                                                {{message.message}}                                                                                                                                           {{message.from_username}}                                                                {{message.message}}                                                                                                                        {{message.from_username}}                                                                {{message.message}}                                                                   Low Priority Messages:                                                                                         {{message.from_username}}                                                                {{message.message}}                                                                                                                        {{message.from_username}}                                                                {{message.message}}                                                                           Low Priority Messages:                                                                 {{message.from_username}}                                                    {{message.message}}                                               -->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CourseStatus.html":{"url":"interfaces/CourseStatus.html","title":"interface - CourseStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CourseStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/course-status.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\nexport interface CourseStatus {\n    course:Course;\n    status:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courses\n                            \n                            \n                                is_professor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddCourse\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(who: UserwhoService, router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        who\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddCourse\n                        \n                        \n                    \n                \n            \n            \n                \nAddCourse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:47\n                \n            \n\n\n            \n                \n                    This allows the professor to add a new course\nThis function leads to a different component add course\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:31\n                \n            \n\n\n            \n                \n                    Calls who service to get the set of courses of a person\nAlso it updates the is_professor variable \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n                \n                    \n                        Contains the set of courses the user is associated with\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:20\n                            \n                        \n\n                \n                    \n                        Stores if the user is a professor or not\nThe main constraint is that a professor cannot be a student in another course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {UserwhoService} from '../services/userwho.service';\nimport {AuthenticationService} from '../services/authentication.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * Contains the set of courses the user is associated with\n   */\n  courses;\n  /**\n   * Stores if the user is a professor or not\n   * \n   * The main constraint is that a professor cannot be a student in another course\n   */\n  is_professor;\n  constructor(\n    private who: UserwhoService,\n    private router: Router,\n    private authenticationService : AuthenticationService,\n  ) { }\n  /**\n   * Calls who service to get the set of courses of a person\n   * \n   * Also it updates the is_professor variable \n   */\n  ngOnInit(): void {\n    this.who.WHO().subscribe(data => {console.log(data);\n                                      this.courses = data;\n                                    });\n    if(localStorage.getItem('is_professor')=='true'){\n      this.is_professor=true;\n    }\n    else{\n      this.is_professor=false;\n    }\n  }\n  /**\n   * This allows the professor to add a new course\n   * \n   * This function leads to a different component add course\n   */\n  AddCourse(){\n    console.log('clicked');\n    this.router.navigate(['addcourse']);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        Add Course\n    \n\n\n\n    \n        \n            \n            \n                {{course.code}}\n                 {{course.name}}\n                List\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .flex-container {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    padding-top: 20px;\n    margin-left: 10%;\n    margin-right: 10%;\n    gap: 40px;\n}\n\n.tot {\n    border: 1px solid black;\n}\n\n.card bg-danger {\n    flex-grow: 0;\n    flex-shrink: 0;\n    flex-basis: calc(50% - 10px);\n    /* separate properties for IE11 upport */\n    background: orange;\n    margin: 5px;\n    padding-top: 30px;\n}\n\n.add_course_button {\n    padding-top: 40px;\n    padding-right: auto;\n    padding-left: 40px;\n        \n}\n\n.card-img-top {\n    width: 100%;\n    height: 15vw;\n    object-fit: cover;\n}\n\n.addCourse {\n    background-color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Course                                                        {{course.code}}                 {{course.name}}                List                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTPayload.html":{"url":"interfaces/JWTPayload.html","title":"interface - JWTPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JWTPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        exp\n                                \n                                \n                                        user_id\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login.html":{"url":"interfaces/Login.html","title":"interface - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/login.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Login {\n    username: string;\n    password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService, idService: UserwhoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        idService\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:77\n                \n            \n\n\n            \n                \n                    This function performs the logic\nIf form is invalid stop\nCheck for invalid login and if success then call idService\nIf the login was successful after matching the data then redirect to the course page\nAlso before moving onto the home page the function also sets the is_professor variable in the local storage which will be used\nElse window alert that login was unsuccessful\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        variable to account for server/website loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        stores input data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        check if user submitted the data\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:60\n                                \n                            \n                    \n                        \n                                function to return form controls\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {UserwhoService} from '../services/userwho.service';\nimport { User } from '../_models';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    /**\n     * stores input data\n     */\n    loginForm: FormGroup;\n    /**\n     * variable to account for server/website loading\n     */\n    loading = false;\n    /**\n     * check if user submitted the data\n     */\n    submitted = false;\n    returnUrl: string;\n    \n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private idService:UserwhoService,\n        )\n    {\n        // redirect to home if already logged in\n        if (localStorage.getItem('token')!=null && localStorage.getItem('token')!=\"undefined\") {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit()\n    {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n\n    /**\n     * function to return form controls\n     */\n    get f(){\n        return this.loginForm.controls;\n    }\n\n    /**\n     * This function performs the logic\n     * \n     * If form is invalid stop\n     * \n     * Check for invalid login and if success then call idService\n     * \n     * If the login was successful after matching the data then redirect to the course page\n     * \n     * Also before moving onto the home page the function also sets the is_professor variable in the local storage which will be used\n     * \n     * Else window alert that login was unsuccessful\n     */\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.loginForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    const tok=localStorage.getItem('token');\n                    if(tok==null||tok=='undefined'){\n                        this.loading=false;\n                        window.alert('invalid login');\n                        this.router.navigate(['login']);\n                    }\n                    else{\n                        this.idService.IDENTITY().pipe(first())\n                        .subscribe(\n                            data=>{console.log(data);\n                            if(data['is_professor']==true){\n                                localStorage.setItem('is_professor','true');\n                            }\n                            else{\n                                localStorage.setItem('is_professor','false');\n                            }\n                            this.router.navigate([this.returnUrl]);\n                        });\n                    }\n                    \n                },\n                error => {\n                    this.loading = false;\n                });\n    }\n\n}\n\n    \n\n    \n        \n\n\n    \n         Login\n    \n    \n        \n            \n                \n\n                    \n                    \n                        Username is required\n                    \n                \n                \n                    \n                    \n                        Password is required\n                    \n                \n                \n                    \n                        \n                        Login\n                        \n                    \n                    Don't have an account? Sign Up Here\n                \n            \n        \n        \n    Username\n    \n\n    Password\n    \n        \n    Login\n    \n       Remember me\n    \n  -->\n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .card-header {\n    font-size: 35px;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10%;\n    padding-bottom: 20%;\n}\n\n.card-body {\n    margin-top: 50px;\n    padding-top: 50px;\n}\n\n.space-it {\n    margin-top: 30px;\n    padding-top: 30%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    margin-bottom: 20px;\n}\n\n.login {\n    margin-right: 20px;\n}\n\n.button {\n    text-align: center;\n}\n\n.form-control{\n    font-size: medium;\n}\n\n.login_button{\n    background-color: slateblue;\n    font-size: 15px;\n    border-radius: 10px;\n      \n}\n\n.required{\n    font-size: large;\n    margin-left: 50px;\n    color: chartreuse;\n}\n\n\n.dont-have{\n    background-color:red;\n    padding-left: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Login                                                                                                            Username is required                                                                                                                    Password is required                                                                                                                        Login                                                                Don\\'t have an account? Sign Up Here                                                Username        Password                Login           Remember me      -->    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logout: LogoutService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/logout/logout.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logout\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/logout/logout.component.ts:20\n                \n            \n\n\n            \n                \n                    This functions clears the local storage and moves out\nThen it takes to the login page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LogoutService } from '../services/logout.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private logout: LogoutService,\n    private router:Router,\n  ) { }\n/**\n * This functions clears the local storage and moves out\n * \n * Then it takes to the login page\n */\n  ngOnInit(): void {\n    //this.logout.logout()\n    window.localStorage.clear();\n    this.router.navigate(['/login']);\n  \n  }\n\n}\n\n    \n\n    \n        logout works!\n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logout.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logout.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logout.service.ts:23\n                \n            \n\n\n            \n                \n                    This function just clears local storage and logs out\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {BASE_URL} from './base';\nconst LOGOUT_URL = BASE_URL+'/api/auth/logout/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogoutService {\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n  /**\n   * This function just clears local storage and logs out\n   */\n  logout() {\n    /*\n    localStorage.removeItem('token');\n    localStorage.removeItem('expires_at');*/\n    localStorage.clear();\n    console.log(\"hi\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/message.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        by\n                                \n                                \n                                        course\n                                \n                                \n                                        from_username\n                                \n                                \n                                        id\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        message\n                                \n                                \n                                        prior\n                                \n                                \n                                        read_by\n                                \n                                \n                                        sent\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        by\n                                    \n                                \n                                \n                                    \n                                        by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from_username\n                                    \n                                \n                                \n                                    \n                                        from_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prior\n                                    \n                                \n                                \n                                    \n                                        prior:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        read_by\n                                    \n                                \n                                \n                                    \n                                        read_by:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    It stores who all read the message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sent\n                                    \n                                \n                                \n                                    \n                                        sent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    it stores the type who should receive,it can be student or TA\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    id:number;\n    sent:string;\n    message:string;\n    /**\n     * it stores the type who should receive,it can be student or TA\n     */\n    to:string;\n    course:number;\n    by:number;\n    prior:boolean;\n    /**\n     * It stores who all read the message\n     */\n    read_by:Array;\n    from_username:string;\n    is_professor:boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageSent.html":{"url":"interfaces/MessageSent.html","title":"interface - MessageSent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageSent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/message_sent.ts\n        \n\n            \n                Description\n            \n            \n                this interface is for message content which contains the message text and the message priority \nwhich is either high or low\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message_priority\n                                \n                                \n                                        message_text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message_priority\n                                    \n                                \n                                \n                                    \n                                        message_priority:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message_text\n                                    \n                                \n                                \n                                    \n                                        message_text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MessageSent {\n    message_text:string;\n    message_priority:boolean;\n   \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                GET_MESSAGES\n                            \n                            \n                                READ_MESSAGE\n                            \n                            \n                                SEND_MESSAGE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GET_MESSAGES\n                        \n                        \n                    \n                \n            \n            \n                \nGET_MESSAGES(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            READ_MESSAGE\n                        \n                        \n                    \n                \n            \n            \n                \nREAD_MESSAGE(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SEND_MESSAGE\n                        \n                        \n                    \n                \n            \n            \n                \nSEND_MESSAGE(id: number, message: MessageSent, to: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                MessageSent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Message} from '../_models/message';\nimport {ReadBy} from '../_models/read_by';\nimport {MessageSent} from '../_models/message_sent';\nimport {BASE_URL} from './base';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(\n    private http:HttpClient,\n  ) { }\n  GET_MESSAGES(id:number):Observable{\n    const URL=BASE_URL+'/api/messages/'+id.toString()+'/';\n    return this.http.get(URL,httpOptions);\n  }\n  SEND_MESSAGE(id:number,message:MessageSent,to:string): Observable{\n    const URL=BASE_URL+'/api/messages/'+id.toString()+'/';\n    var data={};\n    data['to']=to;\n    data['message']=message['message_text'];\n    window.alert(message['message_text']);\n    data['prior']=message['message_priority'];\n\n    if(data['prior']==\"true\")\n      data['prior']=true;\n    else\n      data['prior']=false;\n\n   // window.alert(data['prior']);\n    console.log(data);\n    return this.http.post(URL,data,httpOptions);\n  }\n  READ_MESSAGE(id:number)\n  {\n    const URL=BASE_URL+'/api'+'/readby/'+id.toString()+'/';\n    return this.http.get(URL,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadBy.html":{"url":"interfaces/ReadBy.html","title":"interface - ReadBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/read_by.ts\n        \n\n            \n                Description\n            \n            \n                interface which represents the username of people who read a particular message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ReadBy{\n    username:String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReadComponent.html":{"url":"components/ReadComponent.html","title":"component - ReadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/read/read.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-read\n            \n\n            \n                styleUrls\n                ./read.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./read.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message_id\n                            \n                            \n                                read_list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, activatedRoute: ActivatedRoute, messageservice: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/read/read.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageservice\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/read/read.component.ts:28\n                \n            \n\n\n            \n                \n                    First the message id is extracted from the path using activatedRoute\nThen message service is called to get the set of users who read the messsage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/read/read.component.ts:15\n                            \n                        \n\n                \n                    \n                        contains the particular message id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/read/read.component.ts:19\n                            \n                        \n\n                \n                    \n                        Contains the set of people who read the message\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {MessageService} from '../services/message.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {BASE_URL} from  '../services/base';\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.scss']\n})\nexport class ReadComponent implements OnInit {\n  /**\n   * contains the particular message id\n   */\n  message_id:any;\n  /**\n   * Contains the set of people who read the message\n   */\n  read_list:any;\n  constructor(private http:HttpClient,\n    private activatedRoute:ActivatedRoute,\n    private messageservice:MessageService,) { }\n/**\n * First the message id is extracted from the path using activatedRoute\n * \n * Then message service is called to get the set of users who read the messsage\n */\n  ngOnInit(): void {\n    this.message_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.messageservice.READ_MESSAGE(this.message_id).subscribe(data=>{this.read_list=data;});\n    //console.log(\"hai\");\n    //console.log(this.read_list);\n    //this.userservice.get_students(this.course_id).subscribe((data)=>{this.list_of_students=data;});\n  }\n\n}\n\n    \n\n    \n        People who read the message:\n\n    \n        {{reader.username}}       \n    \n    \n\n\n    \n\n    \n                \n                    ./read.component.scss\n                \n                .card{\n    width: 40%;\n    margin-left: 5%;\n}\n\n.h1{\n    color:blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'People who read the message:            {{reader.username}}               '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth_code_form\n                            \n                            \n                                auth_code_status\n                            \n                            \n                                loading\n                            \n                            \n                                registerForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                                \n                                    f1\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:89\n                \n            \n\n\n            \n                \n                    This function performs the logic when the user submits \nFirst checks if the field values are invalid if yes stops\nThen it checks for the authentication code status\nIt verifies with the regular expression and if matches proceeds by calling the register service\nIf everything is successful it takes back to login page else window alert message    \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth_code_form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth_code_status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:38\n                            \n                        \n\n                \n                    \n                        to check if the authentication code matches with the form needed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n                \n                    \n                        variable to account for loading time and for frontend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n                \n                    \n                        Registration form to input the fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:34\n                            \n                        \n\n                \n                    \n                        variable to account if submitted or not\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:72\n                                \n                            \n                    \n                        \n                                to return controls for fields for registration form\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        f1\n                    \n                \n\n                \n                    \n                        getf1()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:77\n                                \n                            \n                    \n                        \n                                to return controls for auth form \n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { UserService } from '../services/user.service';\n/**\n * This expression is a regular expression representing student code\n * So students only with this matching will be allowed,else wont be\n */\nconst student_expression=/[1-2]\\d[A-Z0-9]\\d{6}/;\n/**\n * This is the authentication code regular expression for professors\n */\nconst professor_expression=/P[A-Z]{2,3}\\d{3}/;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\n\nexport class RegisterComponent implements OnInit {\n    /**\n     * Registration form to input the fields\n     */\n    registerForm: FormGroup;\n    /**\n     * variable to account for loading time and for frontend\n     */\n    loading = false;\n    /**\n     * variable to account if submitted or not\n     */\n    submitted = false;\n    /**\n     * to check if the authentication code matches with the form needed\n     */\n    auth_code_status=false;\n    auth_code_form:FormGroup;\n    \n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private userService: UserService,\n        /*private authenticationService: AuthenticationService,\n        private alertService: AlertService*/\n    ) { \n        // redirect to home if already logged in\n        /*if (this.authenticationService.currentUserValue) { \n            this.router.navigate(['/']);\n        }*/\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            email: ['',Validators.required,],\n            \n            is_professor:[false,Validators.required],\n        });\n        this.auth_code_form=this.formBuilder.group({\n            auth_code: ['',Validators.required],\n        })\n    }\n\n    // convenience getter for easy access to form fields\n    /**\n     * to return controls for fields for registration form\n     */\n    get f() { return this.registerForm.controls; }\n\n    /**\n     * to return controls for auth form \n     */\n    get f1() {return this.auth_code_form.controls;}\n\n    /**\n     * This function performs the logic when the user submits \n     * \n     * First checks if the field values are invalid if yes stops\n     * \n     * Then it checks for the authentication code status\n     * \n     * It verifies with the regular expression and if matches proceeds by calling the register service\n     * \n     * If everything is successful it takes back to login page else window alert message    */\n    onSubmit() {\n        this.submitted = true;\n      //console.log(this.submitted);\n        \n        if (this.registerForm.invalid || this.auth_code_form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        var s=this.f1.auth_code.value;\n        \n        if (s!=null && s!=\"undefined\")\n        {\n            if(student_expression.test(s)==true)\n            {\n                this.auth_code_status=true;\n                \n            }\n            else if(professor_expression.test(s)==true)\n            {\n                this.auth_code_status=true;\n                this.registerForm.patchValue({is_professor:true});\n            }\n            else\n            {\n                this.auth_code_status=false;\n            }\n        }\n        else\n        {\n            this.auth_code_status=false;\n        }\n        if(!this.auth_code_status)\n        {\n            window.alert(\"incorrect authentication code on first place\");\n            this.loading=false;\n            window.alert(\"registration unsuccessful\");\n            return;\n        }\n        this.userService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {window.alert(\"registered successfully\");\n                         this.router.navigate(['/login']);\n                },\n                error => {\n                    window.alert(\"registration unsuccessful\");\n                    this.loading = false;\n                });\n          //console.log(this.registerForm.value);\n    }\n}\n\n    \n\n    \n        \n\n\n    Register\n    \n        \n\n            \n                Username:\n                \n                \n                    Username is required\n                \n            \n            \n                Email:\n                \n                \n                    Email is required\n                \n            \n            \n                Password:\n                \n                \n                    Password is required\n                    Password must be at least 6 characters\n                \n            \n        \n           \n\n        \n            \n                Authentication Code:\n                \n                \n                    Authentication Code is required\n                \n            \n        \n\n        \n            \n                \n                 Register\n            \n            \n            \n                Cancel\n            \n            Already have an account? Login Here\n        \n    \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                .card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5%;\n}\n\n.card-header {\n    font-size: 35px;\n    color: black;\n    text-align: center;\n}\n\n.card-body {\n    margin-top: 2%;\n    padding-top: 5%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    margin-bottom: 20px;\n    font-size: medium;\n}\n\n.form-group {\n    text-align: center;\n}\n\ninput[type=\"radio\"] {\n    margin: 0 10px;\n}\n\n.cancel {\n    color: white;\n}\n\n.cancel:hover {\n    color: blue;\n}\n\n.al{\n    font-size: medium;\n}\n\n.required{\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Register                                        Username:                                                    Username is required                                                        Email:                                                    Email is required                                                        Password:                                                    Password is required                    Password must be at least 6 characters                                                                                   Authentication Code:                                                    Authentication Code is required                                                                                         Register                                                    Cancel                        Already have an account? Login Here            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopBarComponent.html":{"url":"components/TopBarComponent.html","title":"component - TopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/top-bar/top-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-bar\n            \n\n            \n                styleUrls\n                ./top-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interval\n                            \n                            \n                                logged_in\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check_logIN\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/top-bar/top-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check_logIN\n                        \n                        \n                    \n                \n            \n            \n                \ncheck_logIN()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-bar/top-bar.component.ts:26\n                \n            \n\n\n            \n                \n                    This function regularly checks at interval of 0.5sec and clears the local storage if the user had logged out \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-bar/top-bar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : setInterval(()=>{this.check_logIN();},500)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/top-bar/top-bar.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logged_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/top-bar/top-bar.component.ts:14\n                            \n                        \n\n                \n                    \n                        this variable checks the status whether the user is logged in or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { NONE_TYPE } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n  /**\n   * this variable checks the status whether the user is logged in or not\n   */\n  logged_in:boolean;\n  interval=setInterval(()=>{this.check_logIN();},500);\n  constructor()\n  { \n  }\n\n  ngOnInit(): void {\n    this.check_logIN();\n  }\n  /**\n   * This function regularly checks at interval of 0.5sec and clears the local storage if the user had logged out \n   */\n  check_logIN(){\n    if((localStorage.getItem('token')==null)||(localStorage.getItem('token')=='undefined')){\n      this.logged_in=false;\n    }\n    else{\n      this.logged_in=true;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n    Our Team -->\n    \n      \n    \n\n    \n        \n            \n                Our Team \n            \n        \n        \n            \n                Dashboard\n            \n        \n        \n            \n                \n                    Logout\n                \n            \n            \n                \n                    \n                        Login\n                    \n                \n                \n                    \n                        Register\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./top-bar.component.scss\n                \n                a {\n    color: white;\n    font-size: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Our Team -->                                                      Our Team                                                         Dashboard                                                                            Logout                                                                                                    Login                                                                                                Register                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user.ts\n        \n\n            \n                Description\n            \n            \n                contains user details like username,password,email and if that person is a professor\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                is_professor\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    username: string;\n    password: string;\n    email: string;\n    is_professor: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMy.html":{"url":"interfaces/UserMy.html","title":"interface - UserMy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserMy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-my.ts\n        \n\n            \n                Description\n            \n            \n                interface to represent the current user loggen in\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    contains the list of courses the person is associated.He/She can be \neither a Professor or TA or a student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    holds whether the person is a professor or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user id that is stored in the database\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\n/**\n * interface to represent the current user loggen in\n */\nexport interface UserMy {\n    /**\n     * user id that is stored in the database\n     */\n    user: number;\n    /**\n     * holds whether the person is a professor or not\n     */\n    is_professor: boolean;\n    token: string;\n    /**\n     * contains the list of courses the person is associated.He/She can be \n     * either a Professor or TA or a student\n     */\n    courses: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMyList.html":{"url":"interfaces/UserMyList.html","title":"interface - UserMyList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserMyList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/list_of_student.ts\n        \n\n            \n                Description\n            \n            \n                this interface is for the list of students registered in a course\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\n/**\n * this interface is for the list of students registered in a course\n */\nexport interface UserMyList {\n    user: number;\n    is_professor: boolean;\n    token: string;\n    courses: Array;\n    username:String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserReal.html":{"url":"interfaces/UserReal.html","title":"interface - UserReal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserReal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-real.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        first_name\n                                \n                                \n                                        id\n                                \n                                \n                                        last_name\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserReal {\n    id: number;\n    username: string;\n    password: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete_students\n                            \n                            \n                                get_students\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete_students\n                        \n                        \n                    \n                \n            \n            \n                \ndelete_students(id: number, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get_students\n                        \n                        \n                    \n                \n            \n            \n                \nget_students(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models';\nimport {UserMy} from '../_models/user-my';\nimport {UserMyList} from '../_models/list_of_student';\nimport {BASE_URL} from  './base';\nimport { ConstantPool } from '@angular/compiler';\nconst REGISTER_URL = BASE_URL+'/api/user/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient)\n  {\n  }\n  register(user: User): Observable\n  {\n    return this.http.post(REGISTER_URL, user, httpOptions);\n  }\n  get_students(id:number):Observable\n  { \n    var url=BASE_URL+'/api/usercourse/'+id.toString()+'/';\n    return this.http.get(url,httpOptions);\n  }\n  delete_students(id:number,username:string)\n  {\n    var url=BASE_URL+'/api/usercourse/'+id.toString()+'/';\n    var data={};\n    data['username']=username;\n    console.log(\"hello bro\");\n    return this.http.post(url,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserToken.html":{"url":"interfaces/UserToken.html","title":"interface - UserToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-token.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        token_form\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_form\n                                    \n                                \n                                \n                                    \n                                        token_form:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\nexport interface UserToken {\n    user: number;\n    is_professor: boolean;\n    token: string;\n    courses: Array;\n    token_form:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course_id\n                            \n                            \n                                is_professor\n                            \n                            \n                                list_of_students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete_student\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, activatedRoute: ActivatedRoute, userservice: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/users.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userservice\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete_student\n                        \n                        \n                    \n                \n            \n            \n                \ndelete_student(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This represents the username of the person to be removed\nThis function calls the userservice to delete the student of a particular username \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.component.ts:43\n                \n            \n\n\n            \n                \n                    First the course id is extracted using activatedRoute from the path\nThen userService is called to get the list_of_students \nNote here the professor cannot remove himself from the course via the UI\nThis function also sets the is_professor variable by looking into the local storage to give permission to remove students/TA's\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list_of_students\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:22\n                            \n                        \n\n                \n                    \n                        Represents the list of users registered in the course including the professor\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport {BASE_URL} from  '../services/base';\nimport {UserService} from '../services/user.service';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\n\nexport class UsersComponent implements OnInit {\n  /**\n   * Represents the list of users registered in the course including the professor\n   * \n   */\nlist_of_students:any;\n\ncourse_id:any;\n\nis_professor:boolean;\n  constructor(private http:HttpClient,\n    private activatedRoute:ActivatedRoute,\n    private userservice:UserService,\n    ) { \n    \n  }\n/**\n * First the course id is extracted using activatedRoute from the path\n * \n * Then userService is called to get the list_of_students \n * \n * Note here the professor cannot remove himself from the course via the UI\n * \n * This function also sets the is_professor variable by looking into the local storage to give permission to remove students/TA's\n * \n */\n  ngOnInit(): void {\n    this.course_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.userservice.get_students(this.course_id).subscribe((data)=>{this.list_of_students=data;});\n    \n    if(localStorage.getItem('is_professor')=='true'){\n      this.is_professor=true;\n    }\n    else{\n      this.is_professor=false;\n    }\n\n  }\n/**\n * \n * @param username This represents the username of the person to be removed\n * This function calls the userservice to delete the student of a particular username \n */\n  delete_student(username:string)\n  {\n    this.userservice.delete_students(this.course_id,username).subscribe(data=>{location.reload()});\n    \n  }\n\n\n}\n\n    \n\n    \n        Professor\n\n \n    \n        \n            {{student.username}}\n        \n        \n    \n\n\nStudents and TA's\n \n    \n        \n            {{student.username}}\n        \n        \n            \n                Remove the student\n            \n        \n    \n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                .list{\n    margin-bottom: 3%;\n    margin-right:80%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Professor                         {{student.username}}                    Students and TA\\'s                         {{student.username}}                                            Remove the student                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserwhoService.html":{"url":"injectables/UserwhoService.html","title":"injectable - UserwhoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserwhoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/userwho.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                IDENTITY\n                            \n                            \n                                STATUS\n                            \n                            \n                                WHO\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/userwho.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            IDENTITY\n                        \n                        \n                    \n                \n            \n            \n                \nIDENTITY()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            STATUS\n                        \n                        \n                    \n                \n            \n            \n                \nSTATUS(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            WHO\n                        \n                        \n                    \n                \n            \n            \n                \nWHO()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {UserReal} from '../_models/user-real';\nimport {Course} from '../_models/course';\nimport {BASE_URL} from './base';\nconst USER_URL = BASE_URL+'/api/user/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserwhoService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n  /**\n   * \n   */\n  WHO(){\n    const USE_URL = BASE_URL+'/api/courses/';\n    return this.http.get(USE_URL, httpOptions);\n  }\n  /**\n   * \n   * @param id \n   */\n  STATUS(id:number){\n    const USE_URL=BASE_URL+'/api/user/'+id.toString()+'/abc/';\n    return this.http.get(USE_URL,httpOptions);\n  }\n  /**\n   * \n   */\n  IDENTITY(){\n    const USE_URL = BASE_URL + '/api/usermy/';\n    return this.http.get(USE_URL,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/course-status.ts\n            \n            interface\n            CourseStatus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/course.ts\n            \n            interface\n            Course\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_models/list_of_student.ts\n            \n            interface\n            UserMyList\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/_models/login.ts\n            \n            interface\n            Login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/message.ts\n            \n            interface\n            Message\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/_models/message_sent.ts\n            \n            interface\n            MessageSent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_models/read_by.ts\n            \n            interface\n            ReadBy\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/_models/user-my.ts\n            \n            interface\n            UserMy\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/_models/user-real.ts\n            \n            interface\n            UserReal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/_models/user-token.ts\n            \n            interface\n            UserToken\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_models/user.ts\n            \n            class\n            User\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/add-course/add-course.component.ts\n            \n            component\n            AddCourseComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/course-home/course-home.component.ts\n            \n            component\n            CourseHomeComponent\n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/read/read.component.ts\n            \n            component\n            ReadComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            variable\n            professor_expression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            variable\n            student_expression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            injectable\n            AddCourseService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            variable\n            COURSE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/add-to-course.service.ts\n            \n            injectable\n            AddToCourseService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/add-to-course.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            JWTPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            LOGIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            REFRESH_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/base.ts\n            \n            variable\n            BASE_OTHER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/base.ts\n            \n            variable\n            BASE_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            injectable\n            LogoutService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            variable\n            LOGOUT_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            REGISTER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            injectable\n            UserwhoService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            variable\n            USER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/top-bar/top-bar.component.ts\n            \n            component\n            TopBarComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 9.1.12\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : 9.1.12\n        \n            @angular/compiler : 9.1.12\n        \n            @angular/core : 9.1.12\n        \n            @angular/forms : 9.1.12\n        \n            @angular/localize : 9.1.12\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : 9.1.12\n        \n            @angular/platform-browser-dynamic : 9.1.12\n        \n            @angular/router : 9.1.12\n        \n            @ng-bootstrap/ng-bootstrap : ^6.2.0\n        \n            @types/jasmine : 3.5.14\n        \n            @types/jasminewd2 : 2.0.8\n        \n            @types/jwt-decode : ^2.2.1\n        \n            @types/node : 12.12.67\n        \n            bootstrap : ^4.5.3\n        \n            cors : 2.8.5\n        \n            jquery : ^3.5.1\n        \n            jwt-decode : ^3.1.2\n        \n            jwt-token : ^1.0.9\n        \n            moment : ^2.29.1\n        \n            ngx-bootstrap : ^6.1.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : 6.5.5\n        \n            tslib : 1.14.1\n        \n            zone.js : 0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDashboard\nThis project was generated with Angular CLI version 9.1.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAddCourseComponent\n\nAddCourseComponent\n\nAppModule -->\n\nAddCourseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCourseHomeComponent\n\nCourseHomeComponent\n\nAppModule -->\n\nCourseHomeComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nReadComponent\n\nReadComponent\n\nAppModule -->\n\nReadComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_OTHER_URL   (src/.../base.ts)\n                        \n                        \n                            BASE_URL   (src/.../base.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            COURSE_URL   (src/.../add-course.service.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            httpOptions   (src/.../add-to-course.service.ts)\n                        \n                        \n                            httpOptions   (src/.../add-course.service.ts)\n                        \n                        \n                            httpOptions   (src/.../user.service.ts)\n                        \n                        \n                            httpOptions   (src/.../logout.service.ts)\n                        \n                        \n                            httpOptions   (src/.../users.component.ts)\n                        \n                        \n                            httpOptions   (src/.../authentication.service.ts)\n                        \n                        \n                            httpOptions   (src/.../userwho.service.ts)\n                        \n                        \n                            httpOptions   (src/.../message.service.ts)\n                        \n                        \n                            LOGIN_URL   (src/.../authentication.service.ts)\n                        \n                        \n                            LOGOUT_URL   (src/.../logout.service.ts)\n                        \n                        \n                            professor_expression   (src/.../register.component.ts)\n                        \n                        \n                            REFRESH_URL   (src/.../authentication.service.ts)\n                        \n                        \n                            REGISTER_URL   (src/.../user.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            student_expression   (src/.../register.component.ts)\n                        \n                        \n                            USER_URL   (src/.../userwho.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/base.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_OTHER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://back-dashboard.herokuapp.com'\n                        \n                    \n\n                \n                    \n                        Contains the base url which is common to all request url\nSo this is used as prefix and various requests are sent by adding appropriate suffix\n\n                    \n                \n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/services/add-course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COURSE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/courses/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/add-to-course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REGISTER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/user/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/logout.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGOUT_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/logout/'\n                        \n                    \n\n\n            \n        \n\n    src/app/users/users.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/get-token/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REFRESH_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/refresh-token/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/userwho.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/user/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/message.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/register/register.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            professor_expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /P[A-Z]{2,3}\\d{3}/\n                        \n                    \n\n                \n                    \n                        This is the authentication code regular expression for professors\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student_expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[1-2]\\d[A-Z0-9]\\d{6}/\n                        \n                    \n\n                \n                    \n                        This expression is a regular expression representing student code\nSo students only with this matching will be allowed,else wont be\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
