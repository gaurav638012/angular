var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.478,1,0.998]],["body/components/AboutComponent.html",[0,0.634,1,1.465,2,1.394,3,0.152,4,0.126,5,1.014,6,1.014,7,1.014,8,1.014,9,0.126,10,2.03,11,1.196,12,1.948,13,1.014,14,2.501,15,2.367,16,1.507,17,4.289,18,1.507,19,3.595,20,0.126,21,0.753,22,2.157,23,0.899,24,0.637,25,2.419,26,2.419,27,0.467,28,0.03,29,1.394,30,0.293,31,0.392,32,0.152,33,0.262,34,3.595,35,0.76,36,3.985,37,3.595,38,3.017,39,3.595,40,3.595,41,2.352,42,3.595,43,3.595,44,2.352,45,3.595,46,3.595,47,3.595,48,3.595,49,3.595,50,3.595,51,3.595,52,3.595,53,3.595,54,3.595,55,3.595,56,3.595,57,3.595,58,3.595,59,3.017,60,4.289,61,3.595,62,3.595,63,3.595,64,3.595,65,3.595,66,3.595,67,3.595,68,3.595,69,3.595,70,4.289,71,4.748,72,3.6,73,2.419,74,2.419,75,3.595,76,5.655,77,4.289,78,5.655,79,2.419,80,2.419,81,5.317,82,2.419,83,3.595,84,4.289,85,2.419,86,3.017,87,2.419,88,4.748,89,2.419,90,4.748,91,4.748,92,2.733,93,1.452,94,1.43,95,3.595,96,2.419,97,2.999,98,2.999,99,2.419,100,3.046,101,1.841,102,2.125,103,2.419,104,2.557,105,3.107,106,3.6,107,3.6,108,2.806,109,4.289,110,1.43,111,3.595,112,1.303,113,2.03,114,1.774,115,2.03,116,1.43,117,2.807,118,2.419,119,1.303,120,1.303,121,1.43,122,3.595,123,1.583,124,0.869,125,1.507,126,1.394,127,1.014,128,1.58,129,1.014,130,0.637,131,1.014,132,0.747,133,0.869,134,1.014,135,0.747,136,1.014,137,0.747,138,1.507,139,0.747,140,0.747,141,1.014,142,0.747,143,1.014,144,0.747,145,1.014,146,0.747,147,1.014,148,1.014,149,1.014,150,0.032,151,0.048,152,0.032]],["title/components/AddCourseComponent.html",[0,0.478,132,0.998]],["body/components/AddCourseComponent.html",[0,0.625,1,0.728,2,1.368,3,0.148,4,0.123,5,0.989,6,0.989,7,0.989,8,0.989,9,0.123,11,1.174,12,1.919,13,0.989,14,2.487,15,2.3,16,1.479,18,1.479,20,0.123,21,0.739,22,2.13,23,0.739,24,0.967,27,0.681,28,0.03,29,1.638,30,0.608,31,0.383,32,0.148,33,0.256,35,0.967,92,1.9,94,2.086,97,2.086,98,2.086,100,2.941,101,1.818,102,2.086,104,1.9,110,1.395,112,2.276,116,1.395,117,2.086,119,2.276,120,2.276,121,1.395,124,0.847,125,1.479,126,1.368,127,0.989,128,1.561,129,0.989,130,0.995,131,0.989,132,1.447,133,2.181,134,0.989,135,0.728,136,0.989,137,0.728,138,1.479,139,0.728,140,0.728,141,0.989,142,0.728,143,0.989,144,0.728,145,0.989,146,0.728,147,0.989,148,0.989,149,0.989,150,0.032,151,0.047,152,0.032,153,4.712,154,4.117,155,1.98,156,4.226,157,3.528,158,0.801,159,4.226,160,2.765,161,3.099,162,3.44,163,2.309,164,3.099,165,1.73,166,3.447,167,2.117,168,2.588,169,2.765,170,3.528,171,0.626,172,0.259,173,0.626,174,2.359,175,2.359,176,2.765,177,2.359,178,1.741,179,1.267,180,1.966,181,2.359,182,1.73,183,2.359,184,0.785,185,1.544,186,1.271,187,1.544,188,0.989,189,1.98,190,1.98,191,1.121,192,2.359,193,2.359,194,1.73,195,2.588,196,3.228,197,2.359,198,1.01,199,2.359,200,1.73,201,1.479,202,2.359,203,1.73,204,2.359,205,2.359,206,1.544,207,1.072,208,1.072,209,1.544,210,2.359,211,1.73,212,2.359,213,1.98,214,3.285,215,2.961,216,3.547,217,2.765,218,2.309,219,2.498,220,1.73,221,1.544,222,1.73,223,2.588,224,2.086,225,2.309,226,1.544,227,1.73,228,1.395,229,1.98,230,1.98,231,2.086,232,2.086,233,1.73,234,1.98,235,1.98,236,2.359]],["title/injectables/AddCourseService.html",[169,2.115,237,0.677]],["body/injectables/AddCourseService.html",[0,0.699,3,0.224,4,0.186,9,0.186,20,0.186,21,0.991,23,0.991,24,0.838,27,0.689,28,0.03,30,0.711,31,0.579,32,0.224,33,0.388,35,1.154,93,1.022,128,1.189,130,0.838,133,2.026,150,0.048,151,0.063,152,0.048,168,3.468,169,3.094,171,1.254,172,0.39,173,1.254,191,0.947,198,1.353,208,2.148,237,0.991,238,1.623,239,3.468,240,2.337,241,1.763,242,2.055,243,2.998,244,1.385,245,3.572,246,3.572,247,2.62,248,4.729,249,3.094,250,4.729,251,3.969,252,4.729,253,4.729,254,4.729,255,2.795,256,4.729,257,4.729,258,5.642,259,5.642,260,4.729,261,1.764,262,1.698,263,2.998,264,1.283,265,1.103,266,2.62,267,1.189,268,1.385,269,1.574,270,2.62,271,2.62,272,1.189,273,1.283,274,1.103,275,1.283,276,1.385,277,1.189,278,2.62,279,2.998,280,3.572,281,3.572,282,3.572]],["title/injectables/AddToCourseService.html",[237,0.677,283,2.115]],["body/injectables/AddToCourseService.html",[3,0.245,4,0.204,9,0.204,20,0.204,21,1.051,23,1.051,24,0.889,27,0.755,28,0.03,30,0.749,31,0.635,32,0.245,33,0.425,35,0.693,93,1.12,128,1.302,130,0.889,150,0.052,151,0.067,152,0.052,171,1.33,172,0.407,173,1.33,191,1.038,198,1.12,208,1.777,237,1.051,238,1.777,239,3.624,240,2.56,241,1.931,242,2.147,243,3.284,244,1.517,261,1.844,262,1.802,263,3.284,264,1.405,265,1.208,266,3.68,267,1.302,268,1.517,269,1.67,272,1.302,273,1.405,274,1.208,275,1.405,276,1.517,277,1.302,278,2.87,283,3.283,284,4.211,285,3.913,286,1.326,287,2.703,288,1.802,289,3.275,290,3.913,291,1.405,292,2.56,293,3.913,294,3.913,295,3.913,296,3.284]],["title/components/AppComponent.html",[0,0.478,135,0.998]],["body/components/AppComponent.html",[0,0.816,1,1.197,2,1.934,3,0.243,4,0.202,5,1.626,6,1.626,7,1.626,8,1.626,9,0.202,13,1.626,14,2.731,15,2.526,16,2.091,18,2.091,20,0.202,24,0.687,28,0.029,30,0.47,31,0.629,32,0.243,33,0.421,35,0.687,41,3.264,101,1.503,124,1.392,125,2.091,126,1.934,127,1.626,128,1.938,129,1.626,130,0.884,131,1.626,132,1.197,133,1.392,134,1.626,135,1.797,136,1.626,137,1.197,138,2.091,139,1.197,140,1.197,141,1.626,142,1.197,143,1.626,144,1.197,145,1.626,146,1.197,147,1.626,148,1.626,149,1.626,150,0.052,151,0.067,152,0.052,158,1.132,172,0.285,178,1.914,179,1.392,277,1.66,286,0.88,297,3.254,298,5.515,299,4.989,300,4.629,301,3.878]],["title/modules/AppModule.html",[302,2.371,303,2.115]],["body/modules/AppModule.html",[0,0.825,1,1.773,3,0.174,4,0.145,9,0.145,28,0.03,30,0.787,31,0.45,32,0.174,33,0.301,35,0.491,101,1.075,124,0.996,132,1.721,133,0.996,135,1.915,137,1.721,139,1.721,140,1.773,142,1.773,144,1.773,146,1.721,150,0.037,151,0.053,152,0.037,154,2.034,184,0.923,186,1.494,188,1.163,201,1.163,264,0.996,302,2.034,303,4.347,304,2.034,305,1.815,306,3.894,307,3.715,308,3.894,309,2.328,310,2.328,311,2.328,312,2.328,313,2.328,314,2.435,315,1.925,316,3.004,317,3.333,318,2.328,319,1.163,320,2.773,321,3.971,322,3.333,323,1.815,324,3.971,325,2.773,326,2.773,327,2.773,328,2.034,329,2.773,330,2.773,331,3.971,332,2.773,333,2.773,334,2.328,335,2.773,336,2.773,337,2.034,338,2.773,339,2.773,340,2.773,341,3.971,342,2.034,343,2.328,344,3.333,345,2.328,346,3.971,347,2.773,348,2.773,349,2.034,350,2.773,351,2.773,352,2.773,353,5.744,354,2.773,355,2.773,356,2.773,357,2.773,358,2.773,359,0.996,360,1.815,361,1.64,362,2.773,363,1.369,364,2.773,365,2.773,366,2.773,367,2.773]],["title/classes/AppPage.html",[33,0.351,368,2.371]],["body/classes/AppPage.html",[3,0.285,4,0.237,9,0.237,20,0.237,21,1.154,24,0.976,27,1.062,28,0.029,30,0.55,32,0.285,33,0.493,93,1.3,126,1.761,150,0.061,151,0.074,152,0.061,198,1.576,277,1.512,323,2.972,368,4.039,369,3.331,370,3.812,371,6.161,372,6.161,373,4.542,374,6.415,375,4.542,376,3.812,377,4.542,378,4.542,379,4.542]],["title/guards/AuthGuard.html",[363,1.595,380,2.371]],["body/guards/AuthGuard.html",[3,0.154,4,0.128,9,0.128,11,1.212,20,0.128,21,0.763,23,0.763,24,0.645,27,0.836,28,0.03,30,0.748,31,0.399,32,0.271,33,0.47,93,0.704,130,0.436,150,0.033,151,0.049,152,0.033,167,2.146,171,0.652,172,0.268,173,0.652,179,1.307,180,1.031,184,0.819,188,1.031,191,1.355,198,1.734,201,1.031,207,1.118,237,1.003,242,1.411,244,0.954,261,1.212,262,1.307,264,1.307,265,0.759,267,0.819,268,0.954,269,1.965,272,0.819,273,1.307,274,0.759,275,0.884,276,0.954,277,0.819,286,1.087,288,1.307,291,0.884,314,1.118,315,1.719,319,1.526,359,1.719,361,2.152,363,1.797,381,2.461,382,1.325,383,3.5,384,2.461,385,1.968,386,2.461,387,2.382,388,2.461,389,1.816,390,2.382,391,2.152,392,2.641,393,2.382,394,2.682,395,2.382,396,2.382,397,2.382,398,2.382,399,2.382,400,2.382,401,2.152,402,2.382,403,1.961,404,1.61,405,1.118,406,1.961,407,1.214,408,2.382,409,2.382,410,2.382,411,2.382,412,1.61,413,1.61,414,2.835,415,1.61,416,1.61,417,2.152,418,1.455,419,2.152,420,1.325,421,1.455,422,1.325,423,1.455,424,0.436,425,1.325,426,1.61,427,1.214,428,1.61,429,1.61,430,1.61,431,1.61,432,2.382,433,1.61,434,1.61,435,1.61,436,1.61,437,2.382,438,1.61,439,1.61,440,1.61,441,1.61,442,1.61,443,1.61,444,2.382,445,1.61,446,1.61,447,1.61,448,1.61,449,1.61,450,1.61,451,1.61,452,1.61,453,1.61,454,1.61,455,1.61,456,1.61,457,2.382,458,2.382,459,2.382,460,1.61,461,1.61,462,1.61,463,1.61,464,1.61,465,1.61,466,1.61,467,1.61,468,1.61,469,1.61,470,1.61,471,1.61,472,1.61,473,1.61,474,1.61,475,1.61,476,1.61,477,1.61,478,1.61,479,1.61,480,1.61,481,1.61,482,1.455,483,1.61,484,1.61,485,1.61,486,1.455,487,1.455]],["title/interceptors/AuthInterceptor.html",[314,1.468,488,2.713]],["body/interceptors/AuthInterceptor.html",[3,0.161,4,0.134,9,0.134,11,1.25,20,0.134,21,0.787,23,0.538,24,0.455,27,0.724,28,0.03,30,0.754,31,0.416,32,0.278,33,0.482,93,0.734,130,0.455,150,0.034,151,0.05,152,0.034,167,1.721,171,0.681,172,0.276,173,0.681,179,0.922,180,1.076,184,0.854,188,1.076,191,1.379,198,1.749,201,1.076,207,1.166,237,1.024,242,1.456,244,0.995,261,1.478,262,1.348,264,1.348,265,0.792,267,0.854,268,0.995,269,1.985,272,0.854,273,1.348,274,0.792,275,0.922,276,0.995,277,0.854,286,1.109,288,1.348,291,0.922,314,1.706,315,1.348,319,1.076,359,1.594,363,1.267,382,1.382,383,2.905,385,1.166,387,1.679,389,1.076,390,1.679,391,1.517,392,2.192,393,1.679,394,2.665,395,1.679,396,1.679,397,1.679,398,1.679,399,1.679,400,1.679,401,1.517,402,1.679,403,1.382,404,1.679,405,1.166,406,2.022,407,1.267,408,2.457,409,2.457,410,3.197,411,3.197,412,1.679,413,1.679,414,2.905,415,1.679,416,1.679,417,2.22,418,1.517,419,2.22,420,1.382,421,1.517,422,1.382,423,1.517,424,0.455,425,1.382,426,1.679,427,1.267,428,1.679,429,1.679,430,1.679,431,1.679,432,2.457,433,1.679,434,1.679,435,1.679,436,1.679,437,2.457,438,1.679,439,1.679,440,1.679,441,1.679,442,1.679,443,1.679,444,2.457,445,1.679,446,1.679,447,1.679,448,1.679,449,1.679,450,1.679,451,1.679,452,1.679,453,1.679,454,1.679,455,1.679,456,1.679,457,2.457,458,2.457,459,2.457,460,1.679,461,1.679,462,1.679,463,1.679,464,1.679,465,1.679,466,1.679,467,1.679,468,1.679,469,1.679,470,1.679,471,1.679,472,1.679,473,1.679,474,2.457,475,2.905,476,1.679,477,1.679,478,1.679,479,1.679,480,1.679,481,1.679,482,1.517,483,1.679,484,1.679,485,1.679,486,1.517,487,1.517,489,2.567,490,3.755,491,2.567,492,2.567]],["title/injectables/AuthenticationService.html",[237,0.677,315,1.161]],["body/injectables/AuthenticationService.html",[3,0.144,4,0.119,9,0.119,11,1.149,20,0.119,21,0.723,23,0.723,24,1.028,27,1.073,28,0.03,29,0.888,30,0.738,31,0.372,32,0.26,33,0.45,93,0.655,130,0.819,150,0.031,151,0.046,152,0.031,158,0.783,163,2.258,167,1.61,171,1.225,172,0.34,173,1.225,179,0.822,180,0.96,184,0.762,188,0.96,191,1.51,198,1.708,201,0.96,207,1.04,208,1.04,237,0.968,238,1.04,241,1.131,242,1.791,244,1.338,261,1.149,262,1.239,264,1.239,265,0.707,267,0.762,268,0.888,269,1.931,272,0.762,273,1.239,274,0.707,275,0.822,276,0.888,277,0.762,286,1.182,288,1.239,291,0.822,314,1.04,315,1.491,319,0.96,359,1.941,363,1.131,382,1.234,383,2.716,385,1.04,387,1.499,389,1.446,390,1.499,391,1.354,392,2.049,393,1.499,394,2.712,395,1.499,396,1.499,397,1.499,398,1.499,399,1.499,400,1.499,401,1.354,402,1.499,403,1.234,404,1.499,405,1.04,406,1.859,407,1.131,408,2.258,409,2.258,410,2.258,411,2.258,412,1.499,413,1.499,414,2.716,415,1.499,416,1.499,417,2.04,418,2.454,419,2.04,420,1.234,421,1.354,422,1.234,423,1.354,424,0.406,425,1.234,426,1.499,427,1.131,428,1.499,429,2.716,430,2.258,431,1.499,432,2.258,433,1.499,434,1.499,435,1.499,436,1.499,437,2.258,438,1.499,439,1.499,440,1.499,441,1.499,442,1.499,443,1.499,444,2.258,445,2.258,446,1.499,447,1.499,448,1.499,449,1.499,450,1.499,451,1.499,452,3.023,453,1.499,454,1.499,455,1.499,456,1.499,457,2.258,458,2.258,459,2.258,460,3.023,461,1.499,462,1.499,463,1.499,464,1.499,465,2.258,466,1.499,467,1.499,468,1.499,469,1.499,470,3.023,471,1.499,472,3.023,473,1.499,474,1.499,475,1.499,476,1.499,477,1.499,478,1.499,479,1.499,480,1.499,481,1.499,482,1.354,483,1.499,484,1.499,485,1.499,486,1.354,487,1.354,493,3.451,494,3.451,495,2.291,496,2.291,497,2.291,498,2.291,499,2.291,500,2.291,501,2.291,502,2.291,503,2.291,504,2.291]],["title/interfaces/Course.html",[35,0.573,424,0.573]],["body/interfaces/Course.html",[3,0.293,4,0.244,9,0.244,20,0.244,28,0.028,32,0.293,35,1.127,38,3.926,102,2.765,130,1.127,150,0.063,151,0.075,152,0.063,158,1.272,172,0.412,196,3.761,247,3.431,249,3.061,286,1.466,424,0.829,505,1.961,506,3.926,507,4.678]],["title/components/CourseHomeComponent.html",[0,0.478,137,0.998]],["body/components/CourseHomeComponent.html",[0,0.495,1,0.505,2,1.029,3,0.103,4,0.085,5,0.686,6,0.686,7,0.686,8,0.686,9,0.085,11,0.883,12,1.52,13,0.686,14,2.259,15,2.09,16,1.112,18,1.112,20,0.085,21,0.556,22,1.747,23,0.556,24,1.039,27,0.816,28,0.03,29,1.755,30,0.653,31,0.266,32,0.103,33,0.178,35,0.974,44,1.736,86,1.374,92,1.802,94,0.968,97,1.978,98,1.978,100,2.959,101,1.639,102,1.569,104,2.072,105,1.072,112,1.802,114,1.201,117,1.978,119,1.429,120,1.429,123,1.072,124,0.588,125,1.613,126,1.029,127,0.686,128,1.28,129,0.686,130,0.593,131,0.686,132,0.505,133,2.035,134,0.686,135,0.505,136,0.686,137,1.187,138,1.112,139,0.505,140,0.505,141,0.686,142,0.505,143,0.686,144,0.505,145,0.686,146,0.505,147,0.686,148,0.686,149,0.686,150,0.022,151,0.036,152,0.022,158,0.602,160,3.709,166,1.072,167,1.639,171,0.434,172,0.246,173,0.434,176,1.072,178,2.234,179,1.625,180,1.897,184,0.883,185,1.072,186,0.882,187,1.072,188,0.686,189,1.374,190,1.374,191,1.121,198,1.101,206,1.072,207,1.747,209,1.072,214,1.736,219,0.968,221,1.072,224,0.968,225,1.072,226,1.072,228,1.569,231,1.569,261,0.545,265,0.505,283,2.189,284,2.227,287,1.429,291,1.625,300,1.374,337,4.339,344,1.374,345,1.374,508,4.966,509,1.374,510,1.736,511,2.808,512,2.227,513,2.654,514,2.654,515,3.346,516,3.346,517,2.654,518,2.654,519,3.213,520,4.766,521,2.654,522,2.654,523,3.847,524,3.847,525,3.847,526,3.847,527,1.638,528,2.517,529,1.802,530,2.766,531,2.654,532,1.638,533,1.638,534,1.638,535,1.638,536,1.638,537,1.638,538,3.527,539,3.248,540,4.963,541,1.638,542,4.689,543,1.638,544,1.946,545,1.638,546,1.638,547,1.638,548,2.654,549,2.654,550,5.39,551,2.654,552,2.654,553,3.346,554,1.638,555,4.526,556,2.654,557,2.227,558,2.654,559,1.638,560,2.227,561,2.654,562,3.847,563,1.638,564,1.638,565,1.201,566,1.638,567,1.374,568,1.638,569,1.638,570,1.638,571,1.638,572,1.638,573,1.638,574,1.638,575,1.638,576,1.638,577,1.638,578,1.638,579,1.638,580,1.374,581,1.638,582,1.638,583,1.638,584,1.638,585,1.638,586,2.654,587,1.638,588,1.638,589,2.654,590,2.654,591,1.638,592,1.638,593,1.638,594,2.654,595,2.654,596,2.654,597,1.946,598,1.638,599,2.654,600,1.638,601,1.638,602,1.638,603,1.638,604,2.654,605,2.654,606,1.638,607,1.638,608,2.227,609,2.654,610,1.638,611,2.654,612,1.638,613,1.638,614,1.638,615,2.654,616,2.654,617,2.654,618,1.638,619,2.654,620,1.569,621,3.319,622,1.638,623,1.638,624,1.638,625,1.638,626,1.638,627,1.638,628,1.638,629,1.374,630,2.654,631,1.374,632,1.374]],["title/interfaces/CourseStatus.html",[292,2.115,424,0.573]],["body/interfaces/CourseStatus.html",[3,0.3,4,0.249,9,0.249,20,0.249,28,0.029,30,0.579,32,0.3,35,1.162,150,0.064,151,0.076,152,0.064,158,1.289,172,0.417,286,1.289,289,3.581,292,3.716,424,0.847,505,2.004,633,4.013,634,4.013,635,4.781,636,4.781]],["title/components/HomeComponent.html",[0,0.478,139,0.998]],["body/components/HomeComponent.html",[0,0.683,1,0.849,2,1.531,3,0.172,4,0.144,5,1.153,6,1.153,7,1.153,8,1.153,9,0.144,11,1.314,12,2.098,13,1.153,14,2.571,15,2.378,16,1.655,18,1.655,20,0.144,21,0.827,22,2.292,23,0.827,24,0.947,27,0.762,28,0.03,29,1.791,30,0.611,31,0.446,32,0.172,33,0.299,35,0.818,92,1.482,93,0.787,100,2.488,101,2.072,104,2.127,105,1.8,106,2.309,107,2.309,108,1.8,112,2.127,115,2.309,116,2.334,121,2.73,124,0.988,125,1.655,126,1.531,127,1.153,128,1.68,129,1.153,130,0.818,131,1.153,132,0.849,133,1.658,134,1.153,135,0.849,136,1.153,137,0.849,138,1.655,139,1.558,140,0.849,141,1.153,142,0.849,143,1.153,144,0.849,145,1.153,146,0.849,147,1.153,148,1.153,149,1.153,150,0.037,151,0.053,152,0.037,158,1.048,167,2.222,168,3.919,171,0.729,172,0.202,173,0.729,184,0.916,191,1.225,208,1.25,209,1.8,213,2.309,217,2.584,218,1.8,219,2.334,224,3.159,228,1.626,231,1.626,232,1.626,249,1.8,315,2.058,349,2.018,510,2.584,511,3.876,512,3.314,528,1.8,529,2.718,565,2.018,620,1.626,632,2.309,637,2.309,638,3.387,639,2.73,640,2.751,641,3.949,642,2.751,643,2.751,644,2.751,645,2.751,646,2.751,647,2.751,648,2.751,649,2.751,650,2.751,651,3.949,652,3.949,653,5.563,654,2.751,655,2.751,656,2.751,657,2.751,658,2.751,659,2.309,660,2.751,661,2.751,662,2.751,663,2.751,664,2.751,665,2.751,666,2.751,667,2.751,668,2.751,669,2.751,670,2.751,671,2.751,672,3.314,673,2.751,674,2.309,675,2.751,676,2.751,677,2.309,678,2.751,679,2.751,680,2.751,681,2.751]],["title/interfaces/JWTPayload.html",[424,0.573,425,1.741]],["body/interfaces/JWTPayload.html",[3,0.159,4,0.132,9,0.132,11,1.239,20,0.132,23,0.531,27,0.489,28,0.03,30,0.752,31,0.411,32,0.276,33,0.479,93,0.726,150,0.034,151,0.05,152,0.034,158,0.845,167,1.71,172,0.38,179,0.911,180,1.063,184,0.844,188,1.063,191,1.372,198,1.745,201,1.063,207,1.152,237,1.018,242,1.443,244,0.983,261,1.239,262,1.337,264,1.337,265,0.783,267,0.844,268,0.983,269,1.979,272,0.844,273,1.337,274,0.783,275,0.911,276,0.983,277,0.844,286,1.301,288,1.942,291,1.745,314,1.152,315,1.337,319,1.063,359,1.584,363,1.252,382,1.366,383,2.885,385,1.152,387,1.66,389,1.063,390,1.66,391,1.5,392,2.177,393,1.66,394,2.657,395,1.66,396,1.66,397,1.66,398,1.66,399,1.66,400,1.66,401,1.5,402,1.66,403,1.366,404,1.66,405,1.152,406,2.005,407,1.252,408,2.436,409,2.436,410,2.436,411,2.436,412,1.66,413,1.66,414,2.885,415,1.66,416,1.66,417,2.201,418,1.5,419,2.201,420,1.366,421,1.5,422,1.366,423,1.5,424,0.449,425,2.005,426,3.179,427,2.398,428,3.179,429,1.66,430,1.66,431,1.66,432,2.436,433,1.66,434,1.66,435,1.66,436,1.66,437,2.436,438,1.66,439,1.66,440,1.66,441,1.66,442,1.66,443,1.66,444,2.436,445,1.66,446,1.66,447,1.66,448,1.66,449,1.66,450,1.66,451,1.66,452,1.66,453,1.66,454,1.66,455,1.66,456,1.66,457,2.436,458,2.436,459,2.436,460,1.66,461,1.66,462,1.66,463,1.66,464,1.66,465,1.66,466,1.66,467,1.66,468,1.66,469,1.66,470,1.66,471,1.66,472,1.66,473,1.66,474,1.66,475,1.66,476,1.66,477,1.66,478,1.66,479,1.66,480,1.66,481,1.66,482,1.5,483,1.66,484,1.66,485,1.66,486,1.5,487,1.5,505,1.063]],["title/interfaces/Login.html",[359,1.161,424,0.573]],["body/interfaces/Login.html",[3,0.301,4,0.251,9,0.251,20,0.251,28,0.029,32,0.301,150,0.064,151,0.076,152,0.064,158,1.293,172,0.419,286,1.475,291,2.255,359,2.046,424,0.852,505,2.016,682,4.035,683,3.712]],["title/components/LoginComponent.html",[0,0.478,140,0.998]],["body/components/LoginComponent.html",[0,0.544,1,0.583,2,1.153,3,0.118,4,0.099,5,0.792,6,0.792,7,0.792,8,0.792,9,0.099,11,0.99,12,1.671,13,0.792,14,2.353,15,2.176,16,1.247,18,1.247,20,0.099,21,0.623,22,1.895,23,0.623,24,0.926,27,0.574,28,0.03,29,1.153,30,0.611,31,0.306,32,0.118,33,0.205,35,0.652,72,1.585,92,1.602,94,1.117,97,1.758,98,1.758,100,2.965,101,1.869,104,2.248,105,1.236,108,1.236,110,1.117,112,1.981,114,1.385,117,1.758,119,2.248,120,2.248,121,1.117,123,1.946,124,0.678,125,1.247,126,1.153,127,0.792,128,1.389,129,0.792,130,0.652,131,0.792,132,0.583,133,0.678,134,0.792,135,0.583,136,0.792,137,0.583,138,1.247,139,0.583,140,1.288,141,0.792,142,0.583,143,0.792,144,0.583,145,0.792,146,0.583,147,0.792,148,0.792,149,0.792,150,0.025,151,0.056,152,0.025,158,0.675,160,2.97,161,3.329,162,3.061,163,1.946,164,2.698,165,1.385,166,3.154,167,1.956,171,0.789,172,0.27,173,0.501,176,2.407,178,1.816,179,1.068,180,1.903,182,1.385,184,0.629,185,1.236,186,1.017,187,1.236,188,0.792,191,1.204,194,1.385,195,2.181,198,1.299,200,1.385,201,1.247,203,2.181,206,1.236,207,1.351,208,2.291,211,1.385,214,2.97,217,2.407,218,1.946,219,2.175,220,1.385,221,1.236,222,1.385,224,2.467,225,3.42,226,1.946,227,1.385,228,1.117,231,1.758,232,2.175,255,2.467,269,0.629,286,0.675,291,1.63,315,1.811,349,1.385,359,2.148,392,0.932,403,1.602,487,1.117,510,1.236,528,2.731,529,1.981,539,2.731,544,2.181,565,1.385,597,2.181,608,1.585,620,1.758,621,1.385,629,1.585,631,3.088,659,1.585,672,2.496,674,1.585,683,2.683,684,1.585,685,3.679,686,2.974,687,3.679,688,3.679,689,4.173,690,4.173,691,2.974,692,1.889,693,1.889,694,2.496,695,2.496,696,3.81,697,3.088,698,2.974,699,2.974,700,2.496,701,3.088,702,2.496,703,2.496,704,1.889,705,1.946,706,3.502,707,2.974,708,1.889,709,2.181,710,1.889,711,1.542,712,1.889,713,2.496,714,1.585,715,1.889,716,1.585,717,1.889,718,1.889,719,1.585,720,1.889,721,1.889,722,1.889,723,1.889,724,1.585,725,1.585,726,1.585,727,1.585,728,1.585,729,1.889,730,3.088,731,1.889,732,1.889,733,1.889,734,1.889,735,1.585,736,1.889,737,1.889,738,1.889,739,1.889,740,1.889,741,1.889,742,1.889,743,2.974,744,2.974,745,2.974,746,1.889,747,1.889,748,1.889,749,1.889,750,1.889,751,1.889,752,1.889,753,1.889]],["title/components/LogoutComponent.html",[0,0.478,142,0.998]],["body/components/LogoutComponent.html",[0,0.778,1,1.087,2,1.816,3,0.221,4,0.184,5,1.476,6,1.476,7,1.476,8,1.476,9,0.184,11,1.559,12,2.39,13,1.476,14,2.69,15,2.488,16,1.963,18,1.963,20,0.184,21,0.981,22,2.548,23,0.981,24,0.83,27,0.679,28,0.03,29,1.816,30,0.637,31,0.571,32,0.221,33,0.382,35,0.624,101,1.365,124,1.264,125,1.963,126,1.816,127,1.476,128,1.867,129,1.476,130,0.932,131,1.476,132,1.087,133,1.264,134,1.476,135,1.087,136,1.476,137,1.087,138,1.963,139,1.087,140,1.087,141,1.476,142,1.731,143,1.476,144,1.087,145,1.476,146,1.087,147,1.476,148,1.476,149,1.476,150,0.047,151,0.063,152,0.047,167,2.264,171,0.934,172,0.259,173,0.934,184,1.172,191,1.242,361,3.55,385,2.548,486,2.082,528,2.304,580,2.955,754,2.955,755,5.263,756,4.684,757,3.521,758,3.521,759,3.521,760,3.521,761,3.521,762,2.955,763,4.684]],["title/injectables/LogoutService.html",[237,0.677,385,1.468]],["body/injectables/LogoutService.html",[3,0.251,4,0.209,9,0.209,20,0.209,21,1.068,23,1.068,24,0.904,27,0.774,28,0.03,29,1.556,30,0.714,31,0.651,32,0.251,33,0.435,93,1.148,130,0.711,150,0.054,151,0.068,152,0.054,171,1.064,172,0.375,173,1.064,191,1.064,237,1.068,238,1.823,241,1.981,242,2.286,244,1.977,255,3.015,261,1.336,262,1.831,264,1.441,265,1.239,267,1.336,268,1.556,269,1.697,272,1.336,273,1.441,274,1.239,275,1.441,276,1.556,277,1.336,319,2.138,361,3.486,385,2.316,401,3.015,764,2.943,765,4.013,766,4.013,767,4.28,768,4.28,769,4.28,770,2.943,771,3.368,772,4.013,773,4.013,774,4.013,775,4.013]],["title/interfaces/Message.html",[424,0.573,519,1.741]],["body/interfaces/Message.html",[3,0.252,4,0.21,9,0.21,20,0.21,28,0.03,32,0.252,35,0.994,150,0.054,151,0.068,152,0.054,158,1.159,172,0.482,286,1.453,287,3.022,288,2.236,389,2.141,424,0.713,505,1.686,519,3.407,538,3.342,542,4.286,544,4.329,557,4.709,639,3.317,776,3.376,777,5.611,778,5.611,779,3.745,780,5.107,781,5.107,782,4.023,783,4.023,784,4.023,785,4.023,786,4.023,787,4.023,788,4.023,789,4.023,790,4.023]],["title/injectables/MessageService.html",[237,0.677,530,2.115]],["body/injectables/MessageService.html",[3,0.239,4,0.199,9,0.199,20,0.199,21,1.033,23,1.033,24,0.969,27,0.951,28,0.03,30,0.725,31,0.618,32,0.239,33,0.413,93,1.09,128,1.268,130,0.969,150,0.051,151,0.066,152,0.051,171,1.45,172,0.425,173,1.45,191,1.01,198,1.411,208,1.73,209,2.492,237,1.033,238,1.73,241,1.88,242,2.12,244,1.477,261,1.925,262,1.771,264,1.368,265,1.176,267,1.268,268,1.477,269,1.82,272,1.268,273,1.368,274,1.176,275,1.368,276,1.477,277,1.268,278,2.794,286,1.313,287,2.656,288,2.077,296,3.197,519,2.945,530,3.227,567,3.197,791,2.794,792,4.932,793,4.932,794,3.809,795,3.809,796,3.809,797,3.809,798,3.809,799,3.809,800,4.932,801,3.809,802,3.809,803,3.809,804,3.809]],["title/components/RegisterComponent.html",[0,0.478,144,0.998]],["body/components/RegisterComponent.html",[0,0.51,1,0.528,2,1.066,3,0.107,4,0.089,5,0.717,6,0.717,7,0.717,8,0.717,9,0.089,11,0.915,12,1.565,13,0.717,14,2.289,15,2.117,16,1.152,18,1.152,20,0.089,21,0.576,22,1.792,23,0.576,24,0.947,27,0.53,28,0.03,29,1.066,30,0.523,31,0.277,32,0.107,33,0.186,35,0.303,44,1.119,92,1.481,94,2.037,97,1.625,98,1.625,100,2.717,101,1.53,102,1.625,104,1.481,108,1.119,110,1.011,112,1.481,116,1.011,117,1.625,119,2.125,120,2.125,121,1.011,123,1.119,124,0.614,125,1.152,126,1.066,127,0.717,128,1.439,129,0.717,130,0.611,131,0.717,132,0.528,133,0.614,134,0.717,135,0.528,136,0.717,137,0.528,138,1.152,139,0.528,140,0.528,141,0.717,142,0.528,143,0.717,144,1.218,145,0.717,146,0.528,147,0.717,148,0.717,149,0.717,150,0.023,151,0.046,152,0.023,158,0.624,160,2.828,161,3.17,162,2.894,163,1.799,164,2.527,165,1.255,166,3.021,167,1.881,171,0.454,172,0.253,173,0.454,176,2.582,178,1.701,179,1.237,180,1.935,182,1.255,184,0.569,185,1.119,186,0.921,187,2.582,188,0.717,191,1.146,194,1.255,195,2.894,196,3.228,198,1.444,200,1.255,201,1.152,203,2.016,206,1.119,207,0.777,208,0.777,211,1.255,214,3.406,215,2.307,216,2.892,217,2.255,218,1.799,219,1.625,220,1.255,221,1.119,222,1.255,223,1.255,224,1.011,225,3.639,226,1.119,227,1.255,228,1.011,229,1.436,230,1.436,231,1.011,232,2.037,233,1.255,234,1.436,235,1.436,251,2.307,255,1.625,269,0.915,289,1.625,291,1.552,315,0.987,316,2.613,334,1.436,359,1.417,360,3.301,392,0.844,403,1.481,427,2.134,510,1.119,519,1.481,538,1.119,539,1.799,597,2.016,620,1.011,683,2.868,694,2.307,695,2.307,696,2.892,697,1.436,700,2.307,701,1.436,702,2.307,703,2.307,705,2.582,706,3.875,709,2.527,711,1.152,713,3.312,716,2.892,719,1.436,724,1.436,725,1.436,726,1.436,727,1.436,728,3.628,730,2.892,735,1.436,762,1.436,805,1.255,806,3.446,807,2.749,808,2.749,809,2.749,810,3.446,811,3.446,812,2.749,813,1.711,814,1.711,815,2.749,816,3.312,817,2.749,818,2.749,819,2.749,820,2.749,821,4.484,822,2.749,823,3.312,824,3.628,825,3.946,826,2.749,827,2.749,828,2.749,829,2.749,830,2.749,831,1.711,832,2.749,833,1.711,834,2.749,835,2.749,836,1.711,837,3.946,838,1.711,839,1.711,840,1.711,841,1.711,842,2.749,843,1.436,844,1.436,845,1.436,846,1.711,847,1.436,848,1.436,849,1.436,850,1.436,851,1.711,852,1.436,853,1.711,854,1.711,855,2.749,856,1.711,857,1.711,858,1.711,859,1.711,860,1.711,861,1.711,862,1.711,863,1.711,864,1.711,865,1.711,866,1.711,867,1.711,868,1.711,869,1.711,870,1.711,871,2.749,872,1.711,873,1.711,874,2.749,875,1.711,876,1.711,877,1.711,878,2.749,879,1.711,880,1.711,881,1.711,882,1.711,883,2.749,884,1.711]],["title/components/TopBarComponent.html",[0,0.478,146,0.998]],["body/components/TopBarComponent.html",[0,0.716,1,0.924,2,1.626,3,0.188,4,0.156,5,1.255,6,1.255,7,1.255,8,1.255,9,0.156,11,1.396,12,2.198,13,1.255,14,2.614,15,2.417,16,1.758,18,1.758,20,0.156,21,0.878,22,2.381,23,1.014,24,0.978,27,0.809,28,0.03,29,1.876,30,0.586,31,0.486,32,0.188,33,0.325,35,0.531,41,2.744,59,4.4,101,2.323,119,1.613,120,1.613,124,1.075,125,1.758,126,1.626,127,1.255,128,1.745,129,1.255,130,0.743,131,1.255,132,0.924,133,1.075,134,1.255,135,0.924,136,1.255,137,0.924,138,1.758,139,0.924,140,0.924,141,1.255,142,0.924,143,1.255,144,0.924,145,1.255,146,1.618,147,2.029,148,1.255,149,1.255,158,0.952,172,0.22,178,1.478,179,1.075,232,1.771,233,2.197,255,2.479,261,0.997,265,0.924,289,2.479,319,1.758,328,4.195,359,1.506,360,2.744,361,2.479,389,1.255,391,2.479,392,2.588,620,1.771,705,2.744,709,2.197,711,2.198,767,3.52,768,3.52,769,3.52,816,4.4,885,4.8,886,2.514,887,4.839,888,4.194,889,5.243,890,4.194,891,5.243,892,4.194,893,2.995,894,4.194,895,4.194,896,2.995,897,2.995,898,2.995,899,2.995,900,2.514,901,2.995,902,2.995,903,2.995,904,2.995,905,2.995,906,2.995]],["title/classes/User.html",[33,0.351,711,1.355]],["body/classes/User.html",[3,0.282,4,0.234,9,0.234,20,0.234,24,1.088,28,0.029,32,0.282,33,0.488,150,0.06,151,0.073,152,0.06,158,1.242,172,0.451,247,3.296,286,1.452,291,2.118,369,3.296,389,2.294,427,2.912,560,3.772,639,3.487,683,3.487,711,2.473,907,3.772,908,4.495,909,4.495,910,4.495,911,4.495,912,4.495,913,4.495,914,4.495,915,4.495]],["title/interfaces/UserMy.html",[405,1.468,424,0.573]],["body/interfaces/UserMy.html",[3,0.284,4,0.236,9,0.236,20,0.236,28,0.029,30,0.549,32,0.284,35,0.974,150,0.061,151,0.074,152,0.061,158,1.248,172,0.452,286,1.344,288,2.126,389,2.481,394,2.796,405,2.497,424,0.803,505,1.899,638,4.514,639,3.639,711,2.58,779,4.341,916,2.964,917,3.802]],["title/interfaces/UserReal.html",[424,0.573,918,2.115]],["body/interfaces/UserReal.html",[3,0.273,4,0.227,9,0.227,20,0.227,28,0.029,32,0.273,150,0.058,151,0.072,152,0.058,158,1.219,172,0.467,286,1.525,287,3.272,288,2.09,291,2.181,424,0.772,427,2.998,505,1.827,683,3.591,916,2.852,918,3.513,919,3.658,920,6.074,921,6.074]],["title/injectables/UserService.html",[237,0.677,316,1.741]],["body/injectables/UserService.html",[3,0.251,4,0.209,9,0.209,20,0.209,21,1.068,23,0.841,24,0.904,27,0.774,28,0.03,30,0.753,31,0.651,32,0.251,33,0.435,93,1.148,130,0.904,150,0.054,151,0.068,152,0.054,171,1.352,172,0.412,173,1.352,198,1.148,237,1.068,238,1.823,241,1.981,242,2.286,244,1.977,261,1.866,262,1.831,264,1.441,265,1.239,267,1.336,268,1.556,269,1.697,272,1.697,273,1.441,274,1.239,275,1.441,276,1.556,277,1.336,316,2.747,360,3.337,405,1.823,406,2.162,482,2.372,711,2.608,714,3.368,922,2.943,923,4.013,924,5.099,925,4.013,926,2.943,927,2.943,928,4.013]],["title/interfaces/UserToken.html",[407,1.595,424,0.573]],["body/interfaces/UserToken.html",[3,0.278,4,0.231,9,0.231,20,0.231,28,0.029,30,0.537,32,0.278,35,0.962,150,0.059,151,0.073,152,0.059,158,1.232,172,0.461,286,1.423,288,2.106,389,2.459,394,2.776,407,2.679,424,0.786,505,1.86,638,4.482,639,3.613,711,2.562,779,4.302,916,2.903,929,3.724,930,5.866,931,4.437]],["title/injectables/UserwhoService.html",[237,0.677,529,1.741]],["body/injectables/UserwhoService.html",[3,0.231,4,0.192,9,0.192,20,0.192,21,1.011,23,1.011,24,1.012,27,1.039,28,0.03,30,0.737,31,0.598,32,0.231,33,0.4,35,0.653,93,1.055,130,0.855,150,0.049,151,0.065,152,0.049,171,1.28,172,0.396,173,1.28,191,0.978,198,1.54,237,1.011,238,1.675,241,1.82,242,2.214,244,1.872,261,1.227,262,1.734,264,1.324,265,1.138,266,2.704,267,1.607,268,1.429,269,1.973,271,2.704,272,1.607,273,1.324,274,1.138,275,1.324,276,1.429,277,1.227,279,3.094,287,2.6,288,1.734,289,2.854,406,1.986,529,2.6,918,2.412,927,2.704,932,2.704,933,5.712,934,3.687,935,3.687,936,3.687,937,3.687,938,3.687,939,3.687,940,2.704,941,4.828,942,3.687,943,3.687,944,3.687,945,4.828,946,3.687]],["title/coverage.html",[947,3.71]],["body/coverage.html",[0,0.877,1,0.825,9,0.14,10,2.244,28,0.03,33,0.42,35,0.474,110,1.581,116,3.969,132,0.825,135,0.825,137,0.825,139,0.825,140,0.825,142,0.825,144,0.825,146,0.825,150,0.036,151,0.052,152,0.036,153,2.244,154,1.961,155,2.244,169,1.75,172,0.197,237,1.19,239,3.458,240,3.458,267,0.89,270,1.961,272,1.891,274,0.825,283,1.75,292,1.75,297,2.244,314,1.215,315,0.96,316,1.44,328,1.961,337,1.961,359,0.96,363,1.32,368,1.961,370,2.244,380,1.961,382,3.06,385,1.215,405,1.215,407,1.32,420,1.44,422,1.44,424,1.031,425,1.44,488,2.244,506,2.244,508,2.244,509,2.244,519,1.44,529,1.44,530,1.75,621,2.837,633,2.244,634,2.244,637,2.244,677,3.247,682,2.244,684,2.244,705,4.248,711,1.121,754,2.244,764,3.334,770,1.961,776,2.244,791,2.837,805,3.334,885,2.244,886,2.244,907,2.244,916,2.974,917,2.244,918,1.75,919,2.244,922,3.334,926,1.961,929,2.244,932,3.334,940,1.961,947,2.244,948,2.674,949,2.674,950,2.674,951,5.928,952,4.546,953,3.869,954,2.674,955,4.546,956,3.869,957,3.869,958,2.674,959,3.869,960,2.674,961,2.674,962,2.674,963,2.674,964,2.674,965,2.244,966,3.869,967,2.244,968,6.444,969,2.674,970,3.247,971,2.244,972,2.674,973,2.674,974,2.244,975,3.247,976,2.244,977,3.247,978,2.244,979,2.244,980,2.674,981,2.674]],["title/dependencies.html",[305,2.545,982,2.695]],["body/dependencies.html",[28,0.03,31,0.67,150,0.055,151,0.07,152,0.055,184,1.374,186,2.224,265,1.274,305,2.701,307,4.165,322,4.357,323,3.397,342,3.028,343,3.465,394,1.875,417,3.069,418,3.069,419,2.441,900,3.465,983,4.129,984,6.492,985,4.129,986,5.192,987,4.129,988,4.129,989,4.129,990,4.129,991,4.129,992,4.129,993,4.129,994,4.129,995,4.129,996,4.129,997,4.129,998,4.129,999,4.129,1000,4.129,1001,4.129,1002,4.129,1003,4.129,1004,4.129,1005,4.129,1006,4.129,1007,4.129,1008,4.129,1009,4.129,1010,4.129,1011,4.129,1012,4.129,1013,4.129,1014,4.129,1015,4.129,1016,4.129]],["title/index.html",[20,0.141,1017,2.695,1018,2.695]],["body/index.html",[0,0.839,4,0.215,15,1.597,28,0.023,36,4.351,41,2.695,130,0.73,150,0.055,151,0.069,152,0.055,196,2.435,274,1.271,319,1.727,342,4.663,376,3.457,539,2.695,1019,4.119,1020,5.673,1021,5.673,1022,4.119,1023,4.119,1024,4.119,1025,5.184,1026,6.136,1027,4.119,1028,4.119,1029,4.119,1030,4.119,1031,4.119,1032,4.119,1033,4.119,1034,4.119,1035,4.119,1036,5.673,1037,5.673,1038,4.119,1039,6.136,1040,4.119,1041,4.119,1042,4.119,1043,4.119,1044,4.119,1045,4.119,1046,3.457,1047,5.184,1048,5.184,1049,5.953,1050,4.119,1051,5.184,1052,5.184,1053,4.119,1054,5.953,1055,4.119,1056,4.119,1057,5.673,1058,4.119,1059,4.119,1060,4.119]],["title/modules.html",[304,3.242]],["body/modules.html",[28,0.026,150,0.069,151,0.08,152,0.069,303,3.392,304,3.802,323,3.392,1061,5.184,1062,5.184,1063,5.184]],["title/overview.html",[1064,3.71]],["body/overview.html",[1,1.721,2,1.538,28,0.029,113,3.329,124,1.424,132,1.721,135,1.946,137,1.721,139,1.721,140,1.721,142,1.721,144,1.721,146,1.721,150,0.053,151,0.068,152,0.053,223,2.909,238,1.802,302,3.712,303,4.449,305,2.596,306,3.329,307,2.909,308,3.329,309,3.329,310,3.329,311,3.329,312,3.329,313,3.329,314,2.532,315,2.002,316,3.003,317,4.248,318,3.329,319,1.663,369,2.909,380,2.909,505,1.663,1064,3.329,1065,4.248,1066,3.967,1067,3.967]],["title/miscellaneous/variables.html",[1068,2.262,1069,3.265]],["body/miscellaneous/variables.html",[20,0.147,28,0.03,44,1.841,93,1.651,150,0.038,151,0.063,152,0.038,172,0.478,178,3.212,179,2.337,180,1.18,196,2.372,201,1.682,239,2.626,240,3.527,249,3.927,262,2.071,267,1.336,270,2.943,271,2.064,272,2.104,273,2.071,274,1.78,275,2.071,286,0.911,382,1.516,394,1.823,420,2.161,421,1.664,422,2.161,423,1.664,538,1.841,764,2.064,770,2.943,771,2.362,791,2.064,805,2.064,821,2.362,823,3.368,824,3.925,843,2.362,844,2.362,845,2.362,847,2.362,848,2.362,849,2.362,850,2.362,852,2.362,922,2.064,926,2.943,927,2.943,932,2.064,940,2.943,965,3.368,967,3.368,970,2.362,971,3.368,974,2.362,975,4.28,976,2.362,977,2.362,978,3.368,979,3.368,1046,3.368,1065,2.362,1068,2.362,1069,2.362,1070,4.013,1071,4.013,1072,4.677,1073,2.814,1074,2.814,1075,4.013,1076,4.013,1077,4.013,1078,4.677,1079,2.814,1080,4.013,1081,2.814,1082,2.814,1083,2.814,1084,2.814,1085,2.814,1086,2.814,1087,2.814]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["0.10.3",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["0.5sec",{"_index":895,"title":{},"body":{"components/TopBarComponent.html":{}}}],["0/1",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1065,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.9",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["1.14.1",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":219,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["10.2.6",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["10px",{"_index":231,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["12.12.67",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["1200px",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{}}}],["15",{"_index":619,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["15px",{"_index":629,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["15vw",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{}}}],["190050037",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["190050069",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["190050117",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["190100036",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["1px",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":223,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":621,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["20px",{"_index":620,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["25",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{}}}],["2]\\d[a",{"_index":847,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{}}}],["3.1.2",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["3.5.14",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{}}}],["30px",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["33",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":221,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["4.5.3",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["4/8",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["44",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{}}}],["5/9",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["50px",{"_index":631,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["55",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["576px",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["5px",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["6",{"_index":883,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6.1.0",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":630,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["7",{"_index":1067,"title":{},"body":{"overview.html":{}}}],["70",{"_index":618,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["768px",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{}}}],["8",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"overview.html":{}}}],["8/18",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":227,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["9",{"_index":1066,"title":{},"body":{"overview.html":{}}}],["9.1.1",{"_index":1023,"title":{},"body":{"index.html":{}}}],["9.1.12",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["992px",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{}}}],["9]\\d{6",{"_index":849,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["_models",{"_index":714,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["_models/course",{"_index":266,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/UserwhoService.html":{}}}],["_models/login",{"_index":404,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["_models/message",{"_index":567,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["_models/user",{"_index":406,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["a_s_l",{"_index":513,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_s_l=false",{"_index":572,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_t_l",{"_index":514,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_t_l=false",{"_index":573,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["about'},{'name",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["access",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":163,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["account",{"_index":706,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":528,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["activatedroute:activatedroute",{"_index":576,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["actual_component",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["add",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["add_course_button",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["add_course_url=course_url",{"_index":281,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse",{"_index":168,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"components/HomeComponent.html":{}}}],["addcourse',component",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["addcourse(data",{"_index":245,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse(data:course",{"_index":280,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse:addcourseservice",{"_index":192,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["addcoursecomponent",{"_index":132,"title":{"components/AddCourseComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addcoursecomponent,canactivate:[authguard",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["addcourseservice",{"_index":169,"title":{"injectables/AddCourseService.html":{}},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"coverage.html":{}}}],["added",{"_index":594,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["added.this",{"_index":250,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["adds",{"_index":256,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addstudent",{"_index":523,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addta",{"_index":524,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addtocourse",{"_index":284,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["addtocourse(username",{"_index":285,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["addtocourse(username:string,id:number,status:string",{"_index":293,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["addtocourse:addtocourseservice",{"_index":578,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addtocourseservice",{"_index":283,"title":{"injectables/AddToCourseService.html":{}},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["al",{"_index":884,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["alertservice",{"_index":855,"title":{},"body":{"components/RegisterComponent.html":{}}}],["align",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["allowed,else",{"_index":844,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["android",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{}}}],["angular",{"_index":1020,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":264,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["angular/compiler",{"_index":900,"title":{},"body":{"components/TopBarComponent.html":{},"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":186,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["angular/material/expansion",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["angular/platform",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":184,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["api/usermy",{"_index":946,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"index.html":{}}}],["app.component",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":135,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":275,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":303,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":368,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["array",{"_index":779,"title":{},"body":{"interfaces/Message.html":{},"interfaces/UserMy.html":{},"interfaces/UserToken.html":{}}}],["artifacts",{"_index":1040,"title":{},"body":{"index.html":{}}}],["auth",{"_index":842,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code",{"_index":861,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_form",{"_index":808,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_form:formgroup",{"_index":854,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_status",{"_index":809,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_status=false",{"_index":853,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authentication",{"_index":821,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["authenticationservice",{"_index":315,"title":{"injectables/AuthenticationService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservice,authguard,authinterceptor",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":363,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":314,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"overview.html":{}}}],["authresult",{"_index":502,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authresult.token",{"_index":432,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["authservice",{"_index":387,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["auto",{"_index":218,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["automatically",{"_index":1031,"title":{},"body":{"index.html":{}}}],["back",{"_index":830,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backend",{"_index":260,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["background",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["bar",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["bar.component",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":888,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.scss",{"_index":887,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts",{"_index":886,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:14",{"_index":898,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:15",{"_index":892,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:20",{"_index":896,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:26",{"_index":893,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar/top",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":268,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["base_other_url",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":267,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/get",{"_index":421,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/logout",{"_index":771,"title":{},"body":{"injectables/LogoutService.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/refresh",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/courses",{"_index":271,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/user",{"_index":927,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["between",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["bg",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["black",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["blue",{"_index":235,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":222,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["boolean",{"_index":389,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Message.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserToken.html":{}}}],["bootstrap",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["bottom",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["box",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{}}}],["browse",{"_index":1063,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":377,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":628,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["build",{"_index":1039,"title":{},"body":{"index.html":{}}}],["button",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{}}}],["by:number",{"_index":787,"title":{},"body":{"interfaces/Message.html":{}}}],["calc(50",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["call",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{}}}],["called",{"_index":252,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["calling",{"_index":827,"title":{},"body":{"components/RegisterComponent.html":{}}}],["can't",{"_index":551,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["canactivate",{"_index":383,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cancel",{"_index":216,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["cancel:hover",{"_index":234,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["card",{"_index":217,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["catch",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cent",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{}}}],["center",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":1033,"title":{},"body":{"index.html":{}}}],["character",{"_index":507,"title":{},"body":{"interfaces/Course.html":{}}}],["characters",{"_index":215,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["chartreuse",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{}}}],["check",{"_index":539,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["check_login",{"_index":891,"title":{},"body":{"components/TopBarComponent.html":{}}}],["checks",{"_index":816,"title":{},"body":{"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["chosen",{"_index":562,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["class",{"_index":33,"title":{"classes/AppPage.html":{},"classes/User.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["classes",{"_index":369,"title":{},"body":{"classes/AppPage.html":{},"classes/User.html":{},"overview.html":{}}}],["clears",{"_index":767,"title":{},"body":{"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["cli",{"_index":1021,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":476,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cluster_appmodule",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":196,"title":{},"body":{"components/AddCourseComponent.html":{},"interfaces/Course.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":232,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["color:blue",{"_index":236,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["color:red",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{}}}],["combineall",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"overview.html":{}}}],["concat(token",{"_index":479,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["consist",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Course.html":{}}}],["console.log(\"1",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"error",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"expiry",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"hi",{"_index":775,"title":{},"body":{"injectables/LogoutService.html":{}}}],["console.log(\"init",{"_index":468,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"login",{"_index":469,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"payload",{"_index":436,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"start",{"_index":431,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"token",{"_index":433,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log('clicked",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(authresult.token",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(data",{"_index":209,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"injectables/MessageService.html":{}}}],["console.log(error",{"_index":212,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["console.log(this.courseform.value",{"_index":204,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["console.log(this.registerform.value",{"_index":882,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.submitted",{"_index":864,"title":{},"body":{"components/RegisterComponent.html":{}}}],["const",{"_index":269,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["constructor(activatedroute",{"_index":527,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["constructor(authservice",{"_index":384,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(formbuilder",{"_index":165,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":241,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["constructor(logout",{"_index":757,"title":{},"body":{"components/LogoutComponent.html":{}}}],["constructor(private",{"_index":482,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/UserService.html":{}}}],["constructor(who",{"_index":640,"title":{},"body":{"components/HomeComponent.html":{}}}],["container",{"_index":632,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["contains",{"_index":908,"title":{},"body":{"classes/User.html":{}}}],["content",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":226,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["controls",{"_index":713,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["convenience",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cors",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["course",{"_index":35,"title":{"interfaces/Course.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Message.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["course'},{'name",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["course.code",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{}}}],["course.component",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["course.component.html",{"_index":157,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.scss",{"_index":156,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts",{"_index":155,"title":{},"body":{"components/AddCourseComponent.html":{},"coverage.html":{}}}],["course.component.ts:12",{"_index":177,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:13",{"_index":181,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:14",{"_index":170,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:21",{"_index":174,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:27",{"_index":183,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:28",{"_index":175,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.name",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{}}}],["course.service",{"_index":190,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{}}}],["course.service.ts",{"_index":240,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["course.service.ts:15",{"_index":243,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{}}}],["course.service.ts:20",{"_index":290,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["course.service.ts:25",{"_index":246,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["course/:id",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["course/add",{"_index":154,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["course:course",{"_index":635,"title":{},"body":{"interfaces/CourseStatus.html":{}}}],["course:number",{"_index":786,"title":{},"body":{"interfaces/Message.html":{}}}],["course_id",{"_index":515,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["course_status",{"_index":516,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["course_url",{"_index":270,"title":{},"body":{"injectables/AddCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courseform",{"_index":159,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["coursehomecomponent",{"_index":137,"title":{"components/CourseHomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursehomecomponent,canactivate:[authguard",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["courses",{"_index":638,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserToken.html":{}}}],["coursestatus",{"_index":292,"title":{"interfaces/CourseStatus.html":{}},"body":{"injectables/AddToCourseService.html":{},"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["cover",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":947,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cs251",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["currentuservalue",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["danger",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["dashboard",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/TopBarComponent.html":{},"index.html":{}}}],["dashboard.herokuapp.com",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":208,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{}}}],["data=>{console.log(data",{"_index":608,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["data=>{console.log(data);window.alert(\"student",{"_index":593,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["data=>{console.log(data);window.alert(\"ta",{"_index":602,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["data['message']=message",{"_index":804,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['status']=status",{"_index":295,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["data['to']=to",{"_index":803,"title":{},"body":{"injectables/MessageService.html":{}}}],["days",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["declarations",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":418,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["decode(token",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["decoding",{"_index":451,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["default",{"_index":178,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["dependencies",{"_index":305,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":247,"title":{},"body":{"injectables/AddCourseService.html":{},"interfaces/Course.html":{},"classes/User.html":{}}}],["desktops",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{}}}],["details",{"_index":909,"title":{},"body":{"classes/User.html":{}}}],["dev",{"_index":1028,"title":{},"body":{"index.html":{}}}],["development",{"_index":1024,"title":{},"body":{"index.html":{}}}],["devices",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{}}}],["directive",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["directives",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1038,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1043,"title":{},"body":{"index.html":{}}}],["display",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["dist",{"_index":1042,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["don't",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["dont",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["e2e",{"_index":1055,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":370,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":375,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":373,"title":{},"body":{"classes/AppPage.html":{}}}],["easy",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["element",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["element(by.css('app",{"_index":378,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserReal.html":{}}}],["empty",{"_index":615,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["end",{"_index":1054,"title":{},"body":{"index.html":{}}}],["environment",{"_index":975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":211,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error=>{window.alert(\"adding",{"_index":596,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["etc",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["everything",{"_index":828,"title":{},"body":{"components/RegisterComponent.html":{}}}],["execute",{"_index":1051,"title":{},"body":{"index.html":{}}}],["exp",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["expansion",{"_index":623,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["expiration",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["expiresat",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{}}}],["exports",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["expression",{"_index":824,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":164,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["f1",{"_index":811,"title":{},"body":{"components/RegisterComponent.html":{}}}],["false",{"_index":180,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":817,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fields",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["files",{"_index":1034,"title":{},"body":{"index.html":{}}}],["fingertips",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["first",{"_index":187,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["first_name",{"_index":920,"title":{},"body":{"interfaces/UserReal.html":{}}}],["fit",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{}}}],["flag",{"_index":1045,"title":{},"body":{"index.html":{}}}],["flex",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{}}}],["float",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["flow",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{}}}],["font",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["form",{"_index":225,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":166,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":553,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["formcontrol('',validators.required",{"_index":586,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["formgroup",{"_index":176,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["from_username",{"_index":777,"title":{},"body":{"interfaces/Message.html":{}}}],["from_username:string",{"_index":789,"title":{},"body":{"interfaces/Message.html":{}}}],["frontend",{"_index":835,"title":{},"body":{"components/RegisterComponent.html":{}}}],["function",{"_index":255,"title":{},"body":{"injectables/AddCourseService.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["further",{"_index":1056,"title":{},"body":{"index.html":{}}}],["gap",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["gaurav",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["generate",{"_index":1036,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1019,"title":{},"body":{"index.html":{}}}],["get_messages",{"_index":792,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_messages(id",{"_index":795,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_messages(id:number):observable",{"_index":799,"title":{},"body":{"injectables/MessageService.html":{}}}],["getexpiration",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["getf",{"_index":182,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getf1",{"_index":840,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getter",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getting",{"_index":1017,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":371,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":503,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["girish",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["go",{"_index":1059,"title":{},"body":{"index.html":{}}}],["group",{"_index":229,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["grow",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["guard",{"_index":380,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":381,"title":{},"body":{"guards/AuthGuard.html":{}}}],["header",{"_index":220,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["headers",{"_index":273,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":228,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["help",{"_index":1057,"title":{},"body":{"index.html":{}}}],["helps",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{}}}],["here",{"_index":730,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["home",{"_index":510,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["home'},{'name",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["home.component",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["home.component.html",{"_index":512,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":511,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.ts",{"_index":509,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["home.component.ts:104",{"_index":536,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:119",{"_index":535,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:21",{"_index":543,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:22",{"_index":545,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:26",{"_index":559,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:30",{"_index":563,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:31",{"_index":564,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:32",{"_index":554,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:36",{"_index":537,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:40",{"_index":541,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:44",{"_index":547,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:48",{"_index":546,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:52",{"_index":531,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:63",{"_index":534,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:75",{"_index":532,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:89",{"_index":533,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home/course",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["home/home.component",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":139,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homecomponent,canactivate:[authguard",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["html",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["http",{"_index":244,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["http://127.0.0.1:8000",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1030,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":278,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{}}}],["http_interceptors",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":242,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["httpclientmodule",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule,http_interceptors",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":412,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httphandler",{"_index":411,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httpheaders",{"_index":262,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":409,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httpoptions",{"_index":272,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":263,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{}}}],["httprequest",{"_index":410,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["https://back",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":287,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/UserReal.html":{},"injectables/UserwhoService.html":{}}}],["id:number",{"_index":782,"title":{},"body":{"interfaces/Message.html":{}}}],["identifier",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":933,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["idle",{"_index":399,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["idservice",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{}}}],["idservice:userwhoservice",{"_index":715,"title":{},"body":{"components/LoginComponent.html":{}}}],["ie11",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["if(!this.auth_code_status",{"_index":875,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if((localstorage.getitem('token')==null)||(localstorage.getitem('token')=='undefined",{"_index":904,"title":{},"body":{"components/TopBarComponent.html":{}}}],["if(data['is_professor']==true",{"_index":738,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(localstorage.getitem('is_professor')=='true",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{}}}],["if(professor_expression.test(s)==true",{"_index":872,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(student_expression.test(s)==true",{"_index":870,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.message.invalid",{"_index":605,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["if(this.username.invalid",{"_index":590,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["if(tok==null||tok=='undefined",{"_index":734,"title":{},"body":{"components/LoginComponent.html":{}}}],["iitb",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{}}}],["img",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{}}}],["important",{"_index":627,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["imports",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{}}}],["inherit",{"_index":626,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["injectable",{"_index":237,"title":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"overview.html":{}}}],["input",{"_index":709,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["input[type=\"radio",{"_index":230,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["intercept",{"_index":490,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":474,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["interceptor",{"_index":488,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":489,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":424,"title":{"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["interfaces",{"_index":505,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"overview.html":{}}}],["interval",{"_index":889,"title":{},"body":{"components/TopBarComponent.html":{}}}],["interval=setinterval(()=>{this.check_login();},500",{"_index":902,"title":{},"body":{"components/TopBarComponent.html":{}}}],["invalid",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["is_professor",{"_index":639,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Message.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserToken.html":{}}}],["is_professor:[false,validators.required",{"_index":859,"title":{},"body":{"components/RegisterComponent.html":{}}}],["is_professor:boolean",{"_index":790,"title":{},"body":{"interfaces/Message.html":{}}}],["isloggedin",{"_index":470,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["isloggedout",{"_index":472,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["isnt",{"_index":398,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["jquery",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["json.parse(atob(token.split(\".\")[1",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["json.parse(expiration",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["json.stringify(expiresat.valueof",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["justify",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["jwt",{"_index":417,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":416,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["jwtpayload",{"_index":425,"title":{"interfaces/JWTPayload.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{}}}],["karma",{"_index":1053,"title":{},"body":{"index.html":{}}}],["keep",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["kinds",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["krushnakant",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["landscape",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["large",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{}}}],["last_name",{"_index":921,"title":{},"body":{"interfaces/UserReal.html":{}}}],["left",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"overview.html":{}}}],["lg",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{}}}],["literal",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":160,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["loading.note",{"_index":548,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["local",{"_index":768,"title":{},"body":{"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["localstorage.clear",{"_index":774,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.getitem('expires_at",{"_index":462,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.getitem('token",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.getitem('token')!=\"undefined",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('token')!=null",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem('expires_at",{"_index":773,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.removeitem('token",{"_index":772,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.setitem('expires_at",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.setitem('is_professor','false",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('is_professor','true",{"_index":739,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('token",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["location.reload",{"_index":609,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["logged",{"_index":392,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["logged_in",{"_index":890,"title":{},"body":{"components/TopBarComponent.html":{}}}],["logged_in:boolean",{"_index":901,"title":{},"body":{"components/TopBarComponent.html":{}}}],["logic",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login",{"_index":359,"title":{"interfaces/Login.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["login'},{'name",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["login(data",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["login.component.html",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["login_button",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{}}}],["login_url",{"_index":420,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":140,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{}}}],["logout",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["logout'},{'name",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["logout.component.html",{"_index":756,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":755,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.service",{"_index":415,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["logout/logout.component",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["logout:logoutservice",{"_index":483,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["logout_url",{"_index":770,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logoutcomponent",{"_index":142,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logoutservice",{"_index":385,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"coverage.html":{}}}],["logs",{"_index":401,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{}}}],["long",{"_index":400,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["m_s_l",{"_index":517,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_s_l=false",{"_index":575,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_t_l",{"_index":518,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_t_l=false",{"_index":574,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["make",{"_index":395,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["margin",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["mat",{"_index":622,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["matches",{"_index":825,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["max",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{}}}],["md",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["media",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{}}}],["medium",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["members",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["message",{"_index":519,"title":{"interfaces/Message.html":{}},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["message.message",{"_index":617,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message:formcontrol",{"_index":571,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message:string",{"_index":784,"title":{},"body":{"interfaces/Message.html":{}}}],["messages",{"_index":520,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["messageservice",{"_index":530,"title":{"injectables/MessageService.html":{}},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["messageservice:messageservice",{"_index":579,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["min",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["miscellaneous",{"_index":1068,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mixin",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{}}}],["module",{"_index":302,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":304,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moment",{"_index":419,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["moment().isbefore(this.getexpiration",{"_index":471,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment().isbetween(this.getexpiration().subtract(1",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment(expiresat",{"_index":464,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment.unix(payload.exp",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moodle",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{}}}],["more",{"_index":1058,"title":{},"body":{"index.html":{}}}],["multi",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["my.ts",{"_index":917,"title":{},"body":{"interfaces/UserMy.html":{},"coverage.html":{}}}],["name",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"index.html":{}}}],["navigate",{"_index":1029,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":372,"title":{},"body":{"classes/AppPage.html":{}}}],["needed",{"_index":832,"title":{},"body":{"components/RegisterComponent.html":{}}}],["new",{"_index":274,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":475,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["next.handle(cloned",{"_index":480,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["next.handle(req",{"_index":481,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["ng",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["ngx",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["none_type",{"_index":899,"title":{},"body":{"components/TopBarComponent.html":{}}}],["noopanimationsmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["notifications",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{}}}],["notify",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["number",{"_index":288,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{}}}],["object",{"_index":249,"title":{},"body":{"injectables/AddCourseService.html":{},"interfaces/Course.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":261,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["oject",{"_index":253,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["onsubmit",{"_index":162,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["option",{"_index":561,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["optional",{"_index":173,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["orange",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{}}}],["out",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":625,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["overview",{"_index":1064,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p[a",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":982,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":224,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["page",{"_index":403,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["panel",{"_index":624,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["param",{"_index":279,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/UserwhoService.html":{}}}],["parameters",{"_index":171,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["parts",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{}}}],["passed",{"_index":254,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["password",{"_index":683,"title":{},"body":{"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserReal.html":{}}}],["path",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["path:'**',component:logincomponent",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":434,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["performs",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["person",{"_index":560,"title":{},"body":{"components/CourseHomeComponent.html":{},"classes/User.html":{}}}],["piazza",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["pipe",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["pipe(first",{"_index":206,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["place",{"_index":877,"title":{},"body":{"components/RegisterComponent.html":{}}}],["popper.js",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["portrait",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["post",{"_index":258,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["prajeeth",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["previous",{"_index":616,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["private",{"_index":191,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserwhoService.html":{}}}],["proceeds",{"_index":826,"title":{},"body":{"components/RegisterComponent.html":{}}}],["process",{"_index":540,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["prod",{"_index":1044,"title":{},"body":{"index.html":{}}}],["production",{"_index":1046,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["professor",{"_index":911,"title":{},"body":{"classes/User.html":{}}}],["professor_expression",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["professor_expression=/p[a",{"_index":851,"title":{},"body":{"components/RegisterComponent.html":{}}}],["professors",{"_index":850,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["profs",{"_index":549,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["project",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["promise",{"_index":374,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":158,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{}}}],["protractor",{"_index":376,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":276,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["providers",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["radius",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":780,"title":{},"body":{"interfaces/Message.html":{}}}],["read_by",{"_index":778,"title":{},"body":{"interfaces/Message.html":{}}}],["read_by:array",{"_index":788,"title":{},"body":{"interfaces/Message.html":{}}}],["readme",{"_index":1060,"title":{},"body":{"index.html":{}}}],["real",{"_index":939,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["real.ts",{"_index":919,"title":{},"body":{"interfaces/UserReal.html":{},"coverage.html":{}}}],["receive",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{}}}],["receive,it",{"_index":781,"title":{},"body":{"interfaces/Message.html":{}}}],["red",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirect",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirects",{"_index":402,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["refresh_url",{"_index":422,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshes",{"_index":393,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["refreshtoken",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["register",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["register(user",{"_index":924,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.html",{"_index":807,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":806,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["register_url",{"_index":926,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registercomponent",{"_index":144,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":810,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":837,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regular",{"_index":823,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["regularly",{"_index":894,"title":{},"body":{"components/TopBarComponent.html":{}}}],["reload",{"_index":1032,"title":{},"body":{"index.html":{}}}],["remember",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{}}}],["render",{"_index":558,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["representing",{"_index":843,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":248,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["req",{"_index":492,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":477,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["req.headers.set('authorization",{"_index":478,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["request",{"_index":259,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["require",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":214,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":198,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["returnurl",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["right",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["root",{"_index":277,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["root'},{'name",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["route",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":167,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["router:router",{"_index":580,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LogoutComponent.html":{}}}],["routermodule",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["run",{"_index":1026,"title":{},"body":{"index.html":{}}}],["running",{"_index":1047,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":265,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":188,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["s!=\"undefined",{"_index":869,"title":{},"body":{"components/RegisterComponent.html":{}}}],["s!=null",{"_index":868,"title":{},"body":{"components/RegisterComponent.html":{}}}],["s=this.f1.auth_code.value",{"_index":867,"title":{},"body":{"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1035,"title":{},"body":{"index.html":{}}}],["screen",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["see",{"_index":552,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["send",{"_index":550,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["send_message",{"_index":793,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message(id",{"_index":797,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message(id:number,message:string,to:string",{"_index":802,"title":{},"body":{"injectables/MessageService.html":{}}}],["sending",{"_index":257,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["sendstudent",{"_index":525,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["sendta",{"_index":526,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["sent",{"_index":557,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{}}}],["sent:string",{"_index":783,"title":{},"body":{"interfaces/Message.html":{}}}],["separate",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["serve",{"_index":1027,"title":{},"body":{"index.html":{}}}],["server",{"_index":1025,"title":{},"body":{"index.html":{}}}],["server/website",{"_index":707,"title":{},"body":{"components/LoginComponent.html":{}}}],["service",{"_index":251,"title":{},"body":{"injectables/AddCourseService.html":{},"components/RegisterComponent.html":{}}}],["services/add",{"_index":189,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{}}}],["services/authentication.service",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["services/logout.service",{"_index":760,"title":{},"body":{"components/LogoutComponent.html":{}}}],["services/message.service",{"_index":566,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["services/user.service",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{}}}],["services/userwho.service",{"_index":565,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["set",{"_index":556,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["setinterval(()=>{this.check_login();},500",{"_index":897,"title":{},"body":{"components/TopBarComponent.html":{}}}],["setsession",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setsession(authresult",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["sharereplay",{"_index":414,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["shrink",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["sign",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{}}}],["size",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["slateblue",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{}}}],["sm",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["small",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["smartphones",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["solid",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{},"index.html":{}}}],["sources",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["space",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["span')).gettext",{"_index":379,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../add",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.ts",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logout.service.ts",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.service.ts",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../userwho.service.ts",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/_models/course",{"_index":633,"title":{},"body":{"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["src/app/_models/course.ts",{"_index":506,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/app/_models/login.ts",{"_index":682,"title":{},"body":{"interfaces/Login.html":{},"coverage.html":{}}}],["src/app/_models/message.ts",{"_index":776,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/_models/user",{"_index":916,"title":{},"body":{"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["src/app/_models/user.ts",{"_index":907,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/_models/user.ts:5",{"_index":915,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:6",{"_index":914,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:7",{"_index":912,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:8",{"_index":913,"title":{},"body":{"classes/User.html":{}}}],["src/app/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:12",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:8",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/add",{"_index":153,"title":{},"body":{"components/AddCourseComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/course",{"_index":508,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":637,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:11",{"_index":644,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:12",{"_index":641,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":643,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:30",{"_index":642,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":708,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":704,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":710,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":712,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:71",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/logout/logout.component.ts",{"_index":754,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/logout/logout.component.ts:16",{"_index":759,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/logout/logout.component.ts:9",{"_index":758,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":805,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/register/register.component.ts:26",{"_index":836,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":833,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:34",{"_index":838,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:38",{"_index":831,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:39",{"_index":812,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:55",{"_index":813,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:72",{"_index":839,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:77",{"_index":841,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":814,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/services/add",{"_index":239,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts",{"_index":382,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:105",{"_index":491,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/services/authentication.service.ts:121",{"_index":386,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/authentication.service.ts:129",{"_index":388,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/authentication.service.ts:34",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:38",{"_index":501,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:51",{"_index":504,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:55",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":500,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:73",{"_index":496,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:80",{"_index":499,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:92",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:96",{"_index":498,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/base.ts",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/logout.service.ts",{"_index":764,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/logout.service.ts:14",{"_index":765,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/logout.service.ts:23",{"_index":766,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/message.service.ts",{"_index":791,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/message.service.ts:14",{"_index":794,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:19",{"_index":796,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:23",{"_index":798,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/user.service.ts",{"_index":922,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/user.service.ts:16",{"_index":923,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:21",{"_index":925,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/userwho.service.ts",{"_index":932,"title":{},"body":{"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/userwho.service.ts:16",{"_index":934,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:24",{"_index":938,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:32",{"_index":937,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:39",{"_index":935,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/top",{"_index":885,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":976,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srivatsa",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["started",{"_index":1018,"title":{"index.html":{}},"body":{}}],["statements",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":289,"title":{},"body":{"injectables/AddToCourseService.html":{},"interfaces/CourseStatus.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserwhoService.html":{}}}],["status(id",{"_index":936,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["status(id:number",{"_index":943,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["status.ts",{"_index":634,"title":{},"body":{"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["status:string",{"_index":636,"title":{},"body":{"interfaces/CourseStatus.html":{}}}],["stop",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["stops",{"_index":820,"title":{},"body":{"components/RegisterComponent.html":{}}}],["storage",{"_index":769,"title":{},"body":{"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["store",{"_index":555,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["stored",{"_index":1041,"title":{},"body":{"index.html":{}}}],["stores",{"_index":544,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{}}}],["string",{"_index":286,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":538,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["student_expression",{"_index":967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["student_expression=/[1",{"_index":846,"title":{},"body":{"components/RegisterComponent.html":{}}}],["students",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["submits",{"_index":815,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitted",{"_index":161,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitted_add",{"_index":521,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_add=false",{"_index":568,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_m",{"_index":522,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_m=false",{"_index":569,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["subscribe",{"_index":207,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(data",{"_index":583,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["success",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{}}}],["successful",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":881,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successfully\");location.reload",{"_index":595,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["such",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["support",{"_index":1061,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":396,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["svg",{"_index":1062,"title":{},"body":{"modules.html":{}}}],["ta",{"_index":542,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{}}}],["table",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["tablets",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["takes",{"_index":829,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tap",{"_index":413,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["tap(response",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["team",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/TopBarComponent.html":{}}}],["tells",{"_index":390,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["test",{"_index":1050,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1049,"title":{},"body":{"index.html":{}}}],["text",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.a_s_l=false",{"_index":598,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_s_l=true",{"_index":591,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_t_l=false",{"_index":603,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_t_l=true",{"_index":600,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.addcourse.addcourse(this.courseform.value",{"_index":205,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.addtocourse.addtocourse(this.username.value,this.course_id,'student').pipe(first",{"_index":592,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.addtocourse.addtocourse(this.username.value,this.course_id,'ta').pipe(first",{"_index":601,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.auth_code_form.controls",{"_index":863,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_form.invalid",{"_index":866,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_form=this.formbuilder.group",{"_index":860,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_status=false",{"_index":874,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_status=true",{"_index":871,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":856,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authenticationservice.login(this.loginform.value",{"_index":732,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isloggedin",{"_index":484,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.authservice.refreshtoken",{"_index":485,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.check_login",{"_index":903,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.course_id=this.activatedroute.snapshot.parammap.get('id",{"_index":581,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.course_status=data['status",{"_index":584,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.courseform",{"_index":193,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courseform.controls",{"_index":199,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courseform.invalid",{"_index":202,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courses",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.decode(token",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.formbuilder.group",{"_index":194,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getexpiration",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.get(url,httpoptions",{"_index":801,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.http.get(use_url",{"_index":942,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["this.http.get(use_url,httpoptions",{"_index":945,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["this.http.post(add_course_url,data,httpoptions",{"_index":282,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["this.http.post(login_url,data",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.post(refresh_url,{token:this.token",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.post(register_url",{"_index":928,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(url,data,httpoptions",{"_index":296,"title":{},"body":{"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{}}}],["this.idservice.identity().pipe(first",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.is_professor=false",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.is_professor=true",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.isloggedin",{"_index":473,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.loading",{"_index":203,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.loading=false",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.logged_in=false",{"_index":905,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.logged_in=true",{"_index":906,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.loginform",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":731,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout.logout",{"_index":486,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{}}}],["this.m_s_l=false",{"_index":614,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_s_l=true",{"_index":612,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_t_l=false",{"_index":610,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_t_l=true",{"_index":606,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message=new",{"_index":587,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.messageservice.get_messages(this.course_id).subscribe(data1=>this.messages=data1",{"_index":588,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.messageservice.send_message(this.course_id,this.message.value,'student').pipe(first",{"_index":613,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.messageservice.send_message(this.course_id,this.message.value,'ta').pipe(first",{"_index":607,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.registerform",{"_index":857,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":862,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":865,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.patchvalue({is_professor:true",{"_index":873,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.returnurl",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/login",{"_index":762,"title":{},"body":{"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['addcourse",{"_index":213,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['home",{"_index":210,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.router.navigate(['login",{"_index":487,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.setsession(response",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.submitted",{"_index":200,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.submitted_add=false",{"_index":599,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_add=true",{"_index":589,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_m=false",{"_index":611,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_m=true",{"_index":604,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.username=new",{"_index":585,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.userservice.register(this.registerform.value",{"_index":879,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.who.status(this.course_id",{"_index":582,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.who.who().subscribe(data",{"_index":645,"title":{},"body":{"components/HomeComponent.html":{}}}],["time",{"_index":834,"title":{},"body":{"components/RegisterComponent.html":{}}}],["title",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/CourseHomeComponent.html":{}}}],["to:string",{"_index":785,"title":{},"body":{"interfaces/Message.html":{}}}],["tok=localstorage.getitem('token",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{}}}],["token",{"_index":394,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{},"interfaces/UserToken.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["token.ts",{"_index":929,"title":{},"body":{"interfaces/UserToken.html":{},"coverage.html":{}}}],["token_form",{"_index":930,"title":{},"body":{"interfaces/UserToken.html":{}}}],["token_form:string",{"_index":931,"title":{},"body":{"interfaces/UserToken.html":{}}}],["top",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["topbarcomponent",{"_index":146,"title":{"components/TopBarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tot",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["track",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["true",{"_index":201,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["tslib",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["type",{"_index":172,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jasmine",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["types/jasminewd2",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["types/jwt",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":1048,"title":{},"body":{"index.html":{}}}],["unsuccessful",{"_index":597,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["up",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{}}}],["upport",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{}}}],["url=base_url+'/api/messages/'+id.tostring",{"_index":800,"title":{},"body":{"injectables/MessageService.html":{}}}],["url=base_url+'/api/user/'+id.tostring()+'/'+username",{"_index":294,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["use",{"_index":1037,"title":{},"body":{"index.html":{}}}],["use_url",{"_index":941,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["use_url=base_url+'/api/user/'+id.tostring()+'/abc",{"_index":944,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["useclass",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":711,"title":{"classes/User.html":{}},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["user_id",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["user_url",{"_index":940,"title":{},"body":{"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermy",{"_index":405,"title":{"interfaces/UserMy.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":291,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserReal.html":{}}}],["username,password,email",{"_index":910,"title":{},"body":{"classes/User.html":{}}}],["username:formcontrol",{"_index":570,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["userreal",{"_index":918,"title":{"interfaces/UserReal.html":{}},"body":{"interfaces/UserReal.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["userservice",{"_index":316,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usertoken",{"_index":407,"title":{"interfaces/UserToken.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["userwhoservice",{"_index":529,"title":{"injectables/UserwhoService.html":{}},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["uuid",{"_index":408,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["validators",{"_index":185,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(5",{"_index":197,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["validators.minlength(6",{"_index":858,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":195,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":179,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":818,"title":{},"body":{"components/RegisterComponent.html":{}}}],["var",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["variable",{"_index":705,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1069,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{}}}],["verifies",{"_index":822,"title":{},"body":{"components/RegisterComponent.html":{}}}],["version",{"_index":1022,"title":{},"body":{"index.html":{}}}],["via",{"_index":1052,"title":{},"body":{"index.html":{}}}],["view",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["webmail",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["website",{"_index":397,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["whether",{"_index":391,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/TopBarComponent.html":{}}}],["white",{"_index":233,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["who:userwhoservice",{"_index":577,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["width",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["window",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["window.alert(\"incorrect",{"_index":876,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert(\"registered",{"_index":880,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert(\"registration",{"_index":878,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert('invalid",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{}}}],["window.localstorage.clear",{"_index":761,"title":{},"body":{"components/LogoutComponent.html":{}}}],["wont",{"_index":845,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":763,"title":{},"body":{"components/LogoutComponent.html":{}}}],["wrap",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{}}}],["xl",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{}}}],["xs",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{}}}],["yes",{"_index":819,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z0",{"_index":848,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["z]{2,3}\\d{3",{"_index":852,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/about/about.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n        NOTIFY ME!\n        \n            Course project - CS251\n        \n        \n        \n            \n                This project consist of two parts - a dashboard and an android app. It helps students at IITB to keep track of all kinds of notifications at their fingertips that they receive from various sources such as moodle, webmail, piazza etc.,\n            \n        \n    \n\n\nTeam Members \n\n    \n        \n            \n                \n                \n                    Girish Srivatsa \n                    190050069\n                \n            \n        \n        \n            \n                \n                \n                    Krushnakant\n                    190100036\n                \n            \n        \n        \n            \n                \n                \n                    Prajeeth\n                    190050117\n                \n            \n        \n        \n            \n                \n                \n                    Gaurav\n                    190050037\n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                // Small tablets and large smartphones (landscape view)\n$screen-sm-min: 576px;\n// Small tablets (portrait view)\n$screen-md-min: 768px;\n// Tablets and small desktops\n$screen-lg-min: 992px;\n// Large tablets and desktops\n$screen-xl-min: 1200px;\n@mixin xs {\n    @media (max-width: #{$screen-sm-min}) {\n        @content;\n    }\n}\n@mixin sm {\n    @media (max-width: #{$screen-md-min}) {\n        @content;\n    }\n}\n\n// Medium devices\n@mixin md {\n    @media (max-width: #{$screen-lg-min}) {\n        @content;\n    }\n}\n// Large devices\n@mixin lg {\n    @media (max-width: #{$screen-xl-min}) {\n        @content;\n    }\n}\n\n.about {\n    box-align: center;\n}\n\n.logo {\n    margin-top: 5%;\n    float: left;\n    border: 1px solid black;\n    @include md {\n        width: 50%;\n        margin-left: 25%;\n        margin-right: 25%;\n    }\n    // border: 1px solid black;\n}\n\n.content {\n    margin-left: 5%;\n    margin-top: 8%;\n    border-radius: 5px;\n    // border: 1px solid black;\n    @include md {\n        margin-left: 0%;\n        text-align: center;\n    }\n}\n\n.cent {\n    text-align: center;\n    @include md {\n        text-align: center;\n    }\n}\n\n.members {\n    text-align: center;\n    font-size: 40px;\n    margin-top: 3%;\n    margin-bottom: 3%;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                NOTIFY ME!                    Course project - CS251                                                    This project consist of two parts - a dashboard and an android app. It helps students at IITB to keep track of all kinds of notifications at their fingertips that they receive from various sources such as moodle, webmail, piazza etc.,                        Team Members                                                                             Girish Srivatsa                     190050069                                                                                                            Krushnakant                    190100036                                                                                                            Prajeeth                    190050117                                                                                                            Gaurav                    190050037                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddCourseComponent.html":{"url":"components/AddCourseComponent.html","title":"component - AddCourseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddCourseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-course/add-course.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-course\n            \n\n            \n                styleUrls\n                ./add-course.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-course.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CourseForm\n                            \n                            \n                                loading\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, addCourse: AddCourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-course/add-course.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addCourse\n                                                  \n                                                        \n                                                                        AddCourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-course/add-course.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-course/add-course.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CourseForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/add-course/add-course.component.ts:27\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {AddCourseService} from '../services/add-course.service';\n@Component({\n  selector: 'app-add-course',\n  templateUrl: './add-course.component.html',\n  styleUrls: ['./add-course.component.scss']\n})\nexport class AddCourseComponent implements OnInit {\n  CourseForm: FormGroup;\n  loading = false;\n  submitted = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private addCourse:AddCourseService,\n  ) { }\n\n  ngOnInit(): void {\n    this.CourseForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      code: ['', [Validators.required, Validators.maxLength(5)]]\n  });\n  }\n  get f() { return this.CourseForm.controls; }\n  onSubmit(){\n    \n    this.submitted = true;\n    if (this.CourseForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    console.log(this.CourseForm.value);\n    this.addCourse.addCourse(this.CourseForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {console.log(data);\n                        this.router.navigate(['home']);\n                },\n                error => {\n                    console.log(error);\n                    this.router.navigate(['addcourse']);\n                });\n  }\n}\n\n    \n\n    \n        \n\n\n    Add a Course!\n    \n        \n\n            \n                Name\n                \n                \n                    Name is required\n                \n            \n            \n                Code\n                \n                \n                    Code is required\n                    Code must be 5 characters\n                \n            \n            \n                \n                                            \n                         Add Course\n                \n                \n                \n                    Cancel\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./add-course.component.scss\n                \n                .card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10%;\n}\n\n.card-header {\n    font-size: 35px;\n    text-align: center;\n}\n\n.card-body {\n    // margin-top: 2%;\n    padding-top: 2%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    font-size: medium;\n}\n\n.form-group {\n    text-align: center;\n}\n\ninput[type=\"radio\"] {\n    margin: 0 10px;\n}\n\n.add {\n    padding-right: 10px;\n}\n\n.cancel {\n    color: white;\n}\n\n.cancel:hover {\n    color: blue;\n}\n\n.required{\n    font-size: medium;\n    color:blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Add a Course!                                        Name                                                    Name is required                                                        Code                                                    Code is required                    Code must be 5 characters                                                                                                                             Add Course                                                                    Cancel                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddCourseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddCourseService.html":{"url":"injectables/AddCourseService.html","title":"injectable - AddCourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddCourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-course.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-course.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCourse\n                        \n                        \n                    \n                \n            \n            \n                \naddCourse(data: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/add-course.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this represents the course object to be added.This service is called by add course component from which the course oject was passed\nSo the add course function adds the course by sending a post request to the backend\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Post Request\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Course} from '../_models/course';\nimport {BASE_URL} from './base';\nconst COURSE_URL = BASE_URL+'/api/courses/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddCourseService {\n\n  constructor(\n    private http:HttpClient,\n  ) { }\n  /**\n   * @param data this represents the course object to be added.This service is called by add course component from which the course oject was passed\n   * So the add course function adds the course by sending a post request to the backend\n   * @return Post Request\n   */\n  addCourse(data:Course): Observable{\n    var ADD_COURSE_URL=COURSE_URL;\n    return this.http.post(ADD_COURSE_URL,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddToCourseService.html":{"url":"injectables/AddToCourseService.html","title":"injectable - AddToCourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddToCourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-to-course.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddToCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-to-course.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddToCourse\n                        \n                        \n                    \n                \n            \n            \n                \nAddToCourse(username: string, id: number, status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/add-to-course.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Course} from '../_models/course';\nimport {CourseStatus} from '../_models/course-status';\nimport {BASE_URL} from './base';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddToCourseService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n  AddToCourse(username:string,id:number,status:string): Observable{\n    const URL=BASE_URL+'/api/user/'+id.toString()+'/'+username+'/';\n    var data = {};\n    data['status']=status\n    return this.http.post(URL,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"dashboard\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  title = \"dashboard\";\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAddCourseComponent\n\nAddCourseComponent\n\nAppModule -->\n\nAddCourseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCourseHomeComponent\n\nCourseHomeComponent\n\nAppModule -->\n\nCourseHomeComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AddCourseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CourseHomeComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TopBarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {UserService} from './services/user.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AddCourseComponent } from './add-course/add-course.component'\nimport { CourseHomeComponent } from './course-home/course-home.component';\nimport { combineAll } from 'rxjs/operators';\nimport { AboutComponent } from './about/about.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatExpansionModule }from '@angular/material/expansion';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {AuthenticationService,AuthGuard,AuthInterceptor} from './services/authentication.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TopBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    LogoutComponent,\n    AddCourseComponent,\n    CourseHomeComponent,\n    AboutComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent,canActivate:[AuthGuard]},\n      {path: 'about', component: AboutComponent},\n      {path: 'addcourse',component: AddCourseComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id', component: CourseHomeComponent,canActivate:[AuthGuard]},\n      {path: 'login', component: LoginComponent},\n      {path: 'register', component: RegisterComponent},\n      {path: 'logout', component: LogoutComponent,},\n      {path:'**',component:LoginComponent},\n    ]),\n    NgbModule,\n    MatExpansionModule,\n    NoopAnimationsModule,\n  ],\n  providers: [\n    UserService,\n    AuthenticationService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/authentication.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, logout: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:121\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logout\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        this returns a boolean value which tells whether its logged in or not\nIf you are logged in this refreshes the token to make sure the website isnt idle for long\nIf not logged in it logs out and redirects to login page\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                decode\n                            \n                            \n                                getExpiration\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isLoggedOut\n                            \n                            \n                                login\n                            \n                            \n                                refreshToken\n                            \n                            \n                                    Private\n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decode(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExpiration\n                        \n                        \n                    \n                \n            \n            \n                \ngetExpiration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedOut\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(data: Login)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSession(authResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authResult\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUserValue\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/course.ts\n        \n\n            \n                Description\n            \n            \n                course object consist of course name and course code which is 5 character\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Course {\n    name: string;\n    code: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseHomeComponent.html":{"url":"components/CourseHomeComponent.html","title":"component - CourseHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-home/course-home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-home\n            \n\n            \n                styleUrls\n                ./course-home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./course-home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                a_s_l\n                            \n                            \n                                a_t_l\n                            \n                            \n                                course_id\n                            \n                            \n                                course_status\n                            \n                            \n                                m_s_l\n                            \n                            \n                                m_t_l\n                            \n                            \n                                message\n                            \n                            \n                                messages\n                            \n                            \n                                submitted_add\n                            \n                            \n                                submitted_m\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddStudent\n                            \n                            \n                                AddTA\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                SendStudent\n                            \n                            \n                                SendTA\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, who: UserwhoService, addtocourse: AddToCourseService, messageService: MessageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-home/course-home.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        who\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addtocourse\n                                                  \n                                                        \n                                                                        AddToCourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddStudent\n                        \n                        \n                    \n                \n            \n            \n                \nAddStudent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddTA\n                        \n                        \n                    \n                \n            \n            \n                \nAddTA()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SendStudent\n                        \n                        \n                    \n                \n            \n            \n                \nSendStudent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SendTA\n                        \n                        \n                    \n                \n            \n            \n                \nSendTA()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            a_s_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:36\n                            \n                        \n\n                \n                    \n                        add student loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            a_t_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:40\n                            \n                        \n\n                \n                    \n                        add TA loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_id\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:21\n                            \n                        \n\n                \n                    \n                        this stores course id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_status\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            m_s_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:48\n                            \n                        \n\n                \n                    \n                        message student loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            m_t_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:44\n                            \n                        \n\n                \n                    \n                        message TA loading to check if the process is loading.Note only profs can send message to TA and student can't see them\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:52\n                            \n                        \n\n                \n                    \n                        to store the set of messages sent in the course to render in the html\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted_add\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:26\n                            \n                        \n\n                \n                    \n                        to store if add person option is chosen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted_m\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:30\n                            \n                        \n\n                \n                    \n                        to store if send message is chosen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {UserwhoService}  from '../services/userwho.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {AddToCourseService} from '../services/add-to-course.service';\nimport {MessageService} from '../services/message.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { Observable } from 'rxjs';\nimport {Message} from '../_models/message';\n@Component({\n  selector: 'app-course-home',\n  templateUrl: './course-home.component.html',\n  styleUrls: ['./course-home.component.scss']\n})\nexport class CourseHomeComponent implements OnInit {\n  /**\n   * this stores course id\n   */\n  course_id;\n  course_status;\n  /**\n   * to store if add person option is chosen\n   */\n  submitted_add=false;\n  /**\n   * to store if send message is chosen\n   */\n  submitted_m=false;\n  username:FormControl;\n  message:FormControl;\n  /**\n   * add student loading to check if the process is loading\n   */\n  a_s_l=false;\n  /**\n   * add TA loading to check if the process is loading\n   */\n  a_t_l=false;\n  /**\n   * message TA loading to check if the process is loading.Note only profs can send message to TA and student can't see them\n   */\n  m_t_l=false;\n  /**\n   * message student loading to check if the process is loading\n   */\n  m_s_l=false;\n  /**\n   * to store the set of messages sent in the course to render in the html\n   */\n  messages\n  constructor(\n    private activatedRoute:ActivatedRoute,\n    private who:UserwhoService,\n    private addtocourse:AddToCourseService,\n    private messageService:MessageService,\n    private router:Router,\n  ) { }\n  /**\n   * \n   */\n  ngOnInit(): void {\n    this.course_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.who.STATUS(this.course_id)\n    .pipe(first())\n    .subscribe(data=>{\n      console.log(data);\n      this.course_status=data['status'];\n    });\n    this.username=new FormControl('',Validators.required);\n    this.message=new FormControl('',Validators.required);\n    this.messageService.GET_MESSAGES(this.course_id).subscribe(data1=>this.messages=data1);\n  }\n  AddStudent(){\n    this.submitted_add=true;\n    if(this.username.invalid){\n      return ;\n    }\n    this.a_s_l=true;\n    this.addtocourse.AddToCourse(this.username.value,this.course_id,'student').pipe(first())\n    .subscribe(\n      data=>{console.log(data);window.alert(\"Student is added successfully\");location.reload();},\n      error=>{window.alert(\"adding student is unsuccessful\");}\n    )\n    this.a_s_l=false;\n    this.submitted_add=false;\n  }\n  AddTA(){\n    this.submitted_add=true;\n    if(this.username.invalid){\n      return ;\n    }\n    this.a_t_l=true;\n    this.addtocourse.AddToCourse(this.username.value,this.course_id,'TA').pipe(first())\n    .subscribe(\n      data=>{console.log(data);window.alert(\"TA is added successfully\");location.reload();},\n      error=>{window.alert(\"adding TA unsuccessful\");}\n      \n    )\n    this.a_t_l=false;\n    this.submitted_add=false;\n  }\n  SendTA(){\n    this.submitted_m=true;\n    if(this.message.invalid){\n      return ;\n    }\n    this.m_t_l=true;\n    this.messageService.SEND_MESSAGE(this.course_id,this.message.value,'TA').pipe(first())\n    .subscribe(\n      data=>{console.log(data);\n        location.reload();\n      }\n    );\n    this.m_t_l=false;\n    this.submitted_m=false;\n  }\n  SendStudent(){\n    this.submitted_m=true;\n    if(this.message.invalid){\n      return ;\n    }\n    this.m_s_l=true;\n    this.messageService.SEND_MESSAGE(this.course_id,this.message.value,'student').pipe(first())\n    .subscribe(\n      data=>{console.log(data);\n        location.reload();\n      }\n    )\n    this.m_s_l=false;\n    this.submitted_m=false;\n  }\n}\n\n    \n\n    \n            \n     \n        \n        \n            Add a student / TA\n        \n    \n    \n        \n              Username:\n              \n              \n                Username is required\n              \n              Add TA\n              Add Student  \n          \n      \n \n\n    \n     \n         -->\n        \n            Send a Message!\n        \n    \n    \n        \n            Message:\n            \n            \n                Message cannot be empty\n            \n            \n                Send to TA\n            \n            \n                Send to Students  \n            \n        \n      \n \n\n\n    Previous Messages\n    \n        \n            \n                {{message.message}} \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./course-home.component.scss\n                \n                .form-control {\n    width: 70%;\n    margin-left: 15%;\n    margin-right: 15%;\n    margin-bottom: 20px;\n    height: 35px;\n    font-size: medium;\n    // text-align: center;\n    // margin-top: 20%;\n}\n\n.mat-expansion-panel {\n    overflow: inherit !important;\n}\n\n.btn-xl {\n    padding: 10px 20px;\n    font-size: 15px;\n    border-radius: 10px;\n}\n\n.add {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 10%;\n    text-align: center;\n}\n.send {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: 20%;\n    text-align: center;\n}\n\n.message {\n    margin-top: 5%;\n    height: 20%;\n}\n\n.message-title {\n    margin-left: 50px;\n}\n\n.container {\n    margin-top: 5%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                     Add a student / TA                                      Username:                                            Username is required                            Add TA              Add Student                                     -->                    Send a Message!                                    Message:                                        Message cannot be empty                                        Send to TA                                        Send to Students                                 Previous Messages                                        {{message.message}}                         '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CourseStatus.html":{"url":"interfaces/CourseStatus.html","title":"interface - CourseStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CourseStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/course-status.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\nexport interface CourseStatus {\n    course:Course;\n    status:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courses\n                            \n                            \n                                is_professor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddCourse\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(who: UserwhoService, router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        who\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddCourse\n                        \n                        \n                    \n                \n            \n            \n                \nAddCourse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {UserwhoService} from '../services/userwho.service';\nimport {AuthenticationService} from '../services/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  courses;\n  is_professor;\n  constructor(\n    private who: UserwhoService,\n    private router: Router,\n    private authenticationService : AuthenticationService,\n  ) { }\n\n  ngOnInit(): void {\n    this.who.WHO().subscribe(data => {console.log(data);\n                                      this.courses = data;\n                                    });\n    if(localStorage.getItem('is_professor')=='true'){\n      this.is_professor=true;\n    }\n    else{\n      this.is_professor=false;\n    }\n  }\n  AddCourse(){\n    console.log('clicked');\n    this.router.navigate(['addcourse']);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        Add Course\n    \n\n\n\n    \n        \n            \n            \n                {{course.code}}\n                 {{course.name}}\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .flex-container {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    padding-top: 20px;\n    margin-left: 10%;\n    margin-right: 10%;\n    gap: 40px;\n}\n\n.tot {\n    border: 1px solid black;\n}\n\n.card bg-danger {\n    flex-grow: 0;\n    flex-shrink: 0;\n    flex-basis: calc(50% - 10px);\n    /* separate properties for IE11 upport */\n    background: orange;\n    margin: 5px;\n    padding-top: 30px;\n}\n\n.add_course_button {\n    padding-top: 40px;\n    padding-right: auto;\n    padding-left: 40px;\n        \n}\n\n.card-img-top {\n    width: 100%;\n    height: 15vw;\n    object-fit: cover;\n}\n\n.addCourse {\n    background-color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Course                                                        {{course.code}}                 {{course.name}}                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTPayload.html":{"url":"interfaces/JWTPayload.html","title":"interface - JWTPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JWTPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        exp\n                                \n                                \n                                        user_id\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login.html":{"url":"interfaces/Login.html","title":"interface - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/login.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Login {\n    username: string;\n    password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService, idService: UserwhoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        idService\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:71\n                \n            \n\n\n            \n                \n                    this function performs the logic\nif form is invalid stop\ncheck for invalid login and if success then call idService\nif the login was successful after matching the data then redirect to the course page\nelse window alert that login was unsuccessful\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        variable to account for server/website loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        stores input data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        check if user submitted the data\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:60\n                                \n                            \n                    \n                        \n                                function to return form controls\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {UserwhoService} from '../services/userwho.service';\nimport { User } from '../_models';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    /**\n     * stores input data\n     */\n    loginForm: FormGroup;\n    /**\n     * variable to account for server/website loading\n     */\n    loading = false;\n    /**\n     * check if user submitted the data\n     */\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private idService:UserwhoService,\n        )\n    {\n        // redirect to home if already logged in\n        if (localStorage.getItem('token')!=null && localStorage.getItem('token')!=\"undefined\") {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit()\n    {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n\n    /**\n     * function to return form controls\n     */\n    get f(){\n        return this.loginForm.controls;\n    }\n\n    /**\n     * this function performs the logic\n     * if form is invalid stop\n     * check for invalid login and if success then call idService\n     * if the login was successful after matching the data then redirect to the course page\n     * else window alert that login was unsuccessful\n     */\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.loginForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    const tok=localStorage.getItem('token');\n                    if(tok==null||tok=='undefined'){\n                        this.loading=false;\n                        window.alert('invalid login');\n                        this.router.navigate(['login']);\n                    }\n                    else{\n                        this.idService.IDENTITY().pipe(first())\n                        .subscribe(\n                            data=>{console.log(data);\n                            if(data['is_professor']==true){\n                                localStorage.setItem('is_professor','true');\n                            }\n                            else{\n                                localStorage.setItem('is_professor','false');\n                            }\n                            this.router.navigate([this.returnUrl]);\n                        });\n                    }\n                    \n                },\n                error => {\n                    this.loading = false;\n                });\n    }\n\n}\n\n    \n\n    \n        \n\n\n    \n         Login\n    \n    \n        \n            \n                \n\n                    \n                    \n                        Username is required\n                    \n                \n                \n                    \n                    \n                        Password is required\n                    \n                \n                \n                    \n                        \n                        Login\n                        \n                    \n                    Don't have an account? Sign Up Here\n                \n            \n        \n        \n    Username\n    \n\n    Password\n    \n        \n    Login\n    \n       Remember me\n    \n  -->\n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .card-header {\n    font-size: 35px;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10%;\n    padding-bottom: 20%;\n}\n\n.card-body {\n    margin-top: 50px;\n    padding-top: 50px;\n}\n\n.space-it {\n    margin-top: 30px;\n    padding-top: 30%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    margin-bottom: 20px;\n}\n\n.login {\n    margin-right: 20px;\n}\n\n.button {\n    text-align: center;\n}\n\n.form-control{\n    font-size: medium;\n}\n\n.login_button{\n    background-color: slateblue;\n    font-size: 15px;\n    border-radius: 10px;\n      \n}\n\n.required{\n    font-size: large;\n    margin-left: 50px;\n    color: chartreuse;\n}\n\n\n.dont-have{\n    background-color:red;\n    padding-left: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Login                                                                                                            Username is required                                                                                                                    Password is required                                                                                                                        Login                                                                Don\\'t have an account? Sign Up Here                                                Username        Password                Login           Remember me      -->    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logout: LogoutService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/logout/logout.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logout\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/logout/logout.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LogoutService } from '../services/logout.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private logout: LogoutService,\n    private router:Router,\n  ) { }\n\n  ngOnInit(): void {\n    //this.logout.logout()\n    window.localStorage.clear();\n    this.router.navigate(['/login']);\n  \n  }\n\n}\n\n    \n\n    \n        logout works!\n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logout.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logout.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logout.service.ts:23\n                \n            \n\n\n            \n                \n                    This function just clears local storage and logs out\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {BASE_URL} from './base';\nconst LOGOUT_URL = BASE_URL+'/api/auth/logout/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogoutService {\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n  /**\n   * This function just clears local storage and logs out\n   */\n  logout() {\n    /*\n    localStorage.removeItem('token');\n    localStorage.removeItem('expires_at');*/\n    localStorage.clear();\n    console.log(\"hi\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/message.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        by\n                                \n                                \n                                        course\n                                \n                                \n                                        from_username\n                                \n                                \n                                        id\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        message\n                                \n                                \n                                        read_by\n                                \n                                \n                                        sent\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        by\n                                    \n                                \n                                \n                                    \n                                        by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from_username\n                                    \n                                \n                                \n                                    \n                                        from_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        read_by\n                                    \n                                \n                                \n                                    \n                                        read_by:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    It stores who all read the message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sent\n                                    \n                                \n                                \n                                    \n                                        sent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    it stores the type who should receive,it can be student or TA\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    id:number;\n    sent:string;\n    message:string;\n    /**\n     * it stores the type who should receive,it can be student or TA\n     */\n    to:string;\n    course:number;\n    by:number;\n    /**\n     * It stores who all read the message\n     */\n    read_by:Array;\n    from_username:string;\n    is_professor:boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                GET_MESSAGES\n                            \n                            \n                                SEND_MESSAGE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GET_MESSAGES\n                        \n                        \n                    \n                \n            \n            \n                \nGET_MESSAGES(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SEND_MESSAGE\n                        \n                        \n                    \n                \n            \n            \n                \nSEND_MESSAGE(id: number, message: string, to: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Message} from '../_models/message';\nimport {BASE_URL} from './base';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(\n    private http:HttpClient,\n  ) { }\n  GET_MESSAGES(id:number):Observable{\n    const URL=BASE_URL+'/api/messages/'+id.toString()+'/';\n    return this.http.get(URL,httpOptions);\n  }\n  SEND_MESSAGE(id:number,message:string,to:string): Observable{\n    const URL=BASE_URL+'/api/messages/'+id.toString()+'/';\n    var data={};\n    data['to']=to;\n    data['message']=message;\n    console.log(data);\n    return this.http.post(URL,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth_code_form\n                            \n                            \n                                auth_code_status\n                            \n                            \n                                loading\n                            \n                            \n                                registerForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                                \n                                    f1\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:85\n                \n            \n\n\n            \n                \n                    this function performs the logic when the user submits \nfirst checks if the field values are invalid if yes stops\nthen it checks for the authentication code status\nIt verifies with the regular expression and if matches proceeds by calling the register service\nIf everything is successful it takes back to login page else window alert message    \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth_code_form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth_code_status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:38\n                            \n                        \n\n                \n                    \n                        to check if the authentication code matches with the form needed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n                \n                    \n                        variable to account for loading time and for frontend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n                \n                    \n                        Registration form to input the fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:34\n                            \n                        \n\n                \n                    \n                        variable to account if submitted or not\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:72\n                                \n                            \n                    \n                        \n                                to return controls for fields for registration form\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        f1\n                    \n                \n\n                \n                    \n                        getf1()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:77\n                                \n                            \n                    \n                        \n                                to return controls for auth form \n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { UserService } from '../services/user.service';\n/**\n * This expression is a regular expression representing student code\n * So students only with this matching will be allowed,else wont be\n */\nconst student_expression=/[1-2]\\d[A-Z0-9]\\d{6}/;\n/**\n * This is the authentication code regular expression for professors\n */\nconst professor_expression=/P[A-Z]{2,3}\\d{3}/;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\n\nexport class RegisterComponent implements OnInit {\n    /**\n     * Registration form to input the fields\n     */\n    registerForm: FormGroup;\n    /**\n     * variable to account for loading time and for frontend\n     */\n    loading = false;\n    /**\n     * variable to account if submitted or not\n     */\n    submitted = false;\n    /**\n     * to check if the authentication code matches with the form needed\n     */\n    auth_code_status=false;\n    auth_code_form:FormGroup;\n    \n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private userService: UserService,\n        /*private authenticationService: AuthenticationService,\n        private alertService: AlertService*/\n    ) { \n        // redirect to home if already logged in\n        /*if (this.authenticationService.currentUserValue) { \n            this.router.navigate(['/']);\n        }*/\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            email: ['',Validators.required,],\n            \n            is_professor:[false,Validators.required],\n        });\n        this.auth_code_form=this.formBuilder.group({\n            auth_code: ['',Validators.required],\n        })\n    }\n\n    // convenience getter for easy access to form fields\n    /**\n     * to return controls for fields for registration form\n     */\n    get f() { return this.registerForm.controls; }\n\n    /**\n     * to return controls for auth form \n     */\n    get f1() {return this.auth_code_form.controls;}\n\n    /**\n     * this function performs the logic when the user submits \n     * first checks if the field values are invalid if yes stops\n     * then it checks for the authentication code status\n     * It verifies with the regular expression and if matches proceeds by calling the register service\n     * If everything is successful it takes back to login page else window alert message    */\n    onSubmit() {\n        this.submitted = true;\n      console.log(this.submitted);\n        // stop here if form is invalid\n        if (this.registerForm.invalid || this.auth_code_form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        var s=this.f1.auth_code.value;\n        \n        if (s!=null && s!=\"undefined\")\n        {\n            if(student_expression.test(s)==true)\n            {\n                this.auth_code_status=true;\n                \n            }\n            else if(professor_expression.test(s)==true)\n            {\n                this.auth_code_status=true;\n                this.registerForm.patchValue({is_professor:true});\n            }\n            else\n            {\n                this.auth_code_status=false;\n            }\n        }\n        else\n        {\n            this.auth_code_status=false;\n        }\n        if(!this.auth_code_status)\n        {\n            window.alert(\"incorrect authentication code on first place\");\n            this.loading=false;\n            window.alert(\"registration unsuccessful\");\n            return;\n        }\n        this.userService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {window.alert(\"registered successfully\");\n                         this.router.navigate(['/login']);\n                },\n                error => {\n                    window.alert(\"registration unsuccessful\");\n                    this.loading = false;\n                });\n          console.log(this.registerForm.value);\n    }\n}\n\n    \n\n    \n        \n\n\n    Register\n    \n        \n\n            \n                Username:\n                \n                \n                    Username is required\n                \n            \n            \n                Email:\n                \n                \n                    Email is required\n                \n            \n            \n                Password:\n                \n                \n                    Password is required\n                    Password must be at least 6 characters\n                \n            \n        \n           \n\n        \n            \n                Authentication Code:\n                \n                \n                    Authentication Code is required\n                \n            \n        \n\n        \n            \n                \n                 Register\n            \n            \n            \n                Cancel\n            \n            Already have an account? Login Here\n        \n    \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                .card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5%;\n}\n\n.card-header {\n    font-size: 35px;\n    color: black;\n    text-align: center;\n}\n\n.card-body {\n    margin-top: 2%;\n    padding-top: 5%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    margin-bottom: 20px;\n    font-size: medium;\n}\n\n.form-group {\n    text-align: center;\n}\n\ninput[type=\"radio\"] {\n    margin: 0 10px;\n}\n\n.cancel {\n    color: white;\n}\n\n.cancel:hover {\n    color: blue;\n}\n\n.al{\n    font-size: medium;\n}\n\n.required{\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Register                                        Username:                                                    Username is required                                                        Email:                                                    Email is required                                                        Password:                                                    Password is required                    Password must be at least 6 characters                                                                                   Authentication Code:                                                    Authentication Code is required                                                                                         Register                                                    Cancel                        Already have an account? Login Here            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopBarComponent.html":{"url":"components/TopBarComponent.html","title":"component - TopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/top-bar/top-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-bar\n            \n\n            \n                styleUrls\n                ./top-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interval\n                            \n                            \n                                logged_in\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check_logIN\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/top-bar/top-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check_logIN\n                        \n                        \n                    \n                \n            \n            \n                \ncheck_logIN()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-bar/top-bar.component.ts:26\n                \n            \n\n\n            \n                \n                    This function regularly checks at interval of 0.5sec and clears the local storage if the user had logged out \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-bar/top-bar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : setInterval(()=>{this.check_logIN();},500)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/top-bar/top-bar.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logged_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/top-bar/top-bar.component.ts:14\n                            \n                        \n\n                \n                    \n                        this variable checks the status whether the user is logged in or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { NONE_TYPE } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n  /**\n   * this variable checks the status whether the user is logged in or not\n   */\n  logged_in:boolean;\n  interval=setInterval(()=>{this.check_logIN();},500);\n  constructor()\n  { \n  }\n\n  ngOnInit(): void {\n    this.check_logIN();\n  }\n  /**\n   * This function regularly checks at interval of 0.5sec and clears the local storage if the user had logged out \n   */\n  check_logIN(){\n    if((localStorage.getItem('token')==null)||(localStorage.getItem('token')=='undefined')){\n      this.logged_in=false;\n    }\n    else{\n      this.logged_in=true;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n    Our Team -->\n    \n      \n    \n\n    \n        \n            \n                Our Team \n            \n        \n        \n            \n                Dashboard\n            \n        \n        \n            \n                \n                    Logout\n                \n            \n            \n                \n                    \n                        Login\n                    \n                \n                \n                    \n                        Register\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./top-bar.component.scss\n                \n                a {\n    color: white;\n    font-size: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Our Team -->                                                      Our Team                                                         Dashboard                                                                            Logout                                                                                                    Login                                                                                                Register                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user.ts\n        \n\n            \n                Description\n            \n            \n                contains user details like username,password,email and if that person is a professor\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                is_professor\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    username: string;\n    password: string;\n    email: string;\n    is_professor: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMy.html":{"url":"interfaces/UserMy.html","title":"interface - UserMy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserMy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-my.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\nexport interface UserMy {\n    user: number;\n    is_professor: boolean;\n    token: string;\n    courses: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserReal.html":{"url":"interfaces/UserReal.html","title":"interface - UserReal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserReal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-real.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        first_name\n                                \n                                \n                                        id\n                                \n                                \n                                        last_name\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserReal {\n    id: number;\n    username: string;\n    password: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models';\nimport {UserMy} from '../_models/user-my';\nimport {BASE_URL} from  './base';\nconst REGISTER_URL = BASE_URL+'/api/user/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient)\n  {\n  }\n  register(user: User): Observable\n  {\n    return this.http.post(REGISTER_URL, user, httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserToken.html":{"url":"interfaces/UserToken.html","title":"interface - UserToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-token.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        token_form\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_form\n                                    \n                                \n                                \n                                    \n                                        token_form:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\nexport interface UserToken {\n    user: number;\n    is_professor: boolean;\n    token: string;\n    courses: Array;\n    token_form:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserwhoService.html":{"url":"injectables/UserwhoService.html","title":"injectable - UserwhoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserwhoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/userwho.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                IDENTITY\n                            \n                            \n                                STATUS\n                            \n                            \n                                WHO\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/userwho.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            IDENTITY\n                        \n                        \n                    \n                \n            \n            \n                \nIDENTITY()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            STATUS\n                        \n                        \n                    \n                \n            \n            \n                \nSTATUS(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            WHO\n                        \n                        \n                    \n                \n            \n            \n                \nWHO()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {UserReal} from '../_models/user-real';\nimport {Course} from '../_models/course';\nimport {BASE_URL} from './base';\nconst USER_URL = BASE_URL+'/api/user/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserwhoService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n  /**\n   * \n   */\n  WHO(){\n    const USE_URL = BASE_URL+'/api/courses/';\n    return this.http.get(USE_URL, httpOptions);\n  }\n  /**\n   * \n   * @param id \n   */\n  STATUS(id:number){\n    const USE_URL=BASE_URL+'/api/user/'+id.toString()+'/abc/';\n    return this.http.get(USE_URL,httpOptions);\n  }\n  /**\n   * \n   */\n  IDENTITY(){\n    const USE_URL = BASE_URL + '/api/usermy/';\n    return this.http.get(USE_URL,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/course-status.ts\n            \n            interface\n            CourseStatus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/course.ts\n            \n            interface\n            Course\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_models/login.ts\n            \n            interface\n            Login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/message.ts\n            \n            interface\n            Message\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/_models/user-my.ts\n            \n            interface\n            UserMy\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_models/user-real.ts\n            \n            interface\n            UserReal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/_models/user-token.ts\n            \n            interface\n            UserToken\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_models/user.ts\n            \n            class\n            User\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/add-course/add-course.component.ts\n            \n            component\n            AddCourseComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/course-home/course-home.component.ts\n            \n            component\n            CourseHomeComponent\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            variable\n            professor_expression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            variable\n            student_expression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            injectable\n            AddCourseService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            variable\n            COURSE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/add-to-course.service.ts\n            \n            injectable\n            AddToCourseService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/add-to-course.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            JWTPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            LOGIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            REFRESH_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/base.ts\n            \n            variable\n            BASE_OTHER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/base.ts\n            \n            variable\n            BASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            injectable\n            LogoutService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            variable\n            LOGOUT_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            REGISTER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            injectable\n            UserwhoService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            variable\n            USER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/top-bar/top-bar.component.ts\n            \n            component\n            TopBarComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 9.1.12\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : 9.1.12\n        \n            @angular/compiler : 9.1.12\n        \n            @angular/core : 9.1.12\n        \n            @angular/forms : 9.1.12\n        \n            @angular/localize : 9.1.12\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : 9.1.12\n        \n            @angular/platform-browser-dynamic : 9.1.12\n        \n            @angular/router : 9.1.12\n        \n            @ng-bootstrap/ng-bootstrap : ^6.2.0\n        \n            @types/jasmine : 3.5.14\n        \n            @types/jasminewd2 : 2.0.8\n        \n            @types/jwt-decode : ^2.2.1\n        \n            @types/node : 12.12.67\n        \n            bootstrap : ^4.5.3\n        \n            cors : 2.8.5\n        \n            jquery : ^3.5.1\n        \n            jwt-decode : ^3.1.2\n        \n            jwt-token : ^1.0.9\n        \n            moment : ^2.29.1\n        \n            ngx-bootstrap : ^6.1.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : 6.5.5\n        \n            tslib : 1.14.1\n        \n            zone.js : 0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDashboard\nThis project was generated with Angular CLI version 9.1.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAddCourseComponent\n\nAddCourseComponent\n\nAppModule -->\n\nAddCourseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCourseHomeComponent\n\nCourseHomeComponent\n\nAppModule -->\n\nCourseHomeComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_OTHER_URL   (src/.../base.ts)\n                        \n                        \n                            BASE_URL   (src/.../base.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            COURSE_URL   (src/.../add-course.service.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            httpOptions   (src/.../userwho.service.ts)\n                        \n                        \n                            httpOptions   (src/.../add-to-course.service.ts)\n                        \n                        \n                            httpOptions   (src/.../user.service.ts)\n                        \n                        \n                            httpOptions   (src/.../logout.service.ts)\n                        \n                        \n                            httpOptions   (src/.../authentication.service.ts)\n                        \n                        \n                            httpOptions   (src/.../message.service.ts)\n                        \n                        \n                            httpOptions   (src/.../add-course.service.ts)\n                        \n                        \n                            LOGIN_URL   (src/.../authentication.service.ts)\n                        \n                        \n                            LOGOUT_URL   (src/.../logout.service.ts)\n                        \n                        \n                            professor_expression   (src/.../register.component.ts)\n                        \n                        \n                            REFRESH_URL   (src/.../authentication.service.ts)\n                        \n                        \n                            REGISTER_URL   (src/.../user.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            student_expression   (src/.../register.component.ts)\n                        \n                        \n                            USER_URL   (src/.../userwho.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/base.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_OTHER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://back-dashboard.herokuapp.com'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/services/add-course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COURSE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/courses/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/userwho.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/user/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/add-to-course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REGISTER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/user/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/logout.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGOUT_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/logout/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/get-token/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REFRESH_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/refresh-token/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/message.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/register/register.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            professor_expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /P[A-Z]{2,3}\\d{3}/\n                        \n                    \n\n                \n                    \n                        This is the authentication code regular expression for professors\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student_expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[1-2]\\d[A-Z0-9]\\d{6}/\n                        \n                    \n\n                \n                    \n                        This expression is a regular expression representing student code\nSo students only with this matching will be allowed,else wont be\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
