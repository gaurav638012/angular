var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.482,1,0.987]],["body/components/AboutComponent.html",[0,0.66,1,1.489,2,1.394,3,0.138,4,0.115,5,1.018,6,1.018,7,1.018,8,1.018,9,0.115,10,2.239,11,1.22,12,1.894,13,1.018,14,2.465,15,2.341,16,1.492,17,4.598,18,1.492,19,3.884,20,0.115,21,0.814,22,2.085,23,0.964,24,0.704,25,2.648,26,2.648,27,0.517,28,0.026,29,1.394,30,0.32,31,0.446,32,0.138,33,0.32,34,3.884,35,0.66,36,4.283,37,3.884,38,3.284,39,3.884,40,3.884,41,2.358,42,3.884,43,3.884,44,2.162,45,3.884,46,3.884,47,3.884,48,3.884,49,3.884,50,3.884,51,3.884,52,3.284,53,3.884,54,3.884,55,3.884,56,3.884,57,3.884,58,3.884,59,3.284,60,4.598,61,3.884,62,3.884,63,3.884,64,3.884,65,3.884,66,3.884,67,3.884,68,3.884,69,3.884,70,4.598,71,5.065,72,3.888,73,2.648,74,2.648,75,3.884,76,5.973,77,4.598,78,5.973,79,2.648,80,2.648,81,5.636,82,2.648,83,3.884,84,4.598,85,2.648,86,3.284,87,2.648,88,5.065,89,2.648,90,5.065,91,5.065,92,2.769,93,1.484,94,1.608,95,3.884,96,2.648,97,3.275,98,3.275,99,2.648,100,2.841,101,1.819,102,2.162,103,2.648,104,2.601,105,2.594,106,2.239,107,2.239,108,1.769,109,4.598,110,1.608,111,3.884,112,1.474,113,2.648,114,1.97,115,2.239,116,1.608,117,2.82,118,2.648,119,1.474,120,1.474,121,1.608,122,3.284,123,1.608,124,0.889,125,1.492,126,1.394,127,1.018,128,1.489,129,1.018,130,0.704,131,1.018,132,0.779,133,0.951,134,1.018,135,0.779,136,1.018,137,0.779,138,1.492,139,0.779,140,0.779,141,1.018,142,0.779,143,1.018,144,0.779,145,1.018,146,0.779,147,1.018,148,0.779,149,1.018,150,0.779,151,0.889,152,1.018,153,1.018,154,0.03,155,0.044,156,0.03]],["title/components/AddCourseComponent.html",[0,0.482,132,0.987]],["body/components/AddCourseComponent.html",[0,0.615,1,0.69,2,1.275,3,0.123,4,0.102,5,0.902,6,0.902,7,0.902,8,0.902,9,0.102,11,1.116,12,1.763,13,0.902,14,2.408,15,2.25,16,1.364,18,1.364,20,0.102,21,0.744,22,1.965,23,0.744,24,1.016,27,0.693,28,0.026,29,1.537,30,0.619,31,0.395,32,0.123,33,0.283,35,0.899,92,1.823,94,2.156,97,2.156,98,2.156,100,2.663,101,1.714,102,1.977,104,1.823,110,1.426,112,2.384,116,1.426,117,1.977,119,2.384,120,2.384,121,1.426,124,0.788,125,1.834,126,1.275,127,0.902,128,1.403,129,0.902,130,1.046,131,0.902,132,1.403,133,2.292,134,0.902,135,0.69,136,0.902,137,0.69,138,1.364,139,0.69,140,0.69,141,0.902,142,0.69,143,0.902,144,0.69,145,0.902,146,0.69,147,0.902,148,0.69,149,0.902,150,0.69,151,0.788,152,0.902,153,0.902,154,0.026,155,0.04,156,0.026,157,4.875,158,4.288,159,1.985,160,4.281,161,3.55,162,0.644,163,4.281,164,2.859,165,3.185,166,3.55,167,2.156,168,2.859,169,1.568,170,3.601,171,2.305,172,3.55,173,2.859,174,3.55,175,0.604,176,0.217,177,0.604,178,2.348,179,2.348,180,3.601,181,2.371,182,2.641,183,3.55,184,1.689,185,3.55,186,3.002,187,3.002,188,3.55,189,2.156,190,2.383,191,3.55,192,3.55,193,2.371,194,3.55,195,3.55,196,2.859,197,2.348,198,1.823,199,1.364,200,2.11,201,2.348,202,1.568,203,2.348,204,1.5,205,2.371,206,0.738,207,1.568,208,1.307,209,1.307,210,1.038,211,1.985,212,1.985,213,1.102,214,2.348,215,2.348,216,1.746,217,2.371,218,3.4,219,2.348,220,2.348,221,1.746,222,1.569,223,2.348,224,1.746,225,2.348,226,2.348,227,1.568,228,1.117,229,1.038,230,1.568,231,2.348,232,1.746,233,2.348,234,1.985,235,3.423,236,3.002,237,3.62,238,2.384,239,2.371,240,2.6,241,1.568,242,1.568,243,1.746,244,2.371,245,2.156,246,1.568,247,1.568,248,1.426,249,1.985,250,1.985,251,2.156,252,1.977,253,1.746,254,1.985,255,1.746,256,1.985]],["title/injectables/AddCourseService.html",[173,2.243,257,0.808]],["body/injectables/AddCourseService.html",[3,0.206,4,0.172,9,0.172,20,0.172,21,1.074,23,1.074,24,0.929,27,0.772,28,0.026,30,0.752,31,0.665,32,0.206,33,0.477,35,0.933,93,1.088,128,1.163,130,0.929,154,0.045,155,0.058,156,0.045,172,3.812,173,3.422,175,1.319,176,0.347,177,1.319,193,3.422,204,1.61,213,1.018,229,2.265,257,1.233,258,1.881,259,3.797,260,2.641,261,1.748,262,2.041,263,3.343,264,1.42,265,3.954,266,3.954,267,2.437,268,4.333,269,4.474,270,3.652,271,5.124,272,5.124,273,3.348,274,1.909,275,1.519,276,3.112,277,2.041,278,1.721,279,3.343,280,1.328,281,1.328,282,2.941,283,1.242,284,1.519,285,1.721,286,2.941,287,2.941,288,1.42,289,1.163,290,1.42,291,1.628,292,1.42,293,2.401,294,2.201,295,3.954,296,3.954,297,3.954]],["title/injectables/AddToCourseService.html",[257,0.808,298,2.243]],["body/injectables/AddToCourseService.html",[3,0.195,4,0.163,9,0.163,20,0.163,21,1.036,23,1.036,24,0.897,27,0.73,28,0.026,30,0.759,31,0.63,32,0.195,33,0.452,35,0.946,93,1.03,128,1.101,130,0.897,154,0.042,155,0.056,156,0.042,175,1.272,176,0.338,177,1.272,184,2.351,193,3.302,204,1.176,213,0.963,229,1.655,257,1.189,258,1.78,259,3.697,260,2.5,261,1.655,262,1.988,263,3.165,264,1.344,274,1.257,275,1.438,276,3.575,277,1.988,278,1.66,279,3.165,280,1.257,281,1.257,282,3.677,283,1.176,284,1.438,285,1.66,288,1.344,289,1.101,290,1.344,291,1.541,292,1.344,293,2.273,294,3.082,298,3.302,299,4.979,300,3.743,301,1.068,302,2.521,303,1.66,304,3.575,305,3.743,306,4.18,307,4.944,308,3.002,309,1.731,310,2.801,311,4.944,312,2.538,313,2.752,314,3.002,315,2.5,316,3.743,317,3.743,318,3.743,319,2.784]],["title/components/AppComponent.html",[0,0.482,135,0.987]],["body/components/AppComponent.html",[0,0.827,1,1.196,2,1.874,3,0.212,4,0.177,5,1.563,6,1.563,7,1.563,8,1.563,9,0.177,13,1.563,14,2.637,15,2.464,16,2.006,18,2.006,20,0.177,24,0.738,28,0.026,30,0.491,31,0.684,32,0.212,33,0.491,35,0.584,41,3.169,101,1.461,124,1.366,125,2.006,126,1.874,127,1.563,128,1.787,129,1.563,130,0.947,131,1.563,132,1.196,133,1.461,134,1.563,135,1.787,136,1.563,137,1.196,138,2.006,139,1.196,140,1.196,141,1.563,142,1.196,143,1.563,144,1.196,145,1.563,146,1.196,147,1.563,148,1.196,149,1.563,150,1.196,151,1.366,152,1.563,153,1.563,154,0.046,155,0.059,156,0.046,162,0.947,176,0.248,198,2.089,199,1.563,292,1.874,301,0.738,320,3.44,321,5.763,322,5.219,323,4.873,324,4.068]],["title/modules/AppModule.html",[325,2.498,326,2.243]],["body/modules/AppModule.html",[0,0.876,1,1.754,3,0.149,4,0.125,9,0.125,28,0.026,30,0.821,31,0.482,32,0.149,33,0.346,35,0.411,101,1.029,124,0.962,132,1.703,133,1.029,135,1.897,137,1.703,139,1.703,140,1.754,142,1.754,144,1.703,146,1.754,148,1.703,150,1.703,154,0.032,155,0.046,156,0.032,158,2.131,206,0.9,208,1.595,210,1.266,222,1.266,280,0.962,325,2.131,326,4.644,327,2.131,328,1.913,329,4.066,330,3.908,331,4.066,332,2.422,333,2.422,334,2.422,335,2.422,336,2.422,337,2.646,338,2.138,339,2.974,340,3.476,341,2.422,342,1.18,343,2.865,344,4.111,345,3.476,346,1.913,347,4.111,348,2.865,349,2.865,350,2.865,351,2.131,352,2.865,353,2.865,354,4.111,355,2.865,356,2.865,357,2.131,358,2.865,359,2.865,360,2.131,361,2.865,362,2.865,363,2.865,364,4.111,365,2.131,366,2.422,367,3.476,368,2.422,369,4.111,370,2.865,371,2.865,372,2.131,373,2.865,374,2.865,375,2.865,376,2.865,377,2.865,378,4.15,379,2.865,380,2.865,381,2.865,382,2.865,383,2.865,384,2.865,385,2.865,386,2.865,387,2.865,388,1.029,389,1.913,390,1.74,391,2.865,392,1.471,393,2.422,394,2.865,395,2.865,396,2.865]],["title/classes/AppPage.html",[33,0.405,397,2.498]],["body/classes/AppPage.html",[3,0.25,4,0.209,9,0.209,20,0.209,21,1.211,24,1.048,27,1.128,28,0.026,30,0.579,32,0.25,33,0.579,93,1.319,126,1.721,154,0.054,155,0.065,156,0.054,204,1.816,292,1.721,346,3.201,397,4.299,398,3.565,399,4.053,400,6.443,401,6.443,402,4.793,403,6.699,404,4.793,405,4.053,406,4.793,407,4.793,408,4.793]],["title/guards/AuthGuard.html",[392,1.724,409,2.498]],["body/guards/AuthGuard.html",[3,0.14,4,0.117,9,0.117,11,1.234,20,0.117,21,0.823,23,0.823,24,0.712,27,0.905,28,0.026,30,0.783,31,0.452,32,0.242,33,0.56,93,0.74,130,0.488,154,0.03,155,0.044,156,0.03,171,2.409,175,0.692,176,0.24,177,0.692,190,1.736,199,1.509,200,1.188,204,2.002,206,0.845,210,1.188,213,1.396,222,1.188,228,1.279,257,1.227,262,1.41,264,0.965,274,0.903,277,1.41,278,1.318,280,1.318,281,0.903,283,0.845,284,1.033,285,2.088,288,1.41,289,0.79,290,0.965,291,1.107,292,0.965,301,0.925,303,1.318,309,0.79,312,2.016,337,1.279,338,1.96,342,1.617,388,1.832,390,2.384,392,2.016,410,2.688,411,1.497,412,3.784,413,2.688,414,2.206,415,2.688,416,2.622,417,2.688,418,1.665,419,2.622,420,2.909,421,2.622,422,2.748,423,2.622,424,2.622,425,2.622,426,2.622,427,2.622,428,2.622,429,2.384,430,2.622,431,1.795,432,1.279,433,2.186,434,1.38,435,2.622,436,2.622,437,2.622,438,2.622,439,1.795,440,1.795,441,3.098,442,1.795,443,1.795,444,2.384,445,1.632,446,2.384,447,1.497,448,1.632,449,1.497,450,1.632,451,0.355,452,1.497,453,1.795,454,1.38,455,1.795,456,1.795,457,1.795,458,1.795,459,2.622,460,1.795,461,1.795,462,1.795,463,1.795,464,2.622,465,1.795,466,1.795,467,1.795,468,1.795,469,1.795,470,1.795,471,2.622,472,1.795,473,1.795,474,1.795,475,1.795,476,1.795,477,1.795,478,1.795,479,1.795,480,1.795,481,1.795,482,1.795,483,1.795,484,2.622,485,2.622,486,2.622,487,1.795,488,1.795,489,1.795,490,1.795,491,1.795,492,1.795,493,1.795,494,1.795,495,1.795,496,1.795,497,1.795,498,1.795,499,1.795,500,1.795,501,1.795,502,1.795,503,1.795,504,1.795,505,1.795,506,1.795,507,1.795,508,1.795,509,1.38,510,1.795,511,1.795,512,1.795,513,1.632,514,1.632]],["title/interceptors/AuthInterceptor.html",[337,1.597,515,2.839]],["body/interceptors/AuthInterceptor.html",[3,0.146,4,0.122,9,0.122,11,1.27,20,0.122,21,0.847,23,0.587,24,0.508,27,0.789,28,0.027,30,0.789,31,0.471,32,0.248,33,0.573,93,0.77,130,0.508,154,0.032,155,0.046,156,0.032,171,1.955,175,0.72,176,0.247,177,0.72,190,1.237,199,1.076,200,1.237,204,2.018,206,0.88,210,1.237,213,1.419,222,1.237,228,1.331,257,1.251,262,1.452,264,1.005,274,0.94,277,1.704,278,1.358,280,1.358,281,0.94,283,0.88,284,1.076,285,2.107,288,1.452,289,0.823,290,1.005,291,1.153,292,1.005,301,0.943,303,1.358,309,0.823,312,1.437,337,1.923,338,1.554,342,1.153,388,1.704,392,1.437,411,1.559,412,3.17,414,1.331,416,1.87,418,1.005,419,1.87,420,2.437,421,1.87,422,2.731,423,1.87,424,1.87,425,1.87,426,1.87,427,1.87,428,1.87,429,1.7,430,1.87,431,1.87,432,1.331,433,2.251,434,1.437,435,2.701,436,2.701,437,3.472,438,3.472,439,1.87,440,1.87,441,3.17,442,1.87,443,1.87,444,2.455,445,1.7,446,2.455,447,1.559,448,1.7,449,1.559,450,1.7,451,0.369,452,1.559,453,1.87,454,1.437,455,1.87,456,1.87,457,1.87,458,1.87,459,2.701,460,1.87,461,1.87,462,1.87,463,1.87,464,2.701,465,1.87,466,1.87,467,1.87,468,1.87,469,1.87,470,1.87,471,2.701,472,1.87,473,1.87,474,1.87,475,1.87,476,1.87,477,1.87,478,1.87,479,1.87,480,1.87,481,1.87,482,1.87,483,1.87,484,2.701,485,2.701,486,2.701,487,1.87,488,1.87,489,1.87,490,1.87,491,1.87,492,1.87,493,1.87,494,1.87,495,1.87,496,1.87,497,1.87,498,1.87,499,1.87,500,1.87,501,2.701,502,3.17,503,1.87,504,1.87,505,1.87,506,1.87,507,1.87,508,1.87,509,1.437,510,1.87,511,1.87,512,1.87,513,1.7,514,1.7,516,2.799,517,4.043,518,2.799,519,2.799]],["title/injectables/AuthenticationService.html",[257,0.808,338,1.29]],["body/injectables/AuthenticationService.html",[3,0.131,4,0.109,9,0.109,11,1.173,20,0.109,21,0.782,23,0.782,24,1.109,27,1.148,28,0.026,29,0.901,30,0.774,31,0.422,32,0.233,33,0.538,93,0.691,130,0.895,154,0.028,155,0.042,156,0.028,162,0.677,167,2.266,171,1.835,175,1.27,176,0.301,177,1.27,190,1.109,199,0.964,200,1.109,204,1.974,206,0.789,210,1.109,213,1.547,222,1.109,228,1.194,229,1.109,257,1.187,258,1.194,261,1.109,262,1.772,264,1.34,274,0.843,277,1.34,278,1.253,280,1.253,281,0.843,283,0.789,284,0.964,285,2.054,288,1.34,289,0.738,290,0.901,291,1.033,292,0.901,301,1.003,303,1.253,309,0.738,312,1.289,337,1.194,338,1.712,342,1.033,388,2.055,392,1.289,411,1.397,412,2.976,414,1.194,416,1.676,418,1.34,419,1.676,420,2.288,421,1.676,422,2.777,423,1.676,424,1.676,425,1.676,426,1.676,427,1.676,428,1.676,429,1.524,430,1.676,431,1.676,432,1.194,433,2.078,434,1.289,435,2.493,436,2.493,437,2.493,438,2.493,439,1.676,440,1.676,441,2.976,442,1.676,443,1.676,444,2.266,445,2.706,446,2.266,447,1.397,448,1.524,449,1.397,450,1.524,451,0.331,452,1.397,453,1.676,454,1.289,455,1.676,456,2.976,457,2.493,458,1.676,459,2.493,460,1.676,461,1.676,462,1.676,463,1.676,464,2.493,465,1.676,466,1.676,467,1.676,468,1.676,469,1.676,470,1.676,471,2.493,472,2.493,473,1.676,474,1.676,475,1.676,476,1.676,477,1.676,478,1.676,479,3.296,480,1.676,481,1.676,482,1.676,483,1.676,484,2.493,485,2.493,486,2.493,487,3.296,488,1.676,489,1.676,490,1.676,491,1.676,492,2.493,493,1.676,494,1.676,495,1.676,496,1.676,497,3.296,498,1.676,499,3.296,500,1.676,501,1.676,502,1.676,503,1.676,504,1.676,505,1.676,506,1.676,507,1.676,508,1.676,509,1.289,510,1.676,511,1.676,512,1.676,513,1.524,514,1.524,520,3.732,521,3.732,522,2.51,523,2.51,524,2.51,525,2.51,526,2.51,527,2.51,528,2.51,529,2.51,530,2.51,531,2.51]],["title/interfaces/Course.html",[35,0.482,451,0.443]],["body/interfaces/Course.html",[3,0.257,4,0.214,9,0.214,20,0.214,28,0.025,32,0.257,35,0.954,38,4.164,102,2.742,130,1.205,154,0.055,155,0.066,156,0.055,162,1.066,176,0.359,218,4.034,273,2.742,275,1.893,301,1.223,451,0.65,532,1.768,533,4.164,534,4.925]],["title/components/CourseHomeComponent.html",[0,0.482,137,0.987]],["body/components/CourseHomeComponent.html",[0,0.432,1,0.407,2,0.835,3,0.072,4,0.06,5,0.531,6,0.531,7,0.531,8,0.531,9,0.06,11,0.73,12,1.238,13,0.531,14,2.106,15,1.968,16,0.893,18,0.893,20,0.06,21,0.487,22,1.451,23,0.487,24,1.067,27,0.767,28,0.026,29,1.528,30,0.633,31,0.233,32,0.072,33,0.167,35,0.801,44,1.962,86,1.169,92,1.544,94,0.84,97,1.826,98,1.826,100,2.696,101,1.411,102,1.294,104,2.017,105,0.924,112,1.962,114,1.029,117,1.674,119,1.674,120,1.674,123,1.411,124,0.464,125,1.635,126,0.835,127,0.531,128,1.036,129,0.531,130,0.545,131,0.531,132,0.407,133,2.064,134,0.531,135,0.407,136,0.531,137,1.036,138,0.893,139,0.407,140,0.407,141,0.531,142,0.407,143,0.531,144,0.407,145,0.531,146,0.407,147,0.531,148,0.407,149,0.531,150,0.407,151,0.464,152,0.531,153,0.531,154,0.016,155,0.026,156,0.016,162,0.422,164,3.726,167,1.411,168,2.008,169,0.924,170,2.842,171,1.618,175,0.356,176,0.184,177,0.356,180,2.008,181,2.353,182,2.621,184,1.676,189,1.411,190,1.027,193,1.552,196,1.552,198,2.185,199,1.635,200,1.999,202,0.924,204,1.234,205,1.552,206,0.73,207,0.924,208,0.77,209,1.674,210,0.611,211,1.169,212,1.169,213,1.095,217,1.552,227,0.924,228,1.676,230,0.924,235,1.552,238,1.294,240,0.84,241,0.924,242,0.924,244,0.924,245,0.84,246,0.924,248,1.411,251,1.411,252,0.77,255,1.029,267,2.258,270,1.411,277,0.497,281,0.464,298,2.008,299,2.979,302,0.957,306,2.979,309,1.452,310,2.768,313,1.294,314,3.573,323,1.169,360,4.422,367,1.169,368,1.169,378,1.552,393,1.965,535,5.026,536,1.169,537,2.542,538,1.965,539,2.324,540,2.324,541,3.322,542,3.929,543,2.324,544,2.324,545,2.849,546,4.634,547,2.324,548,2.324,549,4.255,550,3.523,551,3.523,552,4.255,553,3.021,554,1.674,555,2.747,556,2.324,557,1.383,558,3.523,559,2.324,560,2.621,561,5.579,562,2.621,563,1.729,564,3.523,565,2.324,566,1.383,567,2.369,568,3.523,569,3.523,570,1.383,571,1.809,572,1.729,573,1.729,574,2.621,575,1.965,576,1.729,577,2.324,578,3.171,579,1.383,580,2.621,581,5.026,582,3.523,583,1.965,584,1.965,585,1.383,586,2.324,587,2.324,588,2.324,589,2.324,590,1.383,591,3.171,592,1.383,593,1.383,594,1.411,595,1.383,596,1.383,597,1.383,598,2.324,599,2.324,600,2.324,601,2.324,602,1.383,603,4.255,604,1.729,605,2.324,606,1.383,607,2.324,608,3.523,609,1.383,610,2.324,611,1.383,612,1.383,613,2.324,614,1.029,615,1.169,616,1.169,617,1.383,618,1.383,619,1.383,620,1.383,621,1.383,622,1.383,623,1.383,624,1.383,625,1.029,626,1.383,627,1.383,628,1.169,629,1.169,630,1.169,631,1.383,632,1.383,633,1.383,634,1.383,635,1.383,636,1.383,637,1.169,638,1.169,639,1.383,640,1.383,641,2.324,642,2.324,643,1.383,644,1.383,645,1.383,646,1.383,647,2.324,648,2.324,649,1.729,650,1.383,651,2.324,652,1.383,653,1.383,654,1.383,655,1.383,656,2.324,657,2.324,658,1.383,659,1.383,660,1.965,661,2.324,662,1.383,663,2.324,664,1.383,665,1.383,666,1.383,667,2.979,668,4.634,669,3.598,670,2.324,671,2.324,672,2.324,673,5.579,674,5.579,675,2.324,676,2.324,677,1.826,678,3.165,679,1.383,680,1.383,681,1.383,682,1.383,683,1.383,684,1.383,685,1.383,686,1.169,687,1.965,688,1.169,689,1.169,690,1.383,691,1.169]],["title/interfaces/CourseStatus.html",[315,2.243,451,0.443]],["body/interfaces/CourseStatus.html",[3,0.262,4,0.219,9,0.219,20,0.219,28,0.025,30,0.607,32,0.262,35,0.982,154,0.057,155,0.067,156,0.057,162,1.078,176,0.363,301,1.078,304,3.845,315,3.971,451,0.663,532,1.805,692,4.25,693,4.25,694,5.026,695,5.026]],["title/components/HomeComponent.html",[0,0.482,139,0.987]],["body/components/HomeComponent.html",[0,0.771,1,0.77,2,1.384,3,0.137,4,0.114,5,1.007,6,1.007,7,1.007,8,1.007,9,0.114,11,1.211,12,1.882,13,1.007,14,2.46,15,2.299,16,1.481,18,1.481,20,0.114,21,0.807,22,2.075,23,0.807,24,0.974,27,0.752,28,0.026,29,1.641,30,0.608,31,0.441,32,0.137,33,0.316,35,0.872,92,1.345,93,0.721,100,2.174,101,1.928,104,1.979,105,1.75,106,2.216,107,2.216,108,1.75,112,2.145,115,2.216,116,2.34,121,2.775,124,0.88,125,1.481,126,1.384,127,1.007,128,1.482,129,1.007,130,0.829,131,1.007,132,0.77,133,2.084,134,1.007,135,0.77,136,1.007,137,0.77,138,1.481,139,1.482,140,0.77,141,1.007,142,0.77,143,1.007,144,0.77,145,1.007,146,0.77,147,1.007,148,0.77,149,1.007,150,0.77,151,0.88,152,1.007,153,1.007,154,0.03,155,0.043,156,0.03,162,0.829,171,2.39,172,3.994,175,0.674,176,0.16,177,0.674,184,1.833,189,2.34,206,0.823,213,1.176,229,1.158,230,1.75,234,2.216,238,2.145,239,1.75,240,2.34,245,3.26,248,1.591,251,1.591,252,1.459,267,1.833,273,1.459,289,1.133,310,1.833,313,2.145,338,2.23,372,1.949,537,3.864,538,3.258,554,2.805,560,2.866,567,3.126,571,1.979,575,3.258,594,2.34,604,3.748,614,1.949,677,1.591,689,2.216,696,2.216,697,3.876,698,2.554,699,2.62,700,3.853,701,2.62,702,3.853,703,3.853,704,3.853,705,2.62,706,2.62,707,2.145,708,1.809,709,3.853,710,3.853,711,3.853,712,3.853,713,2.62,714,2.62,715,2.216,716,2.216,717,2.216,718,2.62,719,3.853,720,3.853,721,2.145,722,5.614,723,2.62,724,2.62,725,2.62,726,2.62,727,2.62,728,2.216,729,2.62,730,2.62,731,2.62,732,2.62,733,2.62,734,2.62,735,2.62,736,2.62,737,2.62,738,2.62,739,2.62,740,2.62,741,3.258,742,2.62,743,2.216,744,2.62,745,2.62,746,2.216,747,2.62,748,2.62,749,2.62,750,2.62]],["title/interfaces/JWTPayload.html",[451,0.443,452,1.869]],["body/interfaces/JWTPayload.html",[3,0.144,4,0.121,9,0.121,11,1.26,20,0.121,23,0.58,27,0.54,28,0.027,30,0.787,31,0.466,32,0.246,33,0.569,93,0.762,154,0.031,155,0.045,156,0.031,162,0.727,171,1.942,176,0.335,190,1.223,199,1.064,200,1.223,204,2.013,206,0.87,210,1.223,213,1.413,222,1.223,228,1.316,257,1.244,262,1.44,264,0.994,274,0.929,277,1.44,278,1.347,280,1.347,281,0.929,283,0.87,284,1.064,285,2.102,288,1.44,289,0.814,290,0.994,291,1.14,292,0.994,301,1.097,303,1.922,309,1.521,312,1.421,337,1.316,338,1.541,342,1.14,388,1.693,392,1.421,411,1.541,412,3.15,414,1.316,416,1.849,418,0.994,419,1.849,420,2.422,421,1.849,422,2.724,423,1.849,424,1.849,425,1.849,426,1.849,427,1.849,428,1.849,429,1.681,430,1.849,431,1.849,432,1.316,433,2.233,434,1.421,435,2.679,436,2.679,437,2.679,438,2.679,439,1.849,440,1.849,441,3.15,442,1.849,443,1.849,444,2.435,445,1.681,446,2.435,447,1.541,448,1.681,449,1.541,450,1.681,451,0.365,452,2.233,453,3.454,454,2.655,455,3.454,456,1.849,457,1.849,458,1.849,459,2.679,460,1.849,461,1.849,462,1.849,463,1.849,464,2.679,465,1.849,466,1.849,467,1.849,468,1.849,469,1.849,470,1.849,471,2.679,472,1.849,473,1.849,474,1.849,475,1.849,476,1.849,477,1.849,478,1.849,479,1.849,480,1.849,481,1.849,482,1.849,483,1.849,484,2.679,485,2.679,486,2.679,487,1.849,488,1.849,489,1.849,490,1.849,491,1.849,492,1.849,493,1.849,494,1.849,495,1.849,496,1.849,497,1.849,498,1.849,499,1.849,500,1.849,501,1.849,502,1.849,503,1.849,504,1.849,505,1.849,506,1.849,507,1.849,508,1.849,509,1.421,510,1.849,511,1.849,512,1.849,513,1.681,514,1.681,532,0.994]],["title/interfaces/Login.html",[388,1.206,451,0.443]],["body/interfaces/Login.html",[3,0.264,4,0.22,9,0.22,20,0.22,28,0.025,32,0.264,154,0.057,155,0.067,156,0.057,162,1.082,176,0.364,301,1.23,309,1.928,388,2.141,451,0.666,532,1.814,751,4.271,752,3.981]],["title/components/LoginComponent.html",[0,0.482,140,0.987]],["body/components/LoginComponent.html",[0,0.556,1,0.589,2,1.128,3,0.105,4,0.087,5,0.77,6,0.77,7,0.77,8,0.77,9,0.087,11,0.987,12,1.596,13,0.77,14,2.326,15,2.173,16,1.207,18,1.207,20,0.087,21,0.658,22,1.807,23,0.658,24,0.993,27,0.613,28,0.026,29,1.128,30,0.638,31,0.337,32,0.105,33,0.242,35,0.556,72,1.694,92,1.613,94,1.216,97,1.908,98,1.908,100,2.74,101,1.816,104,2.254,105,1.338,108,1.338,110,1.216,112,2.158,114,1.49,117,1.749,119,2.443,120,2.443,121,1.216,123,1.908,124,0.673,125,1.207,126,1.128,127,0.77,128,1.291,129,0.77,130,0.703,131,0.77,132,0.589,133,0.719,134,0.77,135,0.589,136,0.77,137,0.589,138,1.207,139,0.589,140,1.291,141,0.77,142,0.589,143,0.77,144,0.589,145,0.77,146,0.589,147,0.77,148,0.589,149,0.77,150,0.589,151,0.673,152,0.77,153,0.77,154,0.023,155,0.049,156,0.023,162,0.57,164,3.184,165,3.546,166,3.265,167,1.908,168,2.589,169,1.338,170,3.378,171,2.178,175,0.809,176,0.237,177,0.516,180,3.657,181,3.184,187,2.657,189,2.354,190,1.94,196,2.589,198,1.99,199,1.207,200,2.107,202,1.338,204,1.498,205,2.098,206,0.629,207,1.338,208,1.115,209,1.115,210,0.885,213,1.227,216,1.49,217,2.098,221,1.49,222,1.389,224,2.337,227,1.338,228,1.494,229,2.338,232,1.49,235,3.184,238,2.158,239,2.098,240,2.354,241,1.338,242,1.338,243,1.49,245,2.665,246,2.098,247,1.338,248,1.216,251,1.908,252,2.158,267,2.406,285,0.673,301,0.57,309,1.402,338,2.032,372,1.49,388,2.244,420,1.029,514,1.216,553,2.931,554,2.158,562,2.337,563,2.337,571,2.254,580,2.337,591,2.931,594,1.908,614,1.49,649,2.337,660,1.694,677,1.908,678,1.49,686,1.694,688,3.277,698,1.494,708,1.392,728,1.694,741,2.657,743,1.694,752,2.895,753,1.694,754,3.876,755,3.142,756,3.876,757,3.876,758,4.389,759,4.389,760,3.142,761,2.003,762,2.003,763,2.657,764,2.657,765,3.876,766,3.142,767,3.277,768,3.142,769,3.142,770,3.142,771,2.657,772,1.908,773,1.908,774,2.657,775,2.003,776,3.711,777,3.142,778,2.003,779,2.337,780,2.003,781,2.003,782,1.694,783,2.003,784,1.694,785,2.003,786,2.003,787,1.694,788,2.003,789,1.49,790,2.003,791,2.003,792,1.694,793,1.694,794,1.694,795,1.694,796,1.694,797,2.003,798,2.883,799,2.003,800,2.003,801,2.003,802,2.003,803,1.694,804,2.003,805,2.003,806,2.003,807,2.003,808,2.003,809,2.003,810,2.003,811,3.142,812,3.142,813,3.142,814,2.003,815,2.003,816,2.003,817,2.003,818,2.003,819,2.003,820,2.003,821,2.003]],["title/components/LogoutComponent.html",[0,0.482,142,0.987]],["body/components/LogoutComponent.html",[0,0.779,1,1.058,2,1.729,3,0.188,4,0.157,5,1.383,6,1.383,7,1.383,8,1.383,9,0.157,11,1.513,12,2.235,13,1.383,14,2.593,15,2.423,16,1.851,18,1.851,20,0.157,21,1.009,22,2.387,23,1.009,24,0.874,27,0.702,28,0.026,29,1.729,30,0.655,31,0.606,32,0.188,33,0.435,35,0.517,101,1.292,124,1.209,125,1.851,126,1.729,127,1.383,128,1.704,129,1.383,130,0.985,131,1.383,132,1.058,133,1.292,134,1.383,135,1.058,136,1.383,137,1.058,138,1.851,139,1.058,140,1.058,141,1.383,142,1.704,143,1.383,144,1.058,145,1.383,146,1.058,147,1.383,148,1.058,149,1.383,150,1.058,151,1.209,152,1.383,153,1.383,154,0.041,155,0.054,156,0.041,171,2.387,175,0.926,176,0.22,177,0.926,190,2.129,206,1.131,213,1.24,342,1.983,388,1.729,390,3.669,414,2.291,513,2.186,629,3.043,772,2.925,773,2.925,822,3.043,823,5.428,824,4.816,825,3.599,826,3.599,827,3.599,828,4.816,829,3.583,830,4.816,831,4.073,832,3.599,833,3.599,834,3.043,835,4.816]],["title/injectables/LogoutService.html",[257,0.808,414,1.597]],["body/injectables/LogoutService.html",[3,0.223,4,0.186,9,0.186,20,0.186,21,1.128,23,1.128,24,0.977,27,0.834,28,0.026,29,1.534,30,0.747,31,0.719,32,0.223,33,0.516,93,1.175,130,0.775,154,0.048,155,0.061,156,0.048,175,1.099,176,0.329,177,1.099,213,1.099,257,1.295,258,2.032,261,1.888,262,2.222,264,1.933,267,2.561,274,1.435,277,1.534,278,1.808,280,1.435,281,1.435,283,1.342,284,1.642,285,1.808,288,1.534,289,1.256,290,1.534,291,1.759,292,1.534,342,2.217,390,3.758,414,2.561,429,3.269,772,3.269,773,3.269,829,4.005,836,3.178,837,4.272,838,4.272,839,3.178,840,3.612,841,4.272,842,4.272,843,4.272,844,4.272]],["title/interfaces/Message.html",[451,0.443,545,1.484]],["body/interfaces/Message.html",[3,0.22,4,0.183,9,0.183,20,0.183,28,0.026,32,0.22,35,0.84,154,0.047,155,0.06,156,0.047,162,0.967,176,0.419,301,1.21,302,2.411,303,2.179,310,2.536,314,3.238,418,2.21,451,0.555,532,1.511,545,2.913,578,3.91,594,3.738,698,2.785,845,3.558,846,5.854,847,5.854,848,5.854,849,2.969,850,3.562,851,5.333,852,4.208,853,4.208,854,4.208,855,4.208,856,4.208,857,4.208,858,4.208,859,4.208,860,4.208,861,3.558]],["title/interfaces/MessageSent.html",[451,0.443,862,2.243]],["body/interfaces/MessageSent.html",[3,0.258,4,0.215,9,0.215,20,0.215,28,0.025,32,0.258,93,1.358,117,2.749,154,0.056,155,0.066,156,0.056,162,1.067,176,0.359,275,1.897,301,1.067,418,2.113,451,0.776,532,1.773,545,2.778,637,5.314,638,5.314,667,4.175,668,4.175,669,4.175,707,2.749,862,3.929,863,4.175,864,4.937,865,4.937]],["title/injectables/MessageService.html",[257,0.808,555,2.039]],["body/injectables/MessageService.html",[3,0.158,4,0.132,9,0.132,20,0.132,21,0.895,23,0.895,24,0.977,27,0.967,28,0.026,30,0.732,31,0.509,32,0.158,33,0.365,35,0.773,93,0.832,128,0.889,130,0.977,151,1.435,154,0.034,155,0.048,156,0.034,175,1.386,176,0.347,177,1.386,184,2.561,204,1.852,213,0.778,229,1.336,230,2.019,257,1.028,258,1.438,261,1.336,262,1.779,264,1.086,268,4.552,269,4.005,270,3.758,273,2.997,274,1.015,275,1.904,276,2.594,277,1.933,278,1.435,280,1.015,281,1.015,283,0.95,284,1.162,285,1.808,288,1.086,289,0.889,290,1.086,291,1.245,292,1.086,293,1.836,294,3.162,301,0.775,302,2.682,303,1.98,308,2.594,314,2.594,319,2.249,545,2.957,546,4.985,555,2.594,576,3.178,578,2.853,581,4.552,583,3.612,594,2.594,616,2.556,708,1.534,721,2.378,789,4.385,849,2.997,850,3.596,862,3.309,866,2.249,867,4.272,868,4.272,869,4.272,870,3.023,871,3.023,872,3.023,873,4.272,874,3.023,875,3.023,876,3.612,877,3.023,878,3.023,879,4.272,880,4.272,881,2.019,882,3.023,883,3.023,884,3.023,885,4.272,886,3.612,887,3.023,888,3.023,889,3.023,890,3.023,891,3.023,892,3.023,893,3.023,894,3.023,895,3.023,896,3.023,897,3.023]],["title/interfaces/ReadBy.html",[451,0.443,881,2.243]],["body/interfaces/ReadBy.html",[3,0.266,4,0.222,9,0.222,20,0.222,28,0.024,32,0.266,154,0.057,155,0.067,156,0.057,162,1.087,176,0.311,275,1.956,276,3.091,301,1.087,308,3.091,309,1.932,451,0.79,532,1.828,545,2.25,850,3.4,881,4.001,898,4.305,899,4.305,900,4.305]],["title/components/ReadComponent.html",[0,0.482,144,0.987]],["body/components/ReadComponent.html",[0,0.725,1,0.922,2,1.573,3,0.164,4,0.136,5,1.204,6,1.204,7,1.204,8,1.204,9,0.136,11,1.377,12,2.08,13,1.204,14,2.539,15,2.372,16,1.684,18,1.684,20,0.136,21,0.918,22,2.252,23,0.657,24,0.992,27,0.612,28,0.026,29,1.573,30,0.695,31,0.527,32,0.164,33,0.378,35,0.45,92,1.609,100,1.491,101,1.125,102,1.745,104,1.609,124,1.052,125,1.684,126,1.573,127,1.204,128,1.608,129,1.204,130,0.916,131,1.204,132,0.922,133,1.125,134,1.204,135,0.922,136,1.204,137,0.922,138,1.684,139,0.922,140,0.922,141,1.204,142,0.922,143,1.204,144,1.608,145,1.204,146,0.922,147,1.204,148,0.922,149,1.204,150,0.922,151,1.696,152,1.204,153,1.204,154,0.035,155,0.049,156,0.035,162,0.795,175,0.807,176,0.309,177,0.807,184,2.084,206,0.985,209,2.439,213,1.128,238,1.745,256,2.65,261,1.385,262,1.814,264,1.125,278,1.052,280,1.052,283,0.985,293,1.903,302,2.252,308,2.661,378,2.926,509,1.609,545,2.841,553,4.089,555,3.495,572,3.259,573,3.259,574,3.259,604,4.069,615,2.65,625,2.331,628,2.65,691,2.65,707,3.045,850,4.171,899,4.625,901,2.65,902,5.052,903,4.381,904,4.381,905,4.381,906,4.381,907,3.134,908,4.381,909,3.134,910,2.65,911,3.134,912,3.134,913,3.134,914,3.134,915,3.134,916,3.134,917,2.65,918,4.381,919,3.134]],["title/components/RegisterComponent.html",[0,0.482,146,0.987]],["body/components/RegisterComponent.html",[0,0.534,1,0.553,2,1.073,3,0.098,4,0.082,5,0.723,6,0.723,7,0.723,8,0.723,9,0.082,11,0.939,12,1.532,13,0.723,14,2.291,15,2.141,16,1.149,18,1.149,20,0.082,21,0.626,22,1.745,23,0.626,24,1.026,27,0.583,28,0.026,29,1.073,30,0.558,31,0.316,32,0.098,33,0.227,35,0.27,44,1.047,92,1.535,94,2.259,97,1.815,98,1.815,100,2.548,101,1.522,102,1.664,104,1.535,108,1.256,110,1.142,112,1.664,116,1.142,117,1.664,119,2.359,120,2.359,121,1.142,123,1.142,124,0.631,125,1.149,126,1.073,127,0.723,128,1.36,129,0.723,130,0.675,131,0.723,132,0.553,133,0.675,134,0.723,135,0.553,136,0.723,137,0.553,138,1.149,139,0.553,140,0.553,141,0.723,142,0.553,143,0.723,144,0.553,145,0.723,146,1.246,147,0.723,148,0.553,149,0.723,150,0.553,151,0.631,152,0.723,153,0.723,154,0.021,155,0.042,156,0.021,162,0.542,164,3.088,165,3.439,166,3.152,167,1.815,168,2.484,169,1.256,170,3.288,171,2.125,175,0.484,176,0.227,177,0.484,180,3.855,181,1.996,182,2.223,184,1.422,189,1.142,190,1.321,196,2.83,198,1.91,199,1.429,200,2.176,202,1.256,204,1.683,205,2.83,206,0.591,207,1.256,208,1.047,209,2.359,210,0.831,213,1.19,216,1.399,217,2.83,218,3.505,221,1.399,222,1.321,224,2.223,227,1.256,228,0.894,229,0.831,232,1.399,235,3.686,236,2.527,237,3.145,238,2.071,239,1.996,240,1.815,241,1.256,242,1.256,243,1.399,244,1.256,245,1.142,246,1.256,247,1.256,248,1.142,249,1.59,250,1.59,251,1.142,252,2.071,253,1.399,254,1.59,255,1.399,267,1.422,285,1.004,304,1.815,309,1.36,310,0.894,338,1.149,339,2.65,357,1.399,388,1.522,389,3.577,420,0.966,454,2.374,545,1.321,562,2.223,563,2.223,571,2.176,591,1.996,649,2.223,677,1.142,708,1.073,752,3.134,763,2.527,764,2.527,767,1.59,774,2.527,776,4.163,779,2.767,784,3.145,787,1.59,792,1.59,793,1.59,794,1.59,795,1.59,796,3.91,798,2.223,803,1.59,831,2.527,834,1.59,920,1.399,921,3.719,922,2.989,923,2.989,924,2.989,925,3.719,926,3.719,927,2.989,928,1.881,929,1.881,930,2.989,931,3.583,932,2.989,933,2.989,934,2.989,935,4.782,936,2.989,937,3.583,938,3.91,939,4.237,940,2.989,941,2.989,942,2.989,943,2.989,944,1.881,945,2.989,946,1.881,947,2.989,948,2.989,949,1.881,950,4.237,951,1.881,952,1.881,953,1.881,954,1.881,955,2.989,956,1.59,957,1.59,958,1.59,959,1.881,960,1.59,961,1.59,962,1.59,963,1.59,964,1.881,965,1.59,966,1.881,967,1.881,968,2.989,969,1.881,970,1.881,971,1.881,972,1.881,973,1.881,974,1.881,975,1.881,976,1.881,977,1.881,978,1.881,979,1.881,980,1.881,981,1.881,982,1.881,983,1.881,984,2.989,985,1.881,986,1.881,987,2.989,988,1.881,989,1.881,990,1.881,991,2.989,992,1.881,993,1.881,994,1.881,995,1.881,996,2.989,997,1.881]],["title/components/TopBarComponent.html",[0,0.482,148,0.987]],["body/components/TopBarComponent.html",[0,0.733,1,0.941,2,1.596,3,0.167,4,0.139,5,1.23,6,1.23,7,1.23,8,1.23,9,0.139,11,1.397,12,2.104,13,1.23,14,2.547,15,2.38,16,1.708,18,1.708,20,0.139,21,0.932,22,2.273,23,1.07,24,1.052,27,0.868,28,0.026,29,1.834,30,0.617,31,0.538,32,0.167,33,0.386,35,0.459,41,2.7,59,4.667,101,2.254,119,1.782,120,1.782,124,1.075,125,1.708,126,1.596,127,1.23,128,1.623,129,1.23,130,0.806,131,1.23,132,0.941,133,1.149,134,1.23,135,0.941,136,1.23,137,0.941,138,1.708,139,0.941,140,0.941,141,1.23,142,0.941,143,1.23,144,0.941,145,1.23,146,0.941,147,1.23,148,1.623,149,1.23,150,0.941,151,1.075,152,1.23,153,1.23,162,0.806,176,0.195,198,1.643,199,1.23,252,1.782,253,2.381,267,2.115,277,1.149,281,1.075,304,2.7,312,2.283,342,1.831,351,4.466,388,1.596,389,2.969,390,2.7,418,1.149,420,2.834,571,2.283,677,1.943,708,1.982,772,2.7,773,2.7,779,2.381,829,3.307,931,4.667,998,5.076,999,2.706,1000,4.446,1001,5.108,1002,4.446,1003,5.52,1004,4.446,1005,5.52,1006,4.446,1007,3.2,1008,4.446,1009,4.446,1010,3.2,1011,3.2,1012,3.2,1013,3.2,1014,2.381,1015,3.2,1016,3.2,1017,3.2,1018,3.2,1019,3.2,1020,3.2]],["title/classes/User.html",[33,0.405,708,1.206]],["body/classes/User.html",[3,0.248,4,0.207,9,0.207,20,0.207,24,1.165,28,0.025,32,0.248,33,0.573,154,0.053,155,0.065,156,0.053,162,1.042,176,0.392,186,4.014,275,1.824,301,1.212,309,1.817,313,2.643,398,3.531,418,2.063,454,3.173,567,2.643,698,2.939,707,2.643,708,2.219,752,3.752,1021,4.014,1022,4.746,1023,4.746,1024,4.746,1025,4.746,1026,4.746]],["title/interfaces/UserMy.html",[432,1.597,451,0.443]],["body/interfaces/UserMy.html",[3,0.22,4,0.183,9,0.183,20,0.183,28,0.026,30,0.508,32,0.22,35,0.766,154,0.047,155,0.06,156,0.047,162,0.967,176,0.376,275,1.617,301,1.062,302,2.196,303,1.966,310,2.536,312,2.738,313,3.427,314,3.238,418,2.102,422,2.721,432,2.536,451,0.772,532,1.511,567,3.427,697,4.334,698,2.928,707,2.969,708,2.395,721,2.969,849,3.259,1027,2.81,1028,3.558,1029,5.333,1030,5.333,1031,5.333,1032,5.333,1033,5.333,1034,4.509,1035,5.333]],["title/interfaces/UserMyList.html",[451,0.443,1036,2.243]],["body/interfaces/UserMyList.html",[3,0.237,4,0.198,9,0.198,20,0.198,28,0.026,30,0.549,32,0.237,35,0.908,44,3.117,154,0.051,155,0.063,156,0.051,162,1.015,176,0.397,275,1.748,301,1.179,303,2.037,309,1.783,418,2.178,422,2.797,451,0.8,532,1.633,697,4.227,698,3.01,708,2.272,721,3.117,849,3.377,900,3.846,1036,3.739,1037,3.846,1038,4.164]],["title/interfaces/UserReal.html",[451,0.443,1039,2.243]],["body/interfaces/UserReal.html",[3,0.241,4,0.201,9,0.201,20,0.201,28,0.026,32,0.241,154,0.052,155,0.064,156,0.052,162,1.024,176,0.405,301,1.271,302,2.619,303,2.049,309,1.87,451,0.609,454,3.265,532,1.656,752,3.862,1027,3.081,1039,3.771,1040,3.901,1041,6.359,1042,6.359]],["title/injectables/UserService.html",[257,0.808,339,1.724]],["body/injectables/UserService.html",[3,0.161,4,0.135,9,0.135,20,0.135,21,0.91,23,0.648,24,0.987,27,0.979,28,0.026,30,0.752,31,0.521,32,0.161,33,0.374,35,0.92,41,2.637,93,0.851,128,1.475,130,0.987,151,1.458,154,0.035,155,0.049,156,0.035,175,1.4,176,0.35,177,1.4,184,2.587,204,1.709,229,1.368,257,1.045,258,1.472,261,1.368,262,1.953,264,1.559,269,4.046,270,3.607,273,3.028,274,1.458,275,1.928,277,1.953,278,1.458,280,1.039,281,1.039,283,0.972,284,1.189,285,1.458,288,1.111,289,0.91,290,1.111,291,1.274,292,1.111,294,3.028,301,0.788,302,2.564,303,1.827,309,1.685,319,2.302,339,2.23,389,3.633,432,1.472,433,1.723,509,1.589,567,2.418,576,3.23,708,2.421,721,2.418,782,2.617,849,2.418,876,3.672,886,2.617,1014,2.302,1036,2.067,1038,4.046,1043,2.302,1044,4.343,1045,4.343,1046,3.095,1047,3.095,1048,3.095,1049,4.343,1050,5.44,1051,4.343,1052,4.343,1053,3.672,1054,3.23,1055,3.095,1056,3.095,1057,4.343,1058,4.343,1059,4.343,1060,3.095,1061,3.095,1062,3.095,1063,2.302,1064,2.302,1065,3.095,1066,3.095,1067,4.343,1068,3.095,1069,3.095,1070,3.095,1071,3.095]],["title/interfaces/UserToken.html",[434,1.724,451,0.443]],["body/interfaces/UserToken.html",[3,0.245,4,0.204,9,0.204,20,0.204,28,0.025,30,0.566,32,0.245,35,0.819,154,0.053,155,0.064,156,0.053,162,1.035,176,0.4,301,1.189,303,2.064,418,2.207,422,2.827,434,2.929,451,0.619,532,1.684,697,4.272,698,3.042,708,2.296,849,3.422,1027,3.132,1072,3.966,1073,6.147,1074,4.69]],["title/components/UsersComponent.html",[0,0.482,150,0.987]],["body/components/UsersComponent.html",[0,0.665,1,0.789,2,1.408,3,0.14,4,0.117,5,1.032,6,1.032,7,1.032,8,1.032,9,0.117,11,1.232,12,1.908,13,1.032,14,2.471,15,2.309,16,1.507,18,1.507,20,0.117,21,0.822,22,2.099,23,0.563,24,1.027,27,0.765,28,0.026,29,1.664,30,0.655,31,0.452,32,0.14,33,0.324,35,0.84,44,2.184,93,0.739,100,1.866,101,0.964,122,2.27,123,1.63,124,0.902,125,1.507,126,1.408,127,1.032,128,1.499,129,1.032,130,0.925,131,1.032,132,0.789,133,0.964,134,1.032,135,0.789,136,1.032,137,0.789,138,1.507,139,0.789,140,0.789,141,1.032,142,0.789,143,1.032,144,0.789,145,1.032,146,0.789,147,1.032,148,0.789,149,1.032,150,1.499,151,1.821,152,1.032,153,1.032,154,0.03,155,0.044,156,0.03,162,0.711,175,1.009,176,0.346,177,1.009,206,0.844,209,2.184,213,1.009,261,1.187,262,1.664,264,0.964,267,2.425,274,0.902,275,1.032,276,3.095,278,1.317,280,0.902,283,0.844,285,0.902,288,0.964,289,0.789,290,0.964,293,1.63,294,1.495,301,0.711,302,1.615,308,2.382,309,1.665,310,2.425,313,2.184,339,3.14,357,1.997,378,2.62,418,0.964,509,1.379,541,3.317,553,3.906,560,2.918,567,3.153,571,2.014,572,2.918,573,2.918,574,2.918,584,2.27,625,1.997,630,2.27,698,2.425,715,2.27,716,2.27,717,2.27,721,2.58,771,3.317,772,2.382,773,2.382,798,2.918,861,2.27,910,2.27,917,2.27,1038,2.918,1053,4.789,1054,2.918,1075,1.997,1076,4.635,1077,3.922,1078,5.097,1079,3.922,1080,3.922,1081,2.685,1082,2.685,1083,3.922,1084,3.922,1085,2.685,1086,3.922,1087,3.922,1088,3.922,1089,3.922,1090,3.922,1091,3.922,1092,3.922,1093,2.685,1094,2.685,1095,3.922,1096,2.685,1097,2.685,1098,2.685,1099,2.685,1100,2.685,1101,5.097,1102,2.685,1103,2.685]],["title/injectables/UserwhoService.html",[257,0.808,554,1.869]],["body/injectables/UserwhoService.html",[3,0.206,4,0.172,9,0.172,20,0.172,21,1.072,23,1.072,24,1.09,27,1.108,28,0.026,30,0.77,31,0.664,32,0.206,33,0.476,35,0.566,93,1.086,130,0.928,154,0.044,155,0.058,156,0.044,175,1.317,176,0.347,177,1.317,204,1.784,213,1.016,257,1.231,258,1.877,261,1.744,262,2.158,264,1.837,274,1.718,277,1.417,278,1.718,280,1.325,281,1.325,282,2.935,283,1.608,284,1.516,285,2.091,287,2.935,288,1.417,289,1.16,290,1.417,291,1.625,292,1.417,294,2.197,302,2.107,303,1.718,304,3.107,433,2.197,554,2.849,1039,2.636,1064,2.935,1104,2.935,1105,6.009,1106,3.946,1107,3.946,1108,3.946,1109,3.946,1110,3.946,1111,3.946,1112,2.935,1113,5.117,1114,3.946,1115,3.946,1116,3.946,1117,5.117,1118,3.946]],["title/coverage.html",[1119,3.886]],["body/coverage.html",[0,0.911,1,0.82,9,0.121,10,2.357,28,0.026,33,0.487,35,0.4,110,2.448,116,4.194,132,0.82,135,0.82,137,0.82,139,0.82,140,0.82,142,0.82,144,0.82,146,0.82,148,0.82,150,0.82,154,0.031,155,0.045,156,0.031,157,2.357,158,2.073,159,2.357,173,1.862,176,0.17,247,1.862,257,1.423,259,3.676,260,3.676,274,2.034,283,0.876,286,2.073,289,0.82,298,1.862,315,1.862,320,2.357,337,1.326,338,1.071,339,1.431,351,2.073,360,2.073,388,1.001,392,1.431,397,2.073,399,2.357,409,2.073,411,3.294,414,1.326,432,1.326,434,1.431,447,1.552,449,1.552,451,0.837,452,1.552,515,2.357,533,2.357,535,2.357,536,2.357,545,1.232,554,1.552,555,1.693,571,3.471,678,2.073,687,4.004,692,2.357,693,2.357,696,2.357,708,1.001,746,4.004,751,2.357,753,2.357,822,2.357,836,3.522,839,2.073,845,2.357,862,1.862,863,2.357,866,2.999,881,1.862,898,2.357,901,2.357,920,3.522,998,2.357,999,2.357,1021,2.357,1027,3.163,1028,2.357,1036,1.862,1037,2.357,1039,1.862,1040,2.357,1043,3.522,1063,2.073,1072,2.357,1075,2.999,1104,3.522,1112,2.073,1119,2.357,1120,2.787,1121,2.787,1122,2.787,1123,5.504,1124,5.916,1125,5.737,1126,2.787,1127,2.787,1128,2.787,1129,2.787,1130,2.787,1131,2.787,1132,2.787,1133,2.787,1134,2.787,1135,2.787,1136,2.787,1137,4.031,1138,2.787,1139,2.787,1140,2.787,1141,2.787,1142,2.787,1143,4.735,1144,2.787,1145,2.787,1146,2.357,1147,4.735,1148,2.357,1149,6.68,1150,2.787,1151,4.031,1152,2.357,1153,2.787,1154,2.787,1155,2.787,1156,2.357,1157,3.409,1158,2.357,1159,3.409,1160,2.357,1161,2.357,1162,2.787,1163,2.787]],["title/dependencies.html",[328,2.7,1164,2.798]],["body/dependencies.html",[28,0.026,31,0.738,154,0.049,155,0.062,156,0.049,206,1.378,208,2.442,281,1.473,328,2.93,330,4.438,345,4.628,346,3.656,365,3.263,366,3.709,422,1.939,444,3.324,445,3.324,446,2.664,1014,3.263,1165,4.386,1166,6.781,1167,4.386,1168,5.474,1169,4.386,1170,4.386,1171,4.386,1172,4.386,1173,4.386,1174,4.386,1175,4.386,1176,4.386,1177,4.386,1178,4.386,1179,4.386,1180,4.386,1181,4.386,1182,4.386,1183,4.386,1184,4.386,1185,4.386,1186,4.386,1187,4.386,1188,4.386,1189,4.386,1190,4.386,1191,4.386,1192,4.386,1193,4.386,1194,4.386,1195,4.386,1196,4.386,1197,4.386,1198,4.386]],["title/index.html",[20,0.122,1199,2.798,1200,2.798]],["body/index.html",[0,0.856,4,0.191,15,1.571,28,0.02,36,4.622,41,2.658,130,0.794,154,0.049,155,0.062,156,0.049,218,2.658,289,1.287,342,1.802,365,4.945,405,3.701,591,2.923,1034,3.701,1054,4.066,1201,4.377,1202,5.961,1203,5.961,1204,4.377,1205,4.377,1206,4.377,1207,5.466,1208,6.426,1209,4.377,1210,4.377,1211,4.377,1212,4.377,1213,4.377,1214,4.377,1215,4.377,1216,4.377,1217,4.377,1218,5.961,1219,5.961,1220,4.377,1221,6.426,1222,4.377,1223,4.377,1224,4.377,1225,4.377,1226,4.377,1227,3.701,1228,5.466,1229,5.466,1230,6.243,1231,4.377,1232,5.466,1233,4.377,1234,6.243,1235,4.377,1236,4.377,1237,5.961,1238,4.377,1239,4.377,1240,4.377]],["title/modules.html",[327,3.418]],["body/modules.html",[28,0.023,154,0.061,155,0.07,156,0.061,326,3.616,327,4.027,346,3.616,1241,5.413,1242,5.413,1243,5.413]],["title/overview.html",[1244,3.886]],["body/overview.html",[1,1.704,2,1.479,28,0.026,124,1.383,132,1.704,135,1.929,137,1.704,139,1.704,140,1.704,142,1.704,144,1.704,146,1.704,148,1.704,150,1.704,154,0.046,155,0.059,156,0.046,244,2.752,258,1.96,325,3.914,326,4.744,328,2.752,329,3.484,330,3.064,331,3.484,332,3.484,333,3.484,334,3.484,335,3.484,336,3.484,337,2.757,338,2.227,339,2.976,340,4.449,341,3.484,342,1.696,398,3.064,409,3.064,532,1.479,1244,3.484,1245,4.449,1246,5.261,1247,4.12]],["title/miscellaneous/variables.html",[1248,2.366,1249,3.418]],["body/miscellaneous/variables.html",[20,0.128,28,0.026,44,1.643,52,2.495,93,1.692,154,0.033,155,0.055,156,0.033,176,0.415,198,3.482,199,2.606,200,1.304,218,2.55,222,1.856,259,2.804,260,3.758,270,1.792,273,3.534,274,2.239,278,2.065,283,1.319,284,1.134,286,3.123,287,2.195,288,2.208,289,1.808,290,2.208,301,0.535,310,1.403,411,1.643,422,1.856,447,2.338,448,1.792,449,2.338,450,1.792,578,1.971,580,2.195,707,1.643,789,3.123,836,2.195,839,3.123,840,2.495,866,2.195,920,2.195,935,2.495,937,3.551,938,4.133,956,2.495,957,2.495,958,2.495,960,2.495,961,2.495,962,2.495,963,2.495,965,2.495,1043,2.195,1063,3.123,1064,3.123,1075,2.195,1104,2.195,1112,3.123,1146,3.551,1148,3.551,1152,2.495,1156,2.495,1157,4.503,1158,2.495,1159,2.495,1160,3.551,1161,3.551,1227,3.551,1245,2.495,1248,2.495,1249,2.495,1250,2.951,1251,4.199,1252,4.888,1253,2.951,1254,2.951,1255,2.951,1256,4.199,1257,2.951,1258,4.888,1259,4.199,1260,4.199,1261,4.199,1262,2.951,1263,2.951,1264,2.951,1265,2.951,1266,2.951,1267,2.951,1268,2.951,1269,2.951,1270,2.951,1271,2.951,1272,2.951,1273,2.951]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["0.10.3",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["0.5sec",{"_index":1009,"title":{},"body":{"components/TopBarComponent.html":{}}}],["0/1",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1245,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.9",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["1.14.1",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":240,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["10.2.6",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":746,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["10px",{"_index":251,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["11",{"_index":1246,"title":{},"body":{"overview.html":{}}}],["12.12.67",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["1200px",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{}}}],["13/18",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":676,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["15px",{"_index":686,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["15vw",{"_index":747,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["190050037",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["190050069",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["190050117",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["190100036",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{}}}],["1px",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":244,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":678,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["20px",{"_index":677,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["25",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{}}}],["28",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["2]\\d[a",{"_index":960,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"components/UsersComponent.html":{}}}],["3.1.2",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["3.5.14",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["30px",{"_index":743,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["33",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":242,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["4.5.3",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":691,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{}}}],["40px",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["5",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["5/9",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["50px",{"_index":688,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["55",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["576px",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{}}}],["5px",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["6",{"_index":996,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6.1.0",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":687,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["66",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1247,"title":{},"body":{"overview.html":{}}}],["70",{"_index":675,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["72",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{}}}],["8",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{}}}],["80",{"_index":247,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["9.1.1",{"_index":1205,"title":{},"body":{"index.html":{}}}],["9.1.12",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["992px",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{}}}],["9]\\d{6",{"_index":962,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["_models",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["_models/course",{"_index":282,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/UserwhoService.html":{}}}],["_models/list_of_student",{"_index":1061,"title":{},"body":{"injectables/UserService.html":{}}}],["_models/login",{"_index":431,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["_models/message",{"_index":616,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["_models/message_sent",{"_index":883,"title":{},"body":{"injectables/MessageService.html":{}}}],["_models/read_by",{"_index":882,"title":{},"body":{"injectables/MessageService.html":{}}}],["_models/user",{"_index":433,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["a_s_l",{"_index":539,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_s_l=false",{"_index":621,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_t_l",{"_index":540,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["a_t_l=false",{"_index":622,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["about'},{'name",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["about.component.html",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["access",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["accessors",{"_index":167,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["account",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":553,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["activatedroute:activatedroute",{"_index":625,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["actual_component",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["add_course_button",{"_index":744,"title":{},"body":{"components/HomeComponent.html":{}}}],["add_course_url",{"_index":271,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["add_course_url=course_url",{"_index":296,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse",{"_index":172,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"components/HomeComponent.html":{}}}],["addcourse',component",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["addcourse(data",{"_index":265,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse(data:course",{"_index":295,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["addcourse:addcourseservice",{"_index":214,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["addcoursecomponent",{"_index":132,"title":{"components/AddCourseComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addcoursecomponent,canactivate:[authguard",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["addcourseservice",{"_index":173,"title":{"injectables/AddCourseService.html":{}},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"coverage.html":{}}}],["added",{"_index":193,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["adding",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adds",{"_index":306,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["addstudent",{"_index":549,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addta",{"_index":550,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addtocourse",{"_index":299,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{}}}],["addtocourse(username",{"_index":300,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["addtocourse(username:string,id:number,status:string",{"_index":316,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["addtocourse:addtocourseservice",{"_index":627,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["addtocourseservice",{"_index":298,"title":{"injectables/AddToCourseService.html":{}},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["al",{"_index":997,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alert",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["alerts",{"_index":564,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["alertservice",{"_index":968,"title":{},"body":{"components/RegisterComponent.html":{}}}],["align",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["allowed",{"_index":582,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["allowed,else",{"_index":957,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{}}}],["already",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["android",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{}}}],["angular",{"_index":1202,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":280,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["angular/compiler",{"_index":1014,"title":{},"body":{"components/TopBarComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":208,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["angular/material/expansion",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["angular/platform",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":206,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["another",{"_index":712,"title":{},"body":{"components/HomeComponent.html":{}}}],["api/usermy",{"_index":1118,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":135,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":290,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":326,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":397,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":587,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["array",{"_index":849,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{}}}],["artifacts",{"_index":1222,"title":{},"body":{"index.html":{}}}],["associated",{"_index":709,"title":{},"body":{"components/HomeComponent.html":{}}}],["associated.he/she",{"_index":1032,"title":{},"body":{"interfaces/UserMy.html":{}}}],["auth",{"_index":955,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code",{"_index":974,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_form",{"_index":923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_form:formgroup",{"_index":967,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_status",{"_index":924,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth_code_status=false",{"_index":966,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authentication",{"_index":935,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["authenticationservice",{"_index":338,"title":{"injectables/AuthenticationService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservice,authguard,authinterceptor",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":392,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":337,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"overview.html":{}}}],["authresult",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authresult.token",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["authservice",{"_index":416,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["auto",{"_index":239,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["automatically",{"_index":1213,"title":{},"body":{"index.html":{}}}],["back",{"_index":943,"title":{},"body":{"components/RegisterComponent.html":{}}}],["background",{"_index":741,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["bar",{"_index":1000,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar'},{'name",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["bar.component",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1002,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.scss",{"_index":1001,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts",{"_index":999,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:14",{"_index":1012,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:15",{"_index":1006,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1010,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.ts:26",{"_index":1007,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar/top",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":284,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":283,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/get",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/logout",{"_index":840,"title":{},"body":{"injectables/LogoutService.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/auth/refresh",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/courses",{"_index":287,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["base_url+'/api/user",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":736,"title":{},"body":{"components/HomeComponent.html":{}}}],["before",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{}}}],["between",{"_index":729,"title":{},"body":{"components/HomeComponent.html":{}}}],["bg",{"_index":732,"title":{},"body":{"components/HomeComponent.html":{}}}],["black",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["blue",{"_index":255,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":243,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["boolean",{"_index":418,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{}}}],["bootstrap",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["both",{"_index":583,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["bottom",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["box",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{}}}],["bro",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["browse",{"_index":1243,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":406,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":685,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["build",{"_index":1221,"title":{},"body":{"index.html":{}}}],["button",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["by:number",{"_index":857,"title":{},"body":{"interfaces/Message.html":{}}}],["calc(50",{"_index":737,"title":{},"body":{"components/HomeComponent.html":{}}}],["call",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{}}}],["called",{"_index":574,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["calling",{"_index":941,"title":{},"body":{"components/RegisterComponent.html":{}}}],["calls",{"_index":560,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["calss",{"_index":183,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["can't",{"_index":600,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["canactivate",{"_index":412,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cancel",{"_index":237,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["cancel:hover",{"_index":254,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["cant",{"_index":1052,"title":{},"body":{"injectables/UserService.html":{}}}],["card",{"_index":238,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["catch",{"_index":475,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cent",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{}}}],["center",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":1215,"title":{},"body":{"index.html":{}}}],["character",{"_index":534,"title":{},"body":{"interfaces/Course.html":{}}}],["characters",{"_index":236,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["chartreuse",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{}}}],["check",{"_index":591,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["check_login",{"_index":1005,"title":{},"body":{"components/TopBarComponent.html":{}}}],["checks",{"_index":931,"title":{},"body":{"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["chosen",{"_index":608,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["class",{"_index":33,"title":{"classes/AppPage.html":{},"classes/User.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["classes",{"_index":398,"title":{},"body":{"classes/AppPage.html":{},"classes/User.html":{},"overview.html":{}}}],["clears",{"_index":829,"title":{},"body":{"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["cli",{"_index":1203,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":503,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["cluster_appmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":218,"title":{},"body":{"components/AddCourseComponent.html":{},"interfaces/Course.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":252,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["color:blue",{"_index":256,"title":{},"body":{"components/AddCourseComponent.html":{},"components/ReadComponent.html":{}}}],["color:red",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["combineall",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["common",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["concat(token",{"_index":506,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["consist",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Course.html":{}}}],["console.log(\"1",{"_index":493,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"error",{"_index":477,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"expiry",{"_index":466,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"hai",{"_index":915,"title":{},"body":{"components/ReadComponent.html":{}}}],["console.log(\"hello",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(\"hi",{"_index":844,"title":{},"body":{"injectables/LogoutService.html":{}}}],["console.log(\"init",{"_index":495,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"login",{"_index":496,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"payload",{"_index":463,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"start",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(\"token",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log('clicked",{"_index":718,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(authresult.token",{"_index":467,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["console.log(data",{"_index":230,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"injectables/MessageService.html":{}}}],["console.log(error",{"_index":233,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["console.log(this.courseform.value",{"_index":225,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["console.log(this.read_list",{"_index":916,"title":{},"body":{"components/ReadComponent.html":{}}}],["console.log(this.registerform.value",{"_index":995,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(this.submitted",{"_index":977,"title":{},"body":{"components/RegisterComponent.html":{}}}],["const",{"_index":285,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["constantpool",{"_index":1062,"title":{},"body":{"injectables/UserService.html":{}}}],["constraint",{"_index":711,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["constructor(authservice",{"_index":413,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(formbuilder",{"_index":169,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":261,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["constructor(private",{"_index":509,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(router",{"_index":825,"title":{},"body":{"components/LogoutComponent.html":{}}}],["constructor(who",{"_index":699,"title":{},"body":{"components/HomeComponent.html":{}}}],["container",{"_index":689,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["contains",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/MessageSent.html":{},"components/ReadComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":246,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["controls",{"_index":205,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["convenience",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cors",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["course",{"_index":35,"title":{"interfaces/Course.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["course'},{'name",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["course.code",{"_index":719,"title":{},"body":{"components/HomeComponent.html":{}}}],["course.component",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["course.component.html",{"_index":161,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.scss",{"_index":160,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts",{"_index":159,"title":{},"body":{"components/AddCourseComponent.html":{},"coverage.html":{}}}],["course.component.ts:12",{"_index":197,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:13",{"_index":201,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:14",{"_index":174,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:21",{"_index":178,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:30",{"_index":203,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.component.ts:40",{"_index":179,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["course.name",{"_index":720,"title":{},"body":{"components/HomeComponent.html":{}}}],["course.service",{"_index":212,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{}}}],["course.service.ts",{"_index":260,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["course.service.ts:15",{"_index":263,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{}}}],["course.service.ts:25",{"_index":266,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["course.service.ts:27",{"_index":305,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["course/:id",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["course/:id/list",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["course/:id/read",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["course/add",{"_index":158,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["course:course",{"_index":694,"title":{},"body":{"interfaces/CourseStatus.html":{}}}],["course:number",{"_index":856,"title":{},"body":{"interfaces/Message.html":{}}}],["course_id",{"_index":541,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/UsersComponent.html":{}}}],["course_id:any",{"_index":1097,"title":{},"body":{"components/UsersComponent.html":{}}}],["course_status",{"_index":542,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["course_url",{"_index":286,"title":{},"body":{"injectables/AddCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courseform",{"_index":163,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["coursehomecomponent",{"_index":137,"title":{"components/CourseHomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursehomecomponent,canactivate:[authguard",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["courses",{"_index":697,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{}}}],["coursestatus",{"_index":315,"title":{"interfaces/CourseStatus.html":{}},"body":{"injectables/AddToCourseService.html":{},"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["cover",{"_index":749,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1119,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cs251",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["current",{"_index":1030,"title":{},"body":{"interfaces/UserMy.html":{}}}],["currentuservalue",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["danger",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{}}}],["dashboard",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dashboard.herokuapp.com",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":229,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["data=>{console.log(data",{"_index":660,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["data=>{console.log(data);window.alert(\"ta",{"_index":654,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["data=>{window.alert(\"student",{"_index":646,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["data['message']=message['message_text",{"_index":889,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['prior']=false",{"_index":894,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['prior']=message['message_priority",{"_index":891,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['prior']=true",{"_index":893,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['status']=status",{"_index":318,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["data['to']=to",{"_index":888,"title":{},"body":{"injectables/MessageService.html":{}}}],["data['username']=username",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["database",{"_index":1035,"title":{},"body":{"interfaces/UserMy.html":{}}}],["days",{"_index":481,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["decides",{"_index":311,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["declarations",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["decode(token",{"_index":472,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["decoding",{"_index":478,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["default",{"_index":198,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["delete",{"_index":1084,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_student",{"_index":1079,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_student(username",{"_index":1081,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_student(username:string",{"_index":1099,"title":{},"body":{"components/UsersComponent.html":{}}}],["delete_students",{"_index":1044,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_students(id",{"_index":1047,"title":{},"body":{"injectables/UserService.html":{}}}],["delete_students(id:number,username:string",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":328,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":275,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"interfaces/Course.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["desktops",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{}}}],["details",{"_index":186,"title":{},"body":{"components/AddCourseComponent.html":{},"classes/User.html":{}}}],["dev",{"_index":1210,"title":{},"body":{"index.html":{}}}],["development",{"_index":1206,"title":{},"body":{"index.html":{}}}],["devices",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{}}}],["different",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1220,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1224,"title":{},"body":{"index.html":{}}}],["display",{"_index":723,"title":{},"body":{"components/HomeComponent.html":{}}}],["dist",{"_index":1223,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["don't",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["done",{"_index":558,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["dont",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":476,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["e2e",{"_index":1235,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":399,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":404,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":402,"title":{},"body":{"classes/AppPage.html":{}}}],["easy",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["element",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["element(by.css('app",{"_index":407,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserReal.html":{}}}],["empty",{"_index":671,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["end",{"_index":1234,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":232,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error=>{window.alert(\"adding",{"_index":648,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["etc",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["everything",{"_index":942,"title":{},"body":{"components/RegisterComponent.html":{}}}],["execute",{"_index":1232,"title":{},"body":{"index.html":{}}}],["exp",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["expansion",{"_index":680,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["expiration",{"_index":488,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["expiresat",{"_index":464,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["exports",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["expression",{"_index":938,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["extracted",{"_index":572,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["f",{"_index":168,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["f1",{"_index":926,"title":{},"body":{"components/RegisterComponent.html":{}}}],["failed",{"_index":565,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["false",{"_index":200,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":577,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["fetches",{"_index":1057,"title":{},"body":{"injectables/UserService.html":{}}}],["field",{"_index":932,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fields",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["files",{"_index":1216,"title":{},"body":{"index.html":{}}}],["fingertips",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["first",{"_index":209,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["first_name",{"_index":1041,"title":{},"body":{"interfaces/UserReal.html":{}}}],["fit",{"_index":748,"title":{},"body":{"components/HomeComponent.html":{}}}],["flag",{"_index":1226,"title":{},"body":{"index.html":{}}}],["flex",{"_index":722,"title":{},"body":{"components/HomeComponent.html":{}}}],["float",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{}}}],["flow",{"_index":724,"title":{},"body":{"components/HomeComponent.html":{}}}],["font",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["form",{"_index":180,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":170,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":610,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["formcontrol('',validators.required",{"_index":635,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["formgroup",{"_index":196,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["from_username",{"_index":846,"title":{},"body":{"interfaces/Message.html":{}}}],["from_username:string",{"_index":860,"title":{},"body":{"interfaces/Message.html":{}}}],["frontend",{"_index":948,"title":{},"body":{"components/RegisterComponent.html":{}}}],["function",{"_index":267,"title":{},"body":{"injectables/AddCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LogoutService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["functions",{"_index":828,"title":{},"body":{"components/LogoutComponent.html":{}}}],["further",{"_index":1236,"title":{},"body":{"index.html":{}}}],["gap",{"_index":730,"title":{},"body":{"components/HomeComponent.html":{}}}],["gaurav",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{}}}],["generate",{"_index":1218,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1201,"title":{},"body":{"index.html":{}}}],["get_messages",{"_index":867,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_messages(id",{"_index":871,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_messages(id:number):observable",{"_index":884,"title":{},"body":{"injectables/MessageService.html":{}}}],["get_students",{"_index":1045,"title":{},"body":{"injectables/UserService.html":{}}}],["get_students(id",{"_index":1055,"title":{},"body":{"injectables/UserService.html":{}}}],["get_students(id:number):observable",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["getexpiration",{"_index":487,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["getf",{"_index":202,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getf1",{"_index":953,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getter",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getting",{"_index":1199,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":400,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["girish",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{}}}],["give",{"_index":1090,"title":{},"body":{"components/UsersComponent.html":{}}}],["given",{"_index":185,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["go",{"_index":1239,"title":{},"body":{"index.html":{}}}],["group",{"_index":249,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["grow",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{}}}],["guard",{"_index":409,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":410,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":919,"title":{},"body":{"components/ReadComponent.html":{}}}],["header",{"_index":241,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["headers",{"_index":288,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":248,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["help",{"_index":1237,"title":{},"body":{"index.html":{}}}],["helps",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{}}}],["here",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["high",{"_index":667,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["himself",{"_index":1087,"title":{},"body":{"components/UsersComponent.html":{}}}],["holds",{"_index":1033,"title":{},"body":{"interfaces/UserMy.html":{}}}],["home",{"_index":189,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["home'},{'name",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["home.component",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["home.component.html",{"_index":538,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":537,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.ts",{"_index":536,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["home.component.ts:119",{"_index":566,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:143",{"_index":585,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:163",{"_index":579,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:21",{"_index":593,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:22",{"_index":595,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:26",{"_index":606,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:30",{"_index":609,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:31",{"_index":611,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:32",{"_index":602,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:36",{"_index":590,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:40",{"_index":592,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:44",{"_index":597,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:48",{"_index":596,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:52",{"_index":556,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:68",{"_index":570,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:86",{"_index":612,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home.component.ts:99",{"_index":557,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["home/course",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["home/home.component",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["homecomponent",{"_index":139,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homecomponent,canactivate:[authguard",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["html",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":264,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["http://localhost:4200",{"_index":1212,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":293,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["http_interceptors",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":262,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["httpclientmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule,http_interceptors",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httphandler",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httpheaders",{"_index":278,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":436,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["httpoptions",{"_index":274,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":279,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{}}}],["httprequest",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["https://back",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":302,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["id:number",{"_index":852,"title":{},"body":{"interfaces/Message.html":{}}}],["identifier",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1105,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["idle",{"_index":427,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["idservice",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["idservice:userwhoservice",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["ie11",{"_index":739,"title":{},"body":{"components/HomeComponent.html":{}}}],["if(!this.auth_code_status",{"_index":988,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if((localstorage.getitem('token')==null)||(localstorage.getitem('token')=='undefined",{"_index":1018,"title":{},"body":{"components/TopBarComponent.html":{}}}],["if(data['is_professor']==true",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(data['prior']==\"true",{"_index":892,"title":{},"body":{"injectables/MessageService.html":{}}}],["if(localstorage.getitem('is_professor')=='true",{"_index":715,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["if(professor_expression.test(s)==true",{"_index":985,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(student_expression.test(s)==true",{"_index":983,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.message.invalid",{"_index":657,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["if(this.username.invalid",{"_index":642,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["if(tok==null||tok=='undefined",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["iitb",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{}}}],["img",{"_index":745,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["important",{"_index":684,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["imports",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{}}}],["including",{"_index":1095,"title":{},"body":{"components/UsersComponent.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["inherit",{"_index":683,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["injectable",{"_index":257,"title":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["injectables",{"_index":258,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"overview.html":{}}}],["input",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["input[type=\"radio",{"_index":250,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{}}}],["intercept",{"_index":517,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":501,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["interceptor",{"_index":515,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":516,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":451,"title":{"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["interfaces",{"_index":532,"title":{},"body":{"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"overview.html":{}}}],["interval",{"_index":1003,"title":{},"body":{"components/TopBarComponent.html":{}}}],["interval=setinterval(()=>{this.check_login();},500",{"_index":1016,"title":{},"body":{"components/TopBarComponent.html":{}}}],["invalid",{"_index":181,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["is_professor",{"_index":698,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{}}}],["is_professor:[false,validators.required",{"_index":972,"title":{},"body":{"components/RegisterComponent.html":{}}}],["is_professor:boolean",{"_index":861,"title":{},"body":{"interfaces/Message.html":{},"components/UsersComponent.html":{}}}],["isloggedin",{"_index":497,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["isloggedout",{"_index":499,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["isnt",{"_index":426,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["jquery",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["json.parse(atob(token.split(\".\")[1",{"_index":474,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["json.parse(expiration",{"_index":490,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["json.stringify(expiresat.valueof",{"_index":470,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["justify",{"_index":727,"title":{},"body":{"components/HomeComponent.html":{}}}],["jwt",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["jwtpayload",{"_index":452,"title":{"interfaces/JWTPayload.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{}}}],["karma",{"_index":1233,"title":{},"body":{"index.html":{}}}],["keep",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["kinds",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["krushnakant",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{}}}],["landscape",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{}}}],["large",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{}}}],["last",{"_index":586,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["last_name",{"_index":1042,"title":{},"body":{"interfaces/UserReal.html":{}}}],["leads",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{}}}],["left",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["lg",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{}}}],["list",{"_index":721,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["list_of_students",{"_index":1078,"title":{},"body":{"components/UsersComponent.html":{}}}],["list_of_students:any",{"_index":1096,"title":{},"body":{"components/UsersComponent.html":{}}}],["literal",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":164,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["loading.note",{"_index":598,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["local",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["localstorage.clear",{"_index":843,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.getitem('expires_at",{"_index":489,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.getitem('token",{"_index":471,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.getitem('token')!=\"undefined",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('token')!=null",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem('expires_at",{"_index":842,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.removeitem('token",{"_index":841,"title":{},"body":{"injectables/LogoutService.html":{}}}],["localstorage.setitem('expires_at",{"_index":469,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["localstorage.setitem('is_professor','false",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('is_professor','true",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('token",{"_index":468,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["location.reload",{"_index":661,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["logged",{"_index":420,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["logged_in",{"_index":1004,"title":{},"body":{"components/TopBarComponent.html":{}}}],["logged_in:boolean",{"_index":1015,"title":{},"body":{"components/TopBarComponent.html":{}}}],["loggen",{"_index":1031,"title":{},"body":{"interfaces/UserMy.html":{}}}],["logic",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login",{"_index":388,"title":{"interfaces/Login.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["login'},{'name",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["login(data",{"_index":492,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["login.component.html",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["login_button",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["login_url",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":140,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{}}}],["logout",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{}}}],["logout'},{'name",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["logout.component.html",{"_index":824,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":823,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.service",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["logout/logout.component",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["logout:logoutservice",{"_index":510,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["logout_url",{"_index":839,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logoutcomponent",{"_index":142,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logoutservice",{"_index":414,"title":{"injectables/LogoutService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"coverage.html":{}}}],["logs",{"_index":429,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{}}}],["long",{"_index":428,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["looking",{"_index":1089,"title":{},"body":{"components/UsersComponent.html":{}}}],["low",{"_index":669,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["lower",{"_index":670,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_s_l",{"_index":543,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_s_l=false",{"_index":624,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_t_l",{"_index":544,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["m_t_l=false",{"_index":623,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["main",{"_index":710,"title":{},"body":{"components/HomeComponent.html":{}}}],["make",{"_index":423,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["makes",{"_index":576,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["making",{"_index":1050,"title":{},"body":{"injectables/UserService.html":{}}}],["margin",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["mat",{"_index":679,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["matches",{"_index":939,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["max",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{}}}],["md",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{}}}],["media",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{}}}],["medium",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["members",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["message",{"_index":545,"title":{"interfaces/Message.html":{}},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["message.from_username",{"_index":673,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message.message",{"_index":674,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message:formgroup",{"_index":620,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["message:string",{"_index":854,"title":{},"body":{"interfaces/Message.html":{}}}],["message_id",{"_index":904,"title":{},"body":{"components/ReadComponent.html":{}}}],["message_id:any",{"_index":911,"title":{},"body":{"components/ReadComponent.html":{}}}],["message_priority",{"_index":638,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["message_priority:boolean",{"_index":865,"title":{},"body":{"interfaces/MessageSent.html":{}}}],["message_text",{"_index":637,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["message_text:string",{"_index":864,"title":{},"body":{"interfaces/MessageSent.html":{}}}],["messages",{"_index":546,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["messagesent",{"_index":862,"title":{"interfaces/MessageSent.html":{}},"body":{"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["messageservice",{"_index":555,"title":{"injectables/MessageService.html":{}},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"coverage.html":{}}}],["messageservice:messageservice",{"_index":628,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{}}}],["messsage",{"_index":908,"title":{},"body":{"components/ReadComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["min",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{}}}],["miscellaneous",{"_index":1248,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mixin",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{}}}],["module",{"_index":325,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":327,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moment",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"dependencies.html":{}}}],["moment().isbefore(this.getexpiration",{"_index":498,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment().isbetween(this.getexpiration().subtract(1",{"_index":480,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment(expiresat",{"_index":491,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moment.unix(payload.exp",{"_index":465,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["moodle",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{}}}],["more",{"_index":1238,"title":{},"body":{"index.html":{}}}],["moves",{"_index":830,"title":{},"body":{"components/LogoutComponent.html":{}}}],["moving",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{}}}],["multi",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["my.ts",{"_index":1028,"title":{},"body":{"interfaces/UserMy.html":{},"coverage.html":{}}}],["name",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"index.html":{}}}],["navigate",{"_index":1211,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":188,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["navigateto",{"_index":401,"title":{},"body":{"classes/AppPage.html":{}}}],["needed",{"_index":945,"title":{},"body":{"components/RegisterComponent.html":{}}}],["new",{"_index":289,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":192,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["next",{"_index":502,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["next.handle(cloned",{"_index":507,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["next.handle(req",{"_index":508,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["ng",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["ngx",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["none_type",{"_index":1013,"title":{},"body":{"components/TopBarComponent.html":{}}}],["noopanimationsmodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["note",{"_index":1086,"title":{},"body":{"components/UsersComponent.html":{}}}],["note:u",{"_index":1051,"title":{},"body":{"injectables/UserService.html":{}}}],["notifications",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{}}}],["notify",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["number",{"_index":303,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"injectables/UserwhoService.html":{}}}],["object",{"_index":273,"title":{},"body":{"injectables/AddCourseService.html":{},"interfaces/Course.html":{},"components/HomeComponent.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":876,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["observable",{"_index":277,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["obtained",{"_index":873,"title":{},"body":{"injectables/MessageService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["onsubmit",{"_index":166,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["onto",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{}}}],["option",{"_index":607,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["optional",{"_index":177,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["orange",{"_index":742,"title":{},"body":{"components/HomeComponent.html":{}}}],["out",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":682,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["overview",{"_index":1244,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p[a",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":1164,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":245,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["page",{"_index":190,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["panel",{"_index":681,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["param",{"_index":294,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["parameters",{"_index":175,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["part",{"_index":613,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["particular",{"_index":308,"title":{},"body":{"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["parts",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{}}}],["passing",{"_index":879,"title":{},"body":{"injectables/MessageService.html":{}}}],["password",{"_index":752,"title":{},"body":{"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserReal.html":{}}}],["path",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["path:'**',component:logincomponent",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":461,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["people",{"_index":899,"title":{},"body":{"interfaces/ReadBy.html":{},"components/ReadComponent.html":{}}}],["performs",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["permission",{"_index":1091,"title":{},"body":{"components/UsersComponent.html":{}}}],["person",{"_index":313,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"components/UsersComponent.html":{}}}],["piazza",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["pipe",{"_index":484,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["pipe(first",{"_index":227,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["place",{"_index":990,"title":{},"body":{"components/RegisterComponent.html":{}}}],["popper.js",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["portrait",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{}}}],["post",{"_index":269,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["prajeeth",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{}}}],["prefix",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":1058,"title":{},"body":{"injectables/UserService.html":{}}}],["previous",{"_index":672,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["prior",{"_index":847,"title":{},"body":{"interfaces/Message.html":{}}}],["prior:boolean",{"_index":858,"title":{},"body":{"interfaces/Message.html":{}}}],["priority",{"_index":668,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/MessageSent.html":{}}}],["private",{"_index":213,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["proceeds",{"_index":940,"title":{},"body":{"components/RegisterComponent.html":{}}}],["process",{"_index":561,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["prod",{"_index":1225,"title":{},"body":{"index.html":{}}}],["production",{"_index":1227,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prof",{"_index":690,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["professor",{"_index":567,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["professor_expression",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["professor_expression=/p[a",{"_index":964,"title":{},"body":{"components/RegisterComponent.html":{}}}],["professors",{"_index":963,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["profs",{"_index":599,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["project",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["promise",{"_index":403,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":162,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{}}}],["protractor",{"_index":405,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"components/CourseHomeComponent.html":{}}}],["providedin",{"_index":291,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["providers",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["radius",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":850,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{}}}],["read'},{'name",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["read.component.html",{"_index":903,"title":{},"body":{"components/ReadComponent.html":{}}}],["read.component.scss",{"_index":902,"title":{},"body":{"components/ReadComponent.html":{}}}],["read/read.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["read_by",{"_index":848,"title":{},"body":{"interfaces/Message.html":{}}}],["read_by:array",{"_index":859,"title":{},"body":{"interfaces/Message.html":{}}}],["read_list",{"_index":905,"title":{},"body":{"components/ReadComponent.html":{}}}],["read_list:any",{"_index":912,"title":{},"body":{"components/ReadComponent.html":{}}}],["read_message",{"_index":868,"title":{},"body":{"injectables/MessageService.html":{}}}],["read_message(id",{"_index":874,"title":{},"body":{"injectables/MessageService.html":{}}}],["read_message(id:number",{"_index":896,"title":{},"body":{"injectables/MessageService.html":{}}}],["readby",{"_index":881,"title":{"interfaces/ReadBy.html":{}},"body":{"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"coverage.html":{}}}],["readcomponent",{"_index":144,"title":{"components/ReadComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readcomponent,canactivate:[authguard",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["reader.username",{"_index":918,"title":{},"body":{"components/ReadComponent.html":{}}}],["readme",{"_index":1240,"title":{},"body":{"index.html":{}}}],["real",{"_index":1111,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["real.ts",{"_index":1040,"title":{},"body":{"interfaces/UserReal.html":{},"coverage.html":{}}}],["receive",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{}}}],["receive,it",{"_index":851,"title":{},"body":{"interfaces/Message.html":{}}}],["red",{"_index":750,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirect",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirects",{"_index":430,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["refresh_url",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshes",{"_index":421,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["refreshtoken",{"_index":479,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["register",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["register(user",{"_index":1059,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.html",{"_index":922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":921,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["register_url",{"_index":1063,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registercomponent",{"_index":146,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":1038,"title":{},"body":{"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["registerform",{"_index":925,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":950,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regular",{"_index":937,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["regularly",{"_index":1008,"title":{},"body":{"components/TopBarComponent.html":{}}}],["reload",{"_index":1214,"title":{},"body":{"index.html":{}}}],["reloaded",{"_index":588,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["remember",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["remove",{"_index":1053,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["removed",{"_index":1083,"title":{},"body":{"components/UsersComponent.html":{}}}],["removes",{"_index":1049,"title":{},"body":{"injectables/UserService.html":{}}}],["render",{"_index":605,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["represent",{"_index":1029,"title":{},"body":{"interfaces/UserMy.html":{}}}],["representing",{"_index":956,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":276,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/UsersComponent.html":{}}}],["req",{"_index":519,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":504,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["req.headers.set('authorization",{"_index":505,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["request",{"_index":270,"title":{},"body":{"injectables/AddCourseService.html":{},"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":235,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rest",{"_index":568,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["result",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":204,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{}}}],["returnurl",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["right",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["right:80",{"_index":1102,"title":{},"body":{"components/UsersComponent.html":{}}}],["root",{"_index":292,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{}}}],["root'},{'name",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["router",{"_index":171,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["router:router",{"_index":629,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LogoutComponent.html":{}}}],["routermodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["row",{"_index":725,"title":{},"body":{"components/HomeComponent.html":{}}}],["run",{"_index":1208,"title":{},"body":{"index.html":{}}}],["running",{"_index":1228,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":281,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"injectables/LogoutService.html":{},"injectables/MessageService.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"injectables/UserwhoService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":210,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["s!=\"undefined",{"_index":982,"title":{},"body":{"components/RegisterComponent.html":{}}}],["s!=null",{"_index":981,"title":{},"body":{"components/RegisterComponent.html":{}}}],["s=this.f1.auth_code.value",{"_index":980,"title":{},"body":{"components/RegisterComponent.html":{}}}],["same",{"_index":195,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["scaffolding",{"_index":1217,"title":{},"body":{"index.html":{}}}],["screen",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{}}}],["see",{"_index":601,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["seen",{"_index":589,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["send",{"_index":581,"title":{},"body":{"components/CourseHomeComponent.html":{},"injectables/MessageService.html":{}}}],["send(either",{"_index":880,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message",{"_index":869,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message(id",{"_index":877,"title":{},"body":{"injectables/MessageService.html":{}}}],["send_message(id:number,message:messagesent,to:string",{"_index":887,"title":{},"body":{"injectables/MessageService.html":{}}}],["sending",{"_index":272,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["sends",{"_index":268,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/MessageService.html":{}}}],["sendstudent",{"_index":551,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["sendta",{"_index":552,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["sent",{"_index":578,"title":{},"body":{"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["sent:string",{"_index":853,"title":{},"body":{"interfaces/Message.html":{}}}],["separate",{"_index":738,"title":{},"body":{"components/HomeComponent.html":{}}}],["serve",{"_index":1209,"title":{},"body":{"index.html":{}}}],["server",{"_index":1207,"title":{},"body":{"index.html":{}}}],["server/website",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{}}}],["service",{"_index":184,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["services/add",{"_index":211,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{}}}],["services/authentication.service",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["services/base",{"_index":910,"title":{},"body":{"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["services/logout.service",{"_index":832,"title":{},"body":{"components/LogoutComponent.html":{}}}],["services/message.service",{"_index":615,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{}}}],["services/user.service",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["services/userwho.service",{"_index":614,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["set",{"_index":604,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/ReadComponent.html":{}}}],["setinterval(()=>{this.check_login();},500",{"_index":1011,"title":{},"body":{"components/TopBarComponent.html":{}}}],["sets",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersComponent.html":{}}}],["setsession",{"_index":520,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setsession(authresult",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["sharereplay",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["show",{"_index":191,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["shrink",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{}}}],["sign",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{}}}],["similar",{"_index":569,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["size",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["slateblue",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["sm",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{}}}],["small",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{}}}],["smartphones",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["solid",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"index.html":{}}}],["sources",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["space",{"_index":728,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["span')).gettext",{"_index":408,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../add",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.ts",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logout.service.ts",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.service.ts",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.component.ts",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.component.ts",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../userwho.service.ts",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/_models/course",{"_index":692,"title":{},"body":{"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["src/app/_models/course.ts",{"_index":533,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/app/_models/list_of_student.ts",{"_index":1037,"title":{},"body":{"interfaces/UserMyList.html":{},"coverage.html":{}}}],["src/app/_models/login.ts",{"_index":751,"title":{},"body":{"interfaces/Login.html":{},"coverage.html":{}}}],["src/app/_models/message.ts",{"_index":845,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/_models/message_sent.ts",{"_index":863,"title":{},"body":{"interfaces/MessageSent.html":{},"coverage.html":{}}}],["src/app/_models/read_by.ts",{"_index":898,"title":{},"body":{"interfaces/ReadBy.html":{},"coverage.html":{}}}],["src/app/_models/user",{"_index":1027,"title":{},"body":{"interfaces/UserMy.html":{},"interfaces/UserReal.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["src/app/_models/user.ts",{"_index":1021,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/_models/user.ts:5",{"_index":1026,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:6",{"_index":1025,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:7",{"_index":1023,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:8",{"_index":1024,"title":{},"body":{"classes/User.html":{}}}],["src/app/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:13",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:9",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/add",{"_index":157,"title":{},"body":{"components/AddCourseComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/course",{"_index":535,"title":{},"body":{"components/CourseHomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:14",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:20",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:31",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:47",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:77",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/logout/logout.component.ts",{"_index":822,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/logout/logout.component.ts:20",{"_index":827,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/logout/logout.component.ts:9",{"_index":826,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/read/read.component.ts",{"_index":901,"title":{},"body":{"components/ReadComponent.html":{},"coverage.html":{}}}],["src/app/read/read.component.ts:15",{"_index":909,"title":{},"body":{"components/ReadComponent.html":{}}}],["src/app/read/read.component.ts:19",{"_index":906,"title":{},"body":{"components/ReadComponent.html":{}}}],["src/app/read/read.component.ts:28",{"_index":907,"title":{},"body":{"components/ReadComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":920,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/register/register.component.ts:26",{"_index":949,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":946,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:34",{"_index":951,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:38",{"_index":944,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:39",{"_index":927,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:55",{"_index":928,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:72",{"_index":952,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:77",{"_index":954,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:89",{"_index":929,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/services/add",{"_index":259,"title":{},"body":{"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts",{"_index":411,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:105",{"_index":518,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/services/authentication.service.ts:121",{"_index":415,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/authentication.service.ts:129",{"_index":417,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/services/authentication.service.ts:34",{"_index":521,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:38",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:51",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:55",{"_index":522,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":527,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:73",{"_index":523,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:80",{"_index":526,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:92",{"_index":524,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:96",{"_index":525,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/base.ts",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/logout.service.ts",{"_index":836,"title":{},"body":{"injectables/LogoutService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/logout.service.ts:14",{"_index":837,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/logout.service.ts:23",{"_index":838,"title":{},"body":{"injectables/LogoutService.html":{}}}],["src/app/services/message.service.ts",{"_index":866,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/message.service.ts:16",{"_index":870,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:28",{"_index":872,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:39",{"_index":878,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:61",{"_index":875,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/user.service.ts",{"_index":1043,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/user.service.ts:18",{"_index":1046,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":1060,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:38",{"_index":1056,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:51",{"_index":1048,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/userwho.service.ts",{"_index":1104,"title":{},"body":{"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/userwho.service.ts:16",{"_index":1106,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:24",{"_index":1110,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:32",{"_index":1109,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/services/userwho.service.ts:39",{"_index":1107,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["src/app/top",{"_index":998,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["src/app/users/users.component.ts",{"_index":1075,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/users/users.component.ts:22",{"_index":1094,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:24",{"_index":1093,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:26",{"_index":1080,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:43",{"_index":1085,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:60",{"_index":1082,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srivatsa",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["started",{"_index":1200,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":304,"title":{},"body":{"injectables/AddToCourseService.html":{},"interfaces/CourseStatus.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserwhoService.html":{}}}],["status(id",{"_index":1108,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["status(id:number",{"_index":1115,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["status.ts",{"_index":693,"title":{},"body":{"interfaces/CourseStatus.html":{},"coverage.html":{}}}],["status:string",{"_index":695,"title":{},"body":{"interfaces/CourseStatus.html":{}}}],["stays",{"_index":194,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["stop",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["stops",{"_index":182,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{}}}],["storage",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["store",{"_index":603,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["stored",{"_index":1034,"title":{},"body":{"interfaces/UserMy.html":{},"index.html":{}}}],["stores",{"_index":594,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{}}}],["string",{"_index":301,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/CourseStatus.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":310,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"interfaces/Message.html":{},"components/RegisterComponent.html":{},"interfaces/UserMy.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["student.username",{"_index":1101,"title":{},"body":{"components/UsersComponent.html":{}}}],["student/ta",{"_index":307,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["student_expression",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["student_expression=/[1",{"_index":959,"title":{},"body":{"components/RegisterComponent.html":{}}}],["students",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{},"components/RegisterComponent.html":{},"interfaces/UserMyList.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["students/ta's",{"_index":1092,"title":{},"body":{"components/UsersComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["submits",{"_index":930,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitted",{"_index":165,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitted_add",{"_index":547,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_add=false",{"_index":617,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_m",{"_index":548,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["submitted_m=false",{"_index":618,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["subscribe",{"_index":228,"title":{},"body":{"components/AddCourseComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(data",{"_index":632,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["success",{"_index":187,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{}}}],["successful",{"_index":562,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":994,"title":{},"body":{"components/RegisterComponent.html":{}}}],["successfully\");location.reload",{"_index":647,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["such",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["suffix",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1241,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":424,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["svg",{"_index":1242,"title":{},"body":{"modules.html":{}}}],["ta",{"_index":314,"title":{},"body":{"injectables/AddToCourseService.html":{},"components/CourseHomeComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/UserMy.html":{}}}],["ta's",{"_index":584,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/UsersComponent.html":{}}}],["ta/prof",{"_index":559,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["ta\\'s",{"_index":1103,"title":{},"body":{"components/UsersComponent.html":{}}}],["table",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["tablets",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{}}}],["takes",{"_index":831,"title":{},"body":{"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["tap",{"_index":440,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["tap(response",{"_index":485,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["team",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/TopBarComponent.html":{}}}],["tells",{"_index":419,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["test",{"_index":1231,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1230,"title":{},"body":{"index.html":{}}}],["text",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/MessageSent.html":{},"components/RegisterComponent.html":{}}}],["this.a_s_l=false",{"_index":650,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_s_l=true",{"_index":644,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_t_l=false",{"_index":655,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.a_t_l=true",{"_index":652,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.addcourse.addcourse(this.courseform.value",{"_index":226,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.addtocourse.addtocourse(this.username.value,this.course_id,'student').pipe(first",{"_index":645,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.addtocourse.addtocourse(this.username.value,this.course_id,'ta').pipe(first",{"_index":653,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.auth_code_form.controls",{"_index":976,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_form.invalid",{"_index":979,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_form=this.formbuilder.group",{"_index":973,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_status=false",{"_index":987,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.auth_code_status=true",{"_index":984,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":969,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authenticationservice.login(this.loginform.value",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isloggedin",{"_index":511,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.authservice.refreshtoken",{"_index":512,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.check_login",{"_index":1017,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.course_id=this.activatedroute.snapshot.parammap.get('id",{"_index":630,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.course_status=data['status",{"_index":633,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.courseform",{"_index":215,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courseform.controls",{"_index":220,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courseform.invalid",{"_index":223,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.courses",{"_index":714,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.decode(token",{"_index":462,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.formbuilder.group",{"_index":216,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getexpiration",{"_index":482,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.get(url,httpoptions",{"_index":886,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["this.http.get(use_url",{"_index":1114,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["this.http.get(use_url,httpoptions",{"_index":1117,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["this.http.post(add_course_url,data,httpoptions",{"_index":297,"title":{},"body":{"injectables/AddCourseService.html":{}}}],["this.http.post(login_url,data",{"_index":494,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.post(refresh_url,{token:this.token",{"_index":483,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.http.post(register_url",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(url,data,httpoptions",{"_index":319,"title":{},"body":{"injectables/AddToCourseService.html":{},"injectables/MessageService.html":{},"injectables/UserService.html":{}}}],["this.idservice.identity().pipe(first",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.is_professor=false",{"_index":717,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.is_professor=true",{"_index":716,"title":{},"body":{"components/HomeComponent.html":{},"components/UsersComponent.html":{}}}],["this.isloggedin",{"_index":500,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.loading",{"_index":224,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.loading=false",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.logged_in=false",{"_index":1019,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.logged_in=true",{"_index":1020,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.loginform",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout.logout",{"_index":513,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LogoutComponent.html":{}}}],["this.m_s_l=false",{"_index":666,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_s_l=true",{"_index":664,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_t_l=false",{"_index":662,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.m_t_l=true",{"_index":658,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message.controls",{"_index":640,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message=this.formbuilder.group",{"_index":636,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.message_id=this.activatedroute.snapshot.parammap.get('id",{"_index":913,"title":{},"body":{"components/ReadComponent.html":{}}}],["this.messageservice.get_messages(this.course_id).subscribe(data1=>this.messages=data1",{"_index":639,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.messageservice.read_message(this.message_id).subscribe(data=>{this.read_list=data",{"_index":914,"title":{},"body":{"components/ReadComponent.html":{}}}],["this.messageservice.send_message(this.course_id,this.message.value,'student').pipe(first",{"_index":665,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.messageservice.send_message(this.course_id,this.message.value,'ta').pipe(first",{"_index":659,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.registerform",{"_index":970,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":975,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":978,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.patchvalue({is_professor:true",{"_index":986,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.returnurl",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/login",{"_index":834,"title":{},"body":{"components/LogoutComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['addcourse",{"_index":234,"title":{},"body":{"components/AddCourseComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['home",{"_index":231,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["this.router.navigate(['login",{"_index":514,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.setsession(response",{"_index":486,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["this.submitted",{"_index":221,"title":{},"body":{"components/AddCourseComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.submitted_add=false",{"_index":651,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_add=true",{"_index":641,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_m=false",{"_index":663,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.submitted_m=true",{"_index":656,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.username=new",{"_index":634,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.userservice.delete_students(this.course_id,username).subscribe(data=>{location.reload",{"_index":1100,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.get_students(this.course_id).subscribe((data)=>{this.list_of_students=data",{"_index":917,"title":{},"body":{"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["this.userservice.register(this.registerform.value",{"_index":992,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.who.status(this.course_id",{"_index":631,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["this.who.who().subscribe(data",{"_index":713,"title":{},"body":{"components/HomeComponent.html":{}}}],["time",{"_index":947,"title":{},"body":{"components/RegisterComponent.html":{}}}],["title",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/CourseHomeComponent.html":{}}}],["to:string",{"_index":855,"title":{},"body":{"interfaces/Message.html":{}}}],["tok=localstorage.getitem('token",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["token",{"_index":422,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserToken.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["token.ts",{"_index":1072,"title":{},"body":{"interfaces/UserToken.html":{},"coverage.html":{}}}],["token_form",{"_index":1073,"title":{},"body":{"interfaces/UserToken.html":{}}}],["token_form:string",{"_index":1074,"title":{},"body":{"interfaces/UserToken.html":{}}}],["top",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["topbarcomponent",{"_index":148,"title":{"components/TopBarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tot",{"_index":731,"title":{},"body":{"components/HomeComponent.html":{}}}],["track",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":222,"title":{},"body":{"components/AddCourseComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":473,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["tslib",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["type",{"_index":176,"title":{},"body":{"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseHomeComponent.html":{},"interfaces/CourseStatus.html":{},"components/HomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"interfaces/Message.html":{},"interfaces/MessageSent.html":{},"injectables/MessageService.html":{},"interfaces/ReadBy.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"components/UsersComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jasmine",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["types/jasminewd2",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["types/jwt",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1088,"title":{},"body":{"components/UsersComponent.html":{}}}],["unit",{"_index":1229,"title":{},"body":{"index.html":{}}}],["unsuccessful",{"_index":649,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["up",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{}}}],["updates",{"_index":575,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{}}}],["upport",{"_index":740,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["url=base_url+'/api'+'/readby/'+id.tostring",{"_index":897,"title":{},"body":{"injectables/MessageService.html":{}}}],["url=base_url+'/api/messages/'+id.tostring",{"_index":885,"title":{},"body":{"injectables/MessageService.html":{}}}],["url=base_url+'/api/user/'+id.tostring()+'/'+username",{"_index":317,"title":{},"body":{"injectables/AddToCourseService.html":{}}}],["url=base_url+'/api/usercourse/'+id.tostring",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1219,"title":{},"body":{"index.html":{}}}],["use_url",{"_index":1113,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["use_url=base_url+'/api/user/'+id.tostring()+'/abc",{"_index":1116,"title":{},"body":{"injectables/UserwhoService.html":{}}}],["useclass",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":580,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":708,"title":{"classes/User.html":{}},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"classes/User.html":{},"interfaces/UserMy.html":{},"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["user_id",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["user_url",{"_index":1112,"title":{},"body":{"injectables/UserwhoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermy",{"_index":432,"title":{"interfaces/UserMy.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserMy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermylist",{"_index":1036,"title":{"interfaces/UserMyList.html":{}},"body":{"interfaces/UserMyList.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["username",{"_index":309,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"interfaces/Login.html":{},"components/LoginComponent.html":{},"interfaces/ReadBy.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"interfaces/UserMyList.html":{},"interfaces/UserReal.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["username,password,email",{"_index":1022,"title":{},"body":{"classes/User.html":{}}}],["username:formcontrol",{"_index":619,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["username:string",{"_index":900,"title":{},"body":{"interfaces/ReadBy.html":{},"interfaces/UserMyList.html":{}}}],["userreal",{"_index":1039,"title":{"interfaces/UserReal.html":{}},"body":{"interfaces/UserReal.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["users",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["users.component.html",{"_index":1077,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.scss",{"_index":1076,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/users.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["userscomponent",{"_index":150,"title":{"components/UsersComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userscomponent,canactivate:[authguard",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["userservice",{"_index":339,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userservice:userservice",{"_index":1098,"title":{},"body":{"components/UsersComponent.html":{}}}],["usertoken",{"_index":434,"title":{"interfaces/UserToken.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"interfaces/UserToken.html":{},"coverage.html":{}}}],["userwhoservice",{"_index":554,"title":{"injectables/UserwhoService.html":{}},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/UserwhoService.html":{},"coverage.html":{}}}],["using",{"_index":573,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/ReadComponent.html":{},"components/UsersComponent.html":{}}}],["uuid",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["validators",{"_index":207,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(5",{"_index":219,"title":{},"body":{"components/AddCourseComponent.html":{}}}],["validators.minlength(6",{"_index":971,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":217,"title":{},"body":{"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":199,"title":{},"body":{"components/AddCourseComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"interfaces/JWTPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":933,"title":{},"body":{"components/RegisterComponent.html":{}}}],["var",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AddCourseService.html":{},"injectables/AddToCourseService.html":{},"components/AppComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/MessageService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":571,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1249,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"miscellaneous/variables.html":{}}}],["verifies",{"_index":936,"title":{},"body":{"components/RegisterComponent.html":{}}}],["version",{"_index":1204,"title":{},"body":{"index.html":{}}}],["via",{"_index":1054,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["view",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/LogoutService.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{},"components/UsersComponent.html":{}}}],["webmail",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["website",{"_index":425,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{}}}],["whether",{"_index":312,"title":{},"body":{"injectables/AddToCourseService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTPayload.html":{},"components/TopBarComponent.html":{},"interfaces/UserMy.html":{}}}],["white",{"_index":253,"title":{},"body":{"components/AddCourseComponent.html":{},"components/RegisterComponent.html":{},"components/TopBarComponent.html":{}}}],["who:userwhoservice",{"_index":626,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["width",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AddCourseComponent.html":{},"components/CourseHomeComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ReadComponent.html":{},"components/RegisterComponent.html":{}}}],["window",{"_index":563,"title":{},"body":{"components/CourseHomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["window.alert(\"incorrect",{"_index":989,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert(\"invalid",{"_index":643,"title":{},"body":{"components/CourseHomeComponent.html":{}}}],["window.alert(\"registered",{"_index":993,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert(\"registration",{"_index":991,"title":{},"body":{"components/RegisterComponent.html":{}}}],["window.alert('invalid",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{}}}],["window.alert(data['prior",{"_index":895,"title":{},"body":{"injectables/MessageService.html":{}}}],["window.alert(message['message_text",{"_index":890,"title":{},"body":{"injectables/MessageService.html":{}}}],["window.localstorage.clear",{"_index":833,"title":{},"body":{"components/LogoutComponent.html":{}}}],["wont",{"_index":958,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":835,"title":{},"body":{"components/LogoutComponent.html":{}}}],["wrap",{"_index":726,"title":{},"body":{"components/HomeComponent.html":{}}}],["xl",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/CourseHomeComponent.html":{}}}],["xs",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{}}}],["yes",{"_index":934,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z0",{"_index":961,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["z]{2,3}\\d{3",{"_index":965,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/about/about.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\n\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n        NOTIFY ME!\n        \n            Course project - CS251\n        \n        \n        \n            \n                This project consist of two parts - a dashboard and an android app. It helps students at IITB to keep track of all kinds of notifications at their fingertips that they receive from various sources such as moodle, webmail, piazza etc.,\n            \n        \n    \n\n\nTeam Members \n\n    \n        \n            \n                \n                \n                    Girish Srivatsa \n                    190050069\n                \n            \n        \n        \n            \n                \n                \n                    Krushnakant\n                    190100036\n                \n            \n        \n        \n            \n                \n                \n                    Prajeeth\n                    190050117\n                \n            \n        \n        \n            \n                \n                \n                    Gaurav\n                    190050037\n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                // Small tablets and large smartphones (landscape view)\n$screen-sm-min: 576px;\n// Small tablets (portrait view)\n$screen-md-min: 768px;\n// Tablets and small desktops\n$screen-lg-min: 992px;\n// Large tablets and desktops\n$screen-xl-min: 1200px;\n@mixin xs {\n    @media (max-width: #{$screen-sm-min}) {\n        @content;\n    }\n}\n@mixin sm {\n    @media (max-width: #{$screen-md-min}) {\n        @content;\n    }\n}\n\n// Medium devices\n@mixin md {\n    @media (max-width: #{$screen-lg-min}) {\n        @content;\n    }\n}\n// Large devices\n@mixin lg {\n    @media (max-width: #{$screen-xl-min}) {\n        @content;\n    }\n}\n\n.about {\n    box-align: center;\n}\n\n.logo {\n    margin-top: 5%;\n    float: left;\n    border: 1px solid black;\n    @include md {\n        width: 50%;\n        margin-left: 25%;\n        margin-right: 25%;\n    }\n    ;\n}\n\n.content {\n    margin-left: 5%;\n    margin-top: 8%;\n    border-radius: 5px;\n   \n    @include md {\n        margin-left: 0%;\n        text-align: center;\n    }\n}\n\n.cent {\n    text-align: center;\n    @include md {\n        text-align: center;\n    }\n}\n\n.members {\n    text-align: center;\n    font-size: 40px;\n    margin-top: 3%;\n    margin-bottom: 3%;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                NOTIFY ME!                    Course project - CS251                                                    This project consist of two parts - a dashboard and an android app. It helps students at IITB to keep track of all kinds of notifications at their fingertips that they receive from various sources such as moodle, webmail, piazza etc.,                        Team Members                                                                             Girish Srivatsa                     190050069                                                                                                            Krushnakant                    190100036                                                                                                            Prajeeth                    190050117                                                                                                            Gaurav                    190050037                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddCourseComponent.html":{"url":"components/AddCourseComponent.html","title":"component - AddCourseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddCourseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/add-course/add-course.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-course\n            \n\n            \n                styleUrls\n                ./add-course.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-course.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CourseForm\n                            \n                            \n                                loading\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, addCourse: AddCourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/add-course/add-course.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addCourse\n                                                  \n                                                        \n                                                                        AddCourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-course/add-course.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/add-course/add-course.component.ts:40\n                \n            \n\n\n            \n                \n                    If the course form is invalid it stops\nIt calss addCourse service to add the course of given details\nIf it is a success it navigates to the home page which will also show the newly added course\nElse it stays at the same page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CourseForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/add-course/add-course.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/add-course/add-course.component.ts:30\n                                \n                            \n                    \n                        \n                                To return form controls to the html page\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {AddCourseService} from '../services/add-course.service';\n@Component({\n  selector: 'app-add-course',\n  templateUrl: './add-course.component.html',\n  styleUrls: ['./add-course.component.scss']\n})\nexport class AddCourseComponent implements OnInit {\n  CourseForm: FormGroup;\n  loading = false;\n  submitted = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private addCourse:AddCourseService,\n  ) { }\n\n  ngOnInit(): void {\n    this.CourseForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      code: ['', [Validators.required, Validators.maxLength(5)]]\n  });\n  }\n  /**\n   * To return form controls to the html page\n   */\n  get f() { return this.CourseForm.controls; }\n  /**\n   * If the course form is invalid it stops\n   * \n   * It calss addCourse service to add the course of given details\n   * \n   * If it is a success it navigates to the home page which will also show the newly added course\n   * \n   * Else it stays at the same page\n   */\n  onSubmit(){\n    \n    this.submitted = true;\n    if (this.CourseForm.invalid) {\n      return;\n    }\n    this.loading = true;\n   // console.log(this.CourseForm.value);\n    this.addCourse.addCourse(this.CourseForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {console.log(data);\n                        this.router.navigate(['home']);\n                },\n                error => {\n                   // console.log(error);\n                    this.router.navigate(['addcourse']);\n                });\n  }\n}\n\n    \n\n    \n        \n\n\n    Add a Course!\n    \n        \n\n            \n                Name\n                \n                \n                    Name is required\n                \n            \n            \n                Code\n                \n                \n                    Code is required\n                    Code must be 5 characters\n                \n            \n            \n                \n                                            \n                         Add Course\n                \n                \n                \n                    Cancel\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./add-course.component.scss\n                \n                .card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10%;\n}\n\n.card-header {\n    font-size: 35px;\n    text-align: center;\n}\n\n.card-body {\n    // margin-top: 2%;\n    padding-top: 2%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    font-size: medium;\n}\n\n.form-group {\n    text-align: center;\n}\n\ninput[type=\"radio\"] {\n    margin: 0 10px;\n}\n\n.add {\n    padding-right: 10px;\n}\n\n.cancel {\n    color: white;\n}\n\n.cancel:hover {\n    color: blue;\n}\n\n.required{\n    font-size: medium;\n    color:blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Add a Course!                                        Name                                                    Name is required                                                        Code                                                    Code is required                    Code must be 5 characters                                                                                                                             Add Course                                                                    Cancel                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddCourseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddCourseService.html":{"url":"injectables/AddCourseService.html","title":"injectable - AddCourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddCourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-course.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-course.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCourse\n                        \n                        \n                    \n                \n            \n            \n                \naddCourse(data: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/add-course.service.ts:25\n                \n            \n\n\n            \n                \n                    This function sends a post request to ADD_COURSE_URL sending the course object with httpOptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        this represents the course object to be added.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Post Request\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Course} from '../_models/course';\nimport {BASE_URL} from './base';\nconst COURSE_URL = BASE_URL+'/api/courses/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddCourseService {\n\n  constructor(\n    private http:HttpClient,\n  ) { }\n  /**\n   * This function sends a post request to ADD_COURSE_URL sending the course object with httpOptions\n   * @param data this represents the course object to be added.\n   * @return Post Request\n   */\n  addCourse(data:Course): Observable{\n    var ADD_COURSE_URL=COURSE_URL;\n    return this.http.post(ADD_COURSE_URL,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddToCourseService.html":{"url":"injectables/AddToCourseService.html","title":"injectable - AddToCourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddToCourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-to-course.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddToCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-to-course.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddToCourse\n                        \n                        \n                    \n                \n            \n            \n                \nAddToCourse(username: string, id: number, status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/add-to-course.service.ts:27\n                \n            \n\n\n            \n                \n                    AddToCourse service adds a student/TA in a particular course\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This represents the username of the student to be added in the course\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This represents the course id\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This decides whether the person is a TA or a student in that course\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Course} from '../_models/course';\nimport {CourseStatus} from '../_models/course-status';\nimport {BASE_URL} from './base';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddToCourseService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n  /**\n   * AddToCourse service adds a student/TA in a particular course\n   * \n   * @param username This represents the username of the student to be added in the course\n   * @param id This represents the course id\n   * @param status This decides whether the person is a TA or a student in that course\n   */\n  AddToCourse(username:string,id:number,status:string): Observable{\n    const URL=BASE_URL+'/api/user/'+id.toString()+'/'+username+'/';\n    var data = {};\n    data['status']=status\n    return this.http.post(URL,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"dashboard\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  title = \"dashboard\";\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAddCourseComponent\n\nAddCourseComponent\n\nAppModule -->\n\nAddCourseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCourseHomeComponent\n\nCourseHomeComponent\n\nAppModule -->\n\nCourseHomeComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nReadComponent\n\nReadComponent\n\nAppModule -->\n\nReadComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AddCourseComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CourseHomeComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            ReadComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TopBarComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './register/register.component';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {UserService} from './services/user.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AddCourseComponent } from './add-course/add-course.component'\nimport { CourseHomeComponent } from './course-home/course-home.component';\nimport { combineAll } from 'rxjs/operators';\nimport { AboutComponent } from './about/about.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatExpansionModule }from '@angular/material/expansion';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {AuthenticationService,AuthGuard,AuthInterceptor} from './services/authentication.service';\nimport { UsersComponent } from './users/users.component';\nimport { ReadComponent } from './read/read.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TopBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    LogoutComponent,\n    AddCourseComponent,\n    CourseHomeComponent,\n    AboutComponent,\n    UsersComponent,\n    ReadComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent,canActivate:[AuthGuard]},\n      {path: 'about', component: AboutComponent},\n      {path: 'addcourse',component: AddCourseComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id', component: CourseHomeComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id/list', component: UsersComponent,canActivate:[AuthGuard]},\n      {path: 'course/:id/read', component: ReadComponent,canActivate:[AuthGuard]},\n      {path: 'login', component: LoginComponent},\n      {path: 'register', component: RegisterComponent},\n      {path: 'logout', component: LogoutComponent,},\n      {path:'**',component:LoginComponent},\n    ]),\n    NgbModule,\n    MatExpansionModule,\n    NoopAnimationsModule,\n  ],\n  providers: [\n    UserService,\n    AuthenticationService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/authentication.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, logout: LogoutService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:121\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logout\n                                                  \n                                                        \n                                                                        LogoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        this returns a boolean value which tells whether its logged in or not\nIf you are logged in this refreshes the token to make sure the website isnt idle for long\nIf not logged in it logs out and redirects to login page\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                decode\n                            \n                            \n                                getExpiration\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isLoggedOut\n                            \n                            \n                                login\n                            \n                            \n                                refreshToken\n                            \n                            \n                                    Private\n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decode(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExpiration\n                        \n                        \n                    \n                \n            \n            \n                \ngetExpiration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedOut\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(data: Login)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSession(authResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authResult\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUserValue\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/course.ts\n        \n\n            \n                Description\n            \n            \n                course object consist of course name and course code which is 5 character\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Course {\n    name: string;\n    code: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseHomeComponent.html":{"url":"components/CourseHomeComponent.html","title":"component - CourseHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/course-home/course-home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-home\n            \n\n            \n                styleUrls\n                ./course-home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./course-home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                a_s_l\n                            \n                            \n                                a_t_l\n                            \n                            \n                                course_id\n                            \n                            \n                                course_status\n                            \n                            \n                                m_s_l\n                            \n                            \n                                m_t_l\n                            \n                            \n                                message\n                            \n                            \n                                messages\n                            \n                            \n                                submitted_add\n                            \n                            \n                                submitted_m\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddStudent\n                            \n                            \n                                AddTA\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                SendStudent\n                            \n                            \n                                SendTA\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, activatedRoute: ActivatedRoute, who: UserwhoService, addtocourse: AddToCourseService, messageService: MessageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/course-home/course-home.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        who\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addtocourse\n                                                  \n                                                        \n                                                                        AddToCourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddStudent\n                        \n                        \n                    \n                \n            \n            \n                \nAddStudent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:99\n                \n            \n\n\n            \n                \n                    This function adds a student which can be done by TA/Prof\nIf username is invalid it stops\nElse it calls the addToCourse to add the student\nIf the process is successful it window alerts the process is successful else it alerts process failed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddTA\n                        \n                        \n                    \n                \n            \n            \n                \nAddTA()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:119\n                \n            \n\n\n            \n                \n                    This function adds a student which can be done only by the professor\nRest is similar to AddStudent()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:68\n                \n            \n\n\n            \n                \n                    First course_id variable is extracted from the path using activatedRoute\nThen who service is called which updates the course_status variable\nThen messageService is called which makes a get request to fetch all the messages sent in the course\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SendStudent\n                        \n                        \n                    \n                \n            \n            \n                \nSendStudent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:163\n                \n            \n\n\n            \n                \n                    This function is used to send message to students which is allowed for both the  professor and TA's\nRest is similar as SendTA()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SendTA\n                        \n                        \n                    \n                \n            \n            \n                \nSendTA()\n                \n            \n\n\n            \n                \n                    Defined in src/app/course-home/course-home.component.ts:143\n                \n            \n\n\n            \n                \n                    This function is used to send message to TA which is allowed only for the professor\nIf the message is invalid it stops\nElse it calls the send message service with last argument as TA to send the message\nIf the message is sent the page is reloaded and the message sent will be seen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            a_s_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:36\n                            \n                        \n\n                \n                    \n                        add student loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            a_t_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:40\n                            \n                        \n\n                \n                    \n                        add TA loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_id\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:21\n                            \n                        \n\n                \n                    \n                        this stores course id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_status\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            m_s_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:48\n                            \n                        \n\n                \n                    \n                        message student loading to check if the process is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            m_t_l\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:44\n                            \n                        \n\n                \n                    \n                        message TA loading to check if the process is loading.Note only profs can send message to TA and student can't see them\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:52\n                            \n                        \n\n                \n                    \n                        to store the set of messages sent in the course to render in the html\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted_add\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:26\n                            \n                        \n\n                \n                    \n                        to store if add person option is chosen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted_m\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:30\n                            \n                        \n\n                \n                    \n                        to store if send message is chosen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/course-home/course-home.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/course-home/course-home.component.ts:86\n                                \n                            \n                    \n                        \n                                to provide form controls to the html part\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {UserwhoService}  from '../services/userwho.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {AddToCourseService} from '../services/add-to-course.service';\nimport {MessageService} from '../services/message.service';\n//import {MatExpansionModule} from '@angular/material/expansion';\n//import { Observable } from 'rxjs';\n//import {Message} from '../_models/message';\n@Component({\n  selector: 'app-course-home',\n  templateUrl: './course-home.component.html',\n  styleUrls: ['./course-home.component.scss']\n})\nexport class CourseHomeComponent implements OnInit {\n  /**\n   * this stores course id\n   */\n  course_id;\n  course_status;\n  /**\n   * to store if add person option is chosen\n   */\n  submitted_add=false;\n  /**\n   * to store if send message is chosen\n   */\n  submitted_m=false;\n  username:FormControl;\n  message:FormGroup;\n  /**\n   * add student loading to check if the process is loading\n   */\n  a_s_l=false;\n  /**\n   * add TA loading to check if the process is loading\n   */\n  a_t_l=false;\n  /**\n   * message TA loading to check if the process is loading.Note only profs can send message to TA and student can't see them\n   */\n  m_t_l=false;\n  /**\n   * message student loading to check if the process is loading\n   */\n  m_s_l=false;\n  /**\n   * to store the set of messages sent in the course to render in the html\n   */\n  messages\n  constructor(\n    private formBuilder: FormBuilder,\n    private activatedRoute:ActivatedRoute,\n    private who:UserwhoService,\n    private addtocourse:AddToCourseService,\n    private messageService:MessageService,\n    private router:Router,\n  ) { }\n  /**\n   * First course_id variable is extracted from the path using activatedRoute\n   * \n   * Then who service is called which updates the course_status variable\n   * \n   * Then messageService is called which makes a get request to fetch all the messages sent in the course\n   */\n  ngOnInit(): void {\n    this.course_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.who.STATUS(this.course_id)\n    .pipe(first())\n    .subscribe(data=>{\n      console.log(data);\n      this.course_status=data['status'];\n    });\n    this.username=new FormControl('',Validators.required);\n    this.message=this.formBuilder.group({\n      message_text: ['', Validators.required],\n      message_priority: [false, Validators.required]\n  });\n    this.messageService.GET_MESSAGES(this.course_id).subscribe(data1=>this.messages=data1);\n  }\n  /**\n   * to provide form controls to the html part\n   */\n  get f()\n  {\n    return this.message.controls;\n  }\n  /**\n   * This function adds a student which can be done by TA/Prof\n   * \n   * If username is invalid it stops\n   * \n   * Else it calls the addToCourse to add the student\n   * \n   * If the process is successful it window alerts the process is successful else it alerts process failed\n   */\n  AddStudent(){\n    this.submitted_add=true;\n    if(this.username.invalid){\n      window.alert(\"Invalid Username\");\n      return ;\n    }\n    this.a_s_l=true;\n    this.addtocourse.AddToCourse(this.username.value,this.course_id,'student').pipe(first())\n    .subscribe(\n      data=>{window.alert(\"Student is added successfully\");location.reload();},\n      error=>{window.alert(\"Adding student is unsuccessful\");}\n    )\n    this.a_s_l=false;\n    this.submitted_add=false;\n  }\n  /**\n   * This function adds a student which can be done only by the professor\n   * \n   * Rest is similar to AddStudent()\n   */\n  AddTA(){\n    this.submitted_add=true;\n    if(this.username.invalid){\n      return ;\n    }\n    this.a_t_l=true;\n    this.addtocourse.AddToCourse(this.username.value,this.course_id,'TA').pipe(first())\n    .subscribe(\n      data=>{console.log(data);window.alert(\"TA is added successfully\");location.reload();},\n      error=>{window.alert(\"adding TA unsuccessful\");}\n      \n    )\n    this.a_t_l=false;\n    this.submitted_add=false;\n  }\n  /**\n   * This function is used to send message to TA which is allowed only for the professor\n   * \n   * If the message is invalid it stops\n   * \n   * Else it calls the send message service with last argument as TA to send the message\n   * \n   * If the message is sent the page is reloaded and the message sent will be seen\n   */\n  SendTA(){\n    this.submitted_m=true;\n    if(this.message.invalid){\n      return ;\n    }\n    this.m_t_l=true;\n    this.messageService.SEND_MESSAGE(this.course_id,this.message.value,'TA').pipe(first())\n    .subscribe(\n      data=>{console.log(data);\n        location.reload();\n      }\n    );\n    this.m_t_l=false;\n    this.submitted_m=false;\n  }\n  /**\n   * This function is used to send message to students which is allowed for both the  professor and TA's\n   * \n   * Rest is similar as SendTA()\n   */\n  SendStudent(){\n    this.submitted_m=true;\n    if(this.message.invalid){\n      return ;\n    }\n    this.m_s_l=true;\n    this.messageService.SEND_MESSAGE(this.course_id,this.message.value,'student').pipe(first())\n    .subscribe(\n      data=>{console.log(data);\n        location.reload();\n      }\n    )\n    this.m_s_l=false;\n    this.submitted_m=false;\n  }\n}\n\n    \n\n    \n            \n     \n        \n        \n            Add a student / TA\n        \n    \n    \n        \n              Username:\n              \n              \n                Username is required\n              \n              Add TA\n              Add Student  \n          \n      \n \n\n    \n     \n         -->\n        \n            Send a Message!\n        \n    \n    \n        \n            \n                Message:\n                \n                \n                    High Priority\n                    \n                \n                \n                    Low Priority\n                    \n                -->\n                \n                Lower Priority\n                \n                High Priority\n                \n                    Message cannot be empty\n                \n                \n                    Send to TA\n                \n                \n                    Send to Students  \n                \n            \n        \n      \n \n\n\n    Previous Messages\n         \n        \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n           \n        \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n    \n\n   Low Priority Messages:\n         \n        \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n            \n                \n                    \n                        {{message.from_username}}\n                    \n                    \n                        {{message.message}}\n                    \n                \n            \n               \n    \n    \n    Low Priority Messages:\n         \n        \n            \n                \n                    {{message.from_username}}\n                \n                \n                    {{message.message}}\n                \n            \n               \n    -->\n\n\n    \n\n    \n                \n                    ./course-home.component.scss\n                \n                .form-control {\n    width: 70%;\n    margin-left: 15%;\n    margin-right: 15%;\n    margin-bottom: 20px;\n    height: 35px;\n    font-size: medium;\n    // text-align: center;\n    // margin-top: 20%;\n}\n\n.mat-expansion-panel {\n    overflow: inherit !important;\n}\n\n.btn-xl {\n    padding: 10px 20px;\n    font-size: 15px;\n    border-radius: 10px;\n}\n\n.add {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: 20%;\n    margin-top: 10%;\n    text-align: center;\n}\n.send {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: 20%;\n    text-align: center;\n}\n\n.message {\n    margin-top: 5%;\n    height: 20%;\n}\n\n.message-title {\n    margin-left: 50px;\n}\n\n.container {\n    margin-top: 5%;\n}\n\n.priority{\n    font-size: 20px;\n}\n\n.card{\n    \n    margin-bottom: 2%;\n}\n\n.prof{\n    margin-right: 40%;\n}\n\n.TA{\n    margin-left: 70%;\n}\n\n.card-header{\n    color: blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                     Add a student / TA                                      Username:                                            Username is required                            Add TA              Add Student                                     -->                    Send a Message!                                                    Message:                                                    High Priority                                                                        Low Priority                                    -->                                Lower Priority                                High Priority                                    Message cannot be empty                                                    Send to TA                                                    Send to Students                                                 Previous Messages                                                                                         {{message.from_username}}                                                                {{message.message}}                                                                                                                        {{message.from_username}}                                                                {{message.message}}                                                                                                                                           {{message.from_username}}                                                                {{message.message}}                                                                                                                        {{message.from_username}}                                                                {{message.message}}                                                                   Low Priority Messages:                                                                                         {{message.from_username}}                                                                {{message.message}}                                                                                                                        {{message.from_username}}                                                                {{message.message}}                                                                           Low Priority Messages:                                                                 {{message.from_username}}                                                    {{message.message}}                                               -->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CourseStatus.html":{"url":"interfaces/CourseStatus.html","title":"interface - CourseStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CourseStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/course-status.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\nexport interface CourseStatus {\n    course:Course;\n    status:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courses\n                            \n                            \n                                is_professor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddCourse\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(who: UserwhoService, router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        who\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            AddCourse\n                        \n                        \n                    \n                \n            \n            \n                \nAddCourse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:47\n                \n            \n\n\n            \n                \n                    This allows the professor to add a new course\nThis function leads to a different component add course\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:31\n                \n            \n\n\n            \n                \n                    Calls who service to get the set of courses of a person\nAlso it updates the is_professor variable \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n                \n                    \n                        Contains the set of courses the user is associated with\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:20\n                            \n                        \n\n                \n                    \n                        Stores if the user is a professor or not\nThe main constraint is that a professor cannot be a student in another course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {UserwhoService} from '../services/userwho.service';\nimport {AuthenticationService} from '../services/authentication.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  /**\n   * Contains the set of courses the user is associated with\n   */\n  courses;\n  /**\n   * Stores if the user is a professor or not\n   * \n   * The main constraint is that a professor cannot be a student in another course\n   */\n  is_professor;\n  constructor(\n    private who: UserwhoService,\n    private router: Router,\n    private authenticationService : AuthenticationService,\n  ) { }\n  /**\n   * Calls who service to get the set of courses of a person\n   * \n   * Also it updates the is_professor variable \n   */\n  ngOnInit(): void {\n    this.who.WHO().subscribe(data => {console.log(data);\n                                      this.courses = data;\n                                    });\n    if(localStorage.getItem('is_professor')=='true'){\n      this.is_professor=true;\n    }\n    else{\n      this.is_professor=false;\n    }\n  }\n  /**\n   * This allows the professor to add a new course\n   * \n   * This function leads to a different component add course\n   */\n  AddCourse(){\n    console.log('clicked');\n    this.router.navigate(['addcourse']);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        Add Course\n    \n\n\n\n    \n        \n            \n            \n                {{course.code}}\n                 {{course.name}}\n                List\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .flex-container {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    padding-top: 20px;\n    margin-left: 10%;\n    margin-right: 10%;\n    gap: 40px;\n}\n\n.tot {\n    border: 1px solid black;\n}\n\n.card bg-danger {\n    flex-grow: 0;\n    flex-shrink: 0;\n    flex-basis: calc(50% - 10px);\n    /* separate properties for IE11 upport */\n    background: orange;\n    margin: 5px;\n    padding-top: 30px;\n}\n\n.add_course_button {\n    padding-top: 40px;\n    padding-right: auto;\n    padding-left: 40px;\n        \n}\n\n.card-img-top {\n    width: 100%;\n    height: 15vw;\n    object-fit: cover;\n}\n\n.addCourse {\n    background-color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Add Course                                                        {{course.code}}                 {{course.name}}                List                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTPayload.html":{"url":"interfaces/JWTPayload.html","title":"interface - JWTPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JWTPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        exp\n                                \n                                \n                                        user_id\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Login} from '../_models/login';\nimport {UserMy} from '../_models/user-my';\nimport {UserToken} from '../_models/user-token';\nimport * as uuid from 'uuid';\nimport {BASE_URL} from './base';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\nimport { tap, shareReplay } from 'rxjs/operators';\nimport { LogoutService } from './logout.service';\n\nimport * as jwtDecode from 'jwt-decode';\nimport * as moment from 'moment';\nconst LOGIN_URL = BASE_URL+'/api/auth/get-token/';\nconst REFRESH_URL = BASE_URL+'/api/auth/refresh-token/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\ninterface JWTPayload {\n  user_id: number;\n  username: string;\n  email: string;\n  exp: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  currentUserValue;\n  constructor(\n    private http: HttpClient,\n  ) { }\n  private setSession(authResult) {\n    console.log(\"start\");\n    const token = authResult.token;\n    console.log(\"token got\");\n    const payload = this.decode(token);\n    console.log(\"payload got\");\n    const expiresAt = moment.unix(payload.exp);\n    console.log(\"expiry got\");\n    console.log(authResult.token);\n    localStorage.setItem('token', authResult.token);\n    localStorage.setItem('expires_at', JSON.stringify(expiresAt.valueOf()));\n  }\n\n  get token(): string {\n    return localStorage.getItem('token');\n  }\n\n  private decode(token: string) {\n    try {\n        return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n        console.log(\"error decoding token\");\n    }\n  }\n\n  refreshToken() {\n    if (moment().isBetween(this.getExpiration().subtract(1, 'days'), this.getExpiration())) {\n      return this.http.post(REFRESH_URL,{token:this.token})\n      .pipe(\n        tap(response => this.setSession(response)),\n        shareReplay(),\n      ).subscribe();\n    }\n  }\n\n  getExpiration() {\n    const expiration = localStorage.getItem('expires_at');\n    const expiresAt = JSON.parse(expiration);\n\n    return moment(expiresAt);\n  }\n\n  login(data: Login)\n  { console.log(\"1\");\n    return this.http.post(LOGIN_URL,data)\n    .pipe(\n      tap(response => {\n        console.log(\"init\");\n        this.setSession(response);\n      console.log(\"login\");}),\n      shareReplay(),\n    );\n  }\n\n  isLoggedIn() {\n    return moment().isBefore(this.getExpiration());\n  }\n\n  isLoggedOut() {\n    return !this.isLoggedIn();\n  }\n}\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'JWT '.concat(token))\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router, private logout:LogoutService) { }\n  /**\n   * @return this returns a boolean value which tells whether its logged in or not\n   * If you are logged in this refreshes the token to make sure the website isnt idle for long\n   * If not logged in it logs out and redirects to login page\n   */\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      this.authService.refreshToken();\n\n      return true;\n    } else {\n      this.logout.logout();\n      this.router.navigate(['login']);\n\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login.html":{"url":"interfaces/Login.html","title":"interface - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/login.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Login {\n    username: string;\n    password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService, idService: UserwhoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        idService\n                                                  \n                                                        \n                                                                        UserwhoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:77\n                \n            \n\n\n            \n                \n                    This function performs the logic\nIf form is invalid stop\nCheck for invalid login and if success then call idService\nIf the login was successful after matching the data then redirect to the course page\nAlso before moving onto the home page the function also sets the is_professor variable in the local storage which will be used\nElse window alert that login was unsuccessful\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        variable to account for server/website loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        stores input data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        check if user submitted the data\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:60\n                                \n                            \n                    \n                        \n                                function to return form controls\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {UserwhoService} from '../services/userwho.service';\nimport { User } from '../_models';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    /**\n     * stores input data\n     */\n    loginForm: FormGroup;\n    /**\n     * variable to account for server/website loading\n     */\n    loading = false;\n    /**\n     * check if user submitted the data\n     */\n    submitted = false;\n    returnUrl: string;\n    \n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private idService:UserwhoService,\n        )\n    {\n        // redirect to home if already logged in\n        if (localStorage.getItem('token')!=null && localStorage.getItem('token')!=\"undefined\") {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit()\n    {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n\n    /**\n     * function to return form controls\n     */\n    get f(){\n        return this.loginForm.controls;\n    }\n\n    /**\n     * This function performs the logic\n     * \n     * If form is invalid stop\n     * \n     * Check for invalid login and if success then call idService\n     * \n     * If the login was successful after matching the data then redirect to the course page\n     * \n     * Also before moving onto the home page the function also sets the is_professor variable in the local storage which will be used\n     * \n     * Else window alert that login was unsuccessful\n     */\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.loginForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    const tok=localStorage.getItem('token');\n                    if(tok==null||tok=='undefined'){\n                        this.loading=false;\n                        window.alert('invalid login');\n                        this.router.navigate(['login']);\n                    }\n                    else{\n                        this.idService.IDENTITY().pipe(first())\n                        .subscribe(\n                            data=>{console.log(data);\n                            if(data['is_professor']==true){\n                                localStorage.setItem('is_professor','true');\n                            }\n                            else{\n                                localStorage.setItem('is_professor','false');\n                            }\n                            this.router.navigate([this.returnUrl]);\n                        });\n                    }\n                    \n                },\n                error => {\n                    this.loading = false;\n                });\n    }\n\n}\n\n    \n\n    \n        \n\n\n    \n         Login\n    \n    \n        \n            \n                \n\n                    \n                    \n                        Username is required\n                    \n                \n                \n                    \n                    \n                        Password is required\n                    \n                \n                \n                    \n                        \n                        Login\n                        \n                    \n                    Don't have an account? Sign Up Here\n                \n            \n        \n        \n    Username\n    \n\n    Password\n    \n        \n    Login\n    \n       Remember me\n    \n  -->\n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .card-header {\n    font-size: 35px;\n    color: black;\n    text-align: center;\n}\n\n.card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10%;\n    padding-bottom: 20%;\n}\n\n.card-body {\n    margin-top: 50px;\n    padding-top: 50px;\n}\n\n.space-it {\n    margin-top: 30px;\n    padding-top: 30%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    margin-bottom: 20px;\n}\n\n.login {\n    margin-right: 20px;\n}\n\n.button {\n    text-align: center;\n}\n\n.form-control{\n    font-size: medium;\n}\n\n.login_button{\n    background-color: slateblue;\n    font-size: 15px;\n    border-radius: 10px;\n      \n}\n\n.required{\n    font-size: large;\n    margin-left: 50px;\n    color: chartreuse;\n}\n\n\n.dont-have{\n    background-color:red;\n    padding-left: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Login                                                                                                            Username is required                                                                                                                    Password is required                                                                                                                        Login                                                                Don\\'t have an account? Sign Up Here                                                Username        Password                Login           Remember me      -->    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/logout/logout.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/logout/logout.component.ts:20\n                \n            \n\n\n            \n                \n                    This functions clears the local storage and moves out\nThen it takes to the login page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n//import { LogoutService } from '../services/logout.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    //private logout: LogoutService,\n    private router:Router,\n  ) { }\n/**\n * This functions clears the local storage and moves out\n * \n * Then it takes to the login page\n */\n  ngOnInit(): void {\n    //this.logout.logout()\n    window.localStorage.clear();\n    this.router.navigate(['/login']);\n  \n  }\n\n}\n\n    \n\n    \n        logout works!\n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoutService.html":{"url":"injectables/LogoutService.html","title":"injectable - LogoutService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logout.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logout.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/logout.service.ts:23\n                \n            \n\n\n            \n                \n                    This function just clears local storage and logs out\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {BASE_URL} from './base';\nconst LOGOUT_URL = BASE_URL+'/api/auth/logout/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogoutService {\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n  /**\n   * This function just clears local storage and logs out\n   */\n  logout() {\n    /*\n    localStorage.removeItem('token');\n    localStorage.removeItem('expires_at');*/\n    localStorage.clear();\n    //console.log(\"hi\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/message.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        by\n                                \n                                \n                                        course\n                                \n                                \n                                        from_username\n                                \n                                \n                                        id\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        message\n                                \n                                \n                                        prior\n                                \n                                \n                                        read_by\n                                \n                                \n                                        sent\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        by\n                                    \n                                \n                                \n                                    \n                                        by:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from_username\n                                    \n                                \n                                \n                                    \n                                        from_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prior\n                                    \n                                \n                                \n                                    \n                                        prior:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        read_by\n                                    \n                                \n                                \n                                    \n                                        read_by:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    It stores who all read the message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sent\n                                    \n                                \n                                \n                                    \n                                        sent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    it stores the type who should receive,it can be student or TA\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    id:number;\n    sent:string;\n    message:string;\n    /**\n     * it stores the type who should receive,it can be student or TA\n     */\n    to:string;\n    course:number;\n    by:number;\n    prior:boolean;\n    /**\n     * It stores who all read the message\n     */\n    read_by:Array;\n    from_username:string;\n    is_professor:boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageSent.html":{"url":"interfaces/MessageSent.html","title":"interface - MessageSent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageSent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/message_sent.ts\n        \n\n            \n                Description\n            \n            \n                this interface is for message content which contains the message text and the message priority \nwhich is either high or low\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message_priority\n                                \n                                \n                                        message_text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message_priority\n                                    \n                                \n                                \n                                    \n                                        message_priority:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message_text\n                                    \n                                \n                                \n                                    \n                                        message_text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MessageSent {\n    message_text:string;\n    message_priority:boolean;\n   \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                GET_MESSAGES\n                            \n                            \n                                READ_MESSAGE\n                            \n                            \n                                SEND_MESSAGE\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GET_MESSAGES\n                        \n                        \n                    \n                \n            \n            \n                \nGET_MESSAGES(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:28\n                \n            \n\n\n            \n                \n                    Sends a get request to URL to get the messages\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Represents the course id for which the messages are to be obtained\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Array Object of Messages\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            READ_MESSAGE\n                        \n                        \n                    \n                \n            \n            \n                \nREAD_MESSAGE(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:61\n                \n            \n\n\n            \n                \n                    This service sends a GET request to URL to get the list of users who read a particular message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Array of User Objects who read the message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            SEND_MESSAGE\n                        \n                        \n                    \n                \n            \n            \n                \nSEND_MESSAGE(id: number, message: MessageSent, to: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:39\n                \n            \n\n\n            \n                \n                    Send Message service makes a post request to URL passing a message object and also whom to send\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course Id\n\n                                    \n                                \n                                \n                                    message\n                                    \n                                                MessageSent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to be sent\n\n                                    \n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Which stores whom to send(Either only to TA or both)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Post Request \n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Message} from '../_models/message';\nimport {ReadBy} from '../_models/read_by';\nimport {MessageSent} from '../_models/message_sent';\nimport {BASE_URL} from './base';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(\n    private http:HttpClient,\n  ) { }\n  /**\n   * Sends a get request to URL to get the messages\n   * \n   * @param id Represents the course id for which the messages are to be obtained\n   * \n   * @return Array Object of Messages\n   */\n  GET_MESSAGES(id:number):Observable{\n    const URL=BASE_URL+'/api/messages/'+id.toString()+'/';\n    return this.http.get(URL,httpOptions);\n  }\n  /**\n   * Send Message service makes a post request to URL passing a message object and also whom to send\n   * @param id Course Id\n   * @param message Message to be sent\n   * @param to Which stores whom to send(Either only to TA or both)\n   * @return Post Request \n   */\n  SEND_MESSAGE(id:number,message:MessageSent,to:string): Observable{\n    const URL=BASE_URL+'/api/messages/'+id.toString()+'/';\n    var data={};\n    data['to']=to;\n    data['message']=message['message_text'];\n    window.alert(message['message_text']);\n    data['prior']=message['message_priority'];\n\n    if(data['prior']==\"true\")\n      data['prior']=true;\n    else\n      data['prior']=false;\n\n   // window.alert(data['prior']);\n    console.log(data);\n    return this.http.post(URL,data,httpOptions);\n  }\n  /**\n   * This service sends a GET request to URL to get the list of users who read a particular message\n   * @param id Message Id\n   * @return Array of User Objects who read the message\n   */\n  READ_MESSAGE(id:number)\n  {\n    const URL=BASE_URL+'/api'+'/readby/'+id.toString()+'/';\n    return this.http.get(URL,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadBy.html":{"url":"interfaces/ReadBy.html","title":"interface - ReadBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/read_by.ts\n        \n\n            \n                Description\n            \n            \n                interface which represents the username of people who read a particular message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ReadBy{\n    username:String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReadComponent.html":{"url":"components/ReadComponent.html","title":"component - ReadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/read/read.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-read\n            \n\n            \n                styleUrls\n                ./read.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./read.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message_id\n                            \n                            \n                                read_list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, activatedRoute: ActivatedRoute, messageservice: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/read/read.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageservice\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/read/read.component.ts:28\n                \n            \n\n\n            \n                \n                    First the message id is extracted from the path using activatedRoute\nThen message service is called to get the set of users who read the messsage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/read/read.component.ts:15\n                            \n                        \n\n                \n                    \n                        contains the particular message id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/read/read.component.ts:19\n                            \n                        \n\n                \n                    \n                        Contains the set of people who read the message\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {MessageService} from '../services/message.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {BASE_URL} from  '../services/base';\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.scss']\n})\nexport class ReadComponent implements OnInit {\n  /**\n   * contains the particular message id\n   */\n  message_id:any;\n  /**\n   * Contains the set of people who read the message\n   */\n  read_list:any;\n  constructor(private http:HttpClient,\n    private activatedRoute:ActivatedRoute,\n    private messageservice:MessageService,) { }\n/**\n * First the message id is extracted from the path using activatedRoute\n * \n * Then message service is called to get the set of users who read the messsage\n */\n  ngOnInit(): void {\n    this.message_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.messageservice.READ_MESSAGE(this.message_id).subscribe(data=>{this.read_list=data;});\n    //console.log(\"hai\");\n    //console.log(this.read_list);\n    //this.userservice.get_students(this.course_id).subscribe((data)=>{this.list_of_students=data;});\n  }\n\n}\n\n    \n\n    \n        People who read the message:\n\n    \n        {{reader.username}}       \n    \n    \n\n\n    \n\n    \n                \n                    ./read.component.scss\n                \n                .card{\n    width: 40%;\n    margin-left: 5%;\n}\n\n.h1{\n    color:blue;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'People who read the message:            {{reader.username}}               '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth_code_form\n                            \n                            \n                                auth_code_status\n                            \n                            \n                                loading\n                            \n                            \n                                registerForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                                \n                                    f1\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:89\n                \n            \n\n\n            \n                \n                    This function performs the logic when the user submits \nFirst checks if the field values are invalid if yes stops\nThen it checks for the authentication code status\nIt verifies with the regular expression and if matches proceeds by calling the register service\nIf everything is successful it takes back to login page else window alert message    \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth_code_form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth_code_status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:38\n                            \n                        \n\n                \n                    \n                        to check if the authentication code matches with the form needed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:30\n                            \n                        \n\n                \n                    \n                        variable to account for loading time and for frontend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n                \n                    \n                        Registration form to input the fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:34\n                            \n                        \n\n                \n                    \n                        variable to account if submitted or not\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:72\n                                \n                            \n                    \n                        \n                                to return controls for fields for registration form\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        f1\n                    \n                \n\n                \n                    \n                        getf1()\n                    \n                \n                            \n                                \n                                    Defined in src/app/register/register.component.ts:77\n                                \n                            \n                    \n                        \n                                to return controls for auth form \n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { UserService } from '../services/user.service';\n/**\n * This expression is a regular expression representing student code\n * So students only with this matching will be allowed,else wont be\n */\nconst student_expression=/[1-2]\\d[A-Z0-9]\\d{6}/;\n/**\n * This is the authentication code regular expression for professors\n */\nconst professor_expression=/P[A-Z]{2,3}\\d{3}/;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\n\nexport class RegisterComponent implements OnInit {\n    /**\n     * Registration form to input the fields\n     */\n    registerForm: FormGroup;\n    /**\n     * variable to account for loading time and for frontend\n     */\n    loading = false;\n    /**\n     * variable to account if submitted or not\n     */\n    submitted = false;\n    /**\n     * to check if the authentication code matches with the form needed\n     */\n    auth_code_status=false;\n    auth_code_form:FormGroup;\n    \n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private userService: UserService,\n        /*private authenticationService: AuthenticationService,\n        private alertService: AlertService*/\n    ) { \n        // redirect to home if already logged in\n        /*if (this.authenticationService.currentUserValue) { \n            this.router.navigate(['/']);\n        }*/\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            email: ['',Validators.required,],\n            \n            is_professor:[false,Validators.required],\n        });\n        this.auth_code_form=this.formBuilder.group({\n            auth_code: ['',Validators.required],\n        })\n    }\n\n    // convenience getter for easy access to form fields\n    /**\n     * to return controls for fields for registration form\n     */\n    get f() { return this.registerForm.controls; }\n\n    /**\n     * to return controls for auth form \n     */\n    get f1() {return this.auth_code_form.controls;}\n\n    /**\n     * This function performs the logic when the user submits \n     * \n     * First checks if the field values are invalid if yes stops\n     * \n     * Then it checks for the authentication code status\n     * \n     * It verifies with the regular expression and if matches proceeds by calling the register service\n     * \n     * If everything is successful it takes back to login page else window alert message    */\n    onSubmit() {\n        this.submitted = true;\n      //console.log(this.submitted);\n        \n        if (this.registerForm.invalid || this.auth_code_form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        var s=this.f1.auth_code.value;\n        \n        if (s!=null && s!=\"undefined\")\n        {\n            if(student_expression.test(s)==true)\n            {\n                this.auth_code_status=true;\n                \n            }\n            else if(professor_expression.test(s)==true)\n            {\n                this.auth_code_status=true;\n                this.registerForm.patchValue({is_professor:true});\n            }\n            else\n            {\n                this.auth_code_status=false;\n            }\n        }\n        else\n        {\n            this.auth_code_status=false;\n        }\n        if(!this.auth_code_status)\n        {\n            window.alert(\"incorrect authentication code on first place\");\n            this.loading=false;\n            window.alert(\"registration unsuccessful\");\n            return;\n        }\n        this.userService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {window.alert(\"registered successfully\");\n                         this.router.navigate(['/login']);\n                },\n                error => {\n                    window.alert(\"registration unsuccessful\");\n                    this.loading = false;\n                });\n          //console.log(this.registerForm.value);\n    }\n}\n\n    \n\n    \n        \n\n\n    Register\n    \n        \n\n            \n                Username:\n                \n                \n                    Username is required\n                \n            \n            \n                Email:\n                \n                \n                    Email is required\n                \n            \n            \n                Password:\n                \n                \n                    Password is required\n                    Password must be at least 6 characters\n                \n            \n        \n           \n\n        \n            \n                Authentication Code:\n                \n                \n                    Authentication Code is required\n                \n            \n        \n\n        \n            \n                \n                 Register\n            \n            \n            \n                Cancel\n            \n            Already have an account? Login Here\n        \n    \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                .card {\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 5%;\n}\n\n.card-header {\n    font-size: 35px;\n    color: black;\n    text-align: center;\n}\n\n.card-body {\n    margin-top: 2%;\n    padding-top: 5%;\n}\n\n.form-control {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: 10%;\n    height: 40px;\n    margin-bottom: 20px;\n    font-size: medium;\n}\n\n.form-group {\n    text-align: center;\n}\n\ninput[type=\"radio\"] {\n    margin: 0 10px;\n}\n\n.cancel {\n    color: white;\n}\n\n.cancel:hover {\n    color: blue;\n}\n\n.al{\n    font-size: medium;\n}\n\n.required{\n    font-size: medium;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Register                                        Username:                                                    Username is required                                                        Email:                                                    Email is required                                                        Password:                                                    Password is required                    Password must be at least 6 characters                                                                                   Authentication Code:                                                    Authentication Code is required                                                                                         Register                                                    Cancel                        Already have an account? Login Here            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopBarComponent.html":{"url":"components/TopBarComponent.html","title":"component - TopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/top-bar/top-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-bar\n            \n\n            \n                styleUrls\n                ./top-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interval\n                            \n                            \n                                logged_in\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check_logIN\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/top-bar/top-bar.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check_logIN\n                        \n                        \n                    \n                \n            \n            \n                \ncheck_logIN()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-bar/top-bar.component.ts:26\n                \n            \n\n\n            \n                \n                    This function regularly checks at interval of 0.5sec and clears the local storage if the user had logged out \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-bar/top-bar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : setInterval(()=>{this.check_logIN();},500)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/top-bar/top-bar.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logged_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/top-bar/top-bar.component.ts:14\n                            \n                        \n\n                \n                    \n                        this variable checks the status whether the user is logged in or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { NONE_TYPE } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n  /**\n   * this variable checks the status whether the user is logged in or not\n   */\n  logged_in:boolean;\n  interval=setInterval(()=>{this.check_logIN();},500);\n  constructor()\n  { \n  }\n\n  ngOnInit(): void {\n    this.check_logIN();\n  }\n  /**\n   * This function regularly checks at interval of 0.5sec and clears the local storage if the user had logged out \n   */\n  check_logIN(){\n    if((localStorage.getItem('token')==null)||(localStorage.getItem('token')=='undefined')){\n      this.logged_in=false;\n    }\n    else{\n      this.logged_in=true;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n    Our Team -->\n    \n      \n    \n\n    \n        \n            \n                Our Team \n            \n        \n        \n            \n                Dashboard\n            \n        \n        \n            \n                \n                    Logout\n                \n            \n            \n                \n                    \n                        Login\n                    \n                \n                \n                    \n                        Register\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./top-bar.component.scss\n                \n                a {\n    color: white;\n    font-size: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Our Team -->                                                      Our Team                                                         Dashboard                                                                            Logout                                                                                                    Login                                                                                                Register                                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user.ts\n        \n\n            \n                Description\n            \n            \n                contains user details like username,password,email and if that person is a professor\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                is_professor\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    username: string;\n    password: string;\n    email: string;\n    is_professor: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMy.html":{"url":"interfaces/UserMy.html","title":"interface - UserMy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserMy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-my.ts\n        \n\n            \n                Description\n            \n            \n                interface to represent the current user loggen in\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    contains the list of courses the person is associated.He/She can be \neither a Professor or TA or a student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    holds whether the person is a professor or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user id that is stored in the database\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\n/**\n * interface to represent the current user loggen in\n */\nexport interface UserMy {\n    /**\n     * user id that is stored in the database\n     */\n    user: number;\n    /**\n     * holds whether the person is a professor or not\n     */\n    is_professor: boolean;\n    token: string;\n    /**\n     * contains the list of courses the person is associated.He/She can be \n     * either a Professor or TA or a student\n     */\n    courses: Array;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMyList.html":{"url":"interfaces/UserMyList.html","title":"interface - UserMyList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserMyList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/list_of_student.ts\n        \n\n            \n                Description\n            \n            \n                this interface is for the list of students registered in a course\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\n/**\n * this interface is for the list of students registered in a course\n */\nexport interface UserMyList {\n    user: number;\n    is_professor: boolean;\n    token: string;\n    courses: Array;\n    username:String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserReal.html":{"url":"interfaces/UserReal.html","title":"interface - UserReal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserReal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-real.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        first_name\n                                \n                                \n                                        id\n                                \n                                \n                                        last_name\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserReal {\n    id: number;\n    username: string;\n    password: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete_students\n                            \n                            \n                                get_students\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete_students\n                        \n                        \n                    \n                \n            \n            \n                \ndelete_students(id: number, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:51\n                \n            \n\n\n            \n                \n                    This service removes a user from the course by making a POST request\nNote:U cant remove the professor via this service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course Id\n\n                                    \n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of a User\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get_students\n                        \n                        \n                    \n                \n            \n            \n                \nget_students(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:38\n                \n            \n\n\n            \n                \n                    This fetches the list of Users registered for the course by making a GET request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Array of User Objects present in the course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n                    Makes a POST request to register a User Object in the dashboard\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User object to be registered\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models';\nimport {UserMy} from '../_models/user-my';\nimport {UserMyList} from '../_models/list_of_student';\nimport {BASE_URL} from  './base';\nimport { ConstantPool } from '@angular/compiler';\nconst REGISTER_URL = BASE_URL+'/api/user/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient)\n  {\n  }\n  /**\n   * Makes a POST request to register a User Object in the dashboard\n   * @param user User object to be registered\n   */\n  register(user: User): Observable\n  {\n    return this.http.post(REGISTER_URL, user, httpOptions);\n  }\n  /**\n   * This fetches the list of Users registered for the course by making a GET request\n   * \n   * @param id Course Id\n   * \n   * @return Array of User Objects present in the course\n   */\n  get_students(id:number):Observable\n  { \n    var url=BASE_URL+'/api/usercourse/'+id.toString()+'/';\n    return this.http.get(url,httpOptions);\n  }\n  /**\n   * This service removes a user from the course by making a POST request\n   * \n   * Note:U cant remove the professor via this service\n   * \n   * @param id Course Id\n   * @param username Username of a User\n   */\n  delete_students(id:number,username:string)\n  {\n    var url=BASE_URL+'/api/usercourse/'+id.toString()+'/';\n    var data={};\n    data['username']=username;\n    console.log(\"hello bro\");\n    return this.http.post(url,data,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserToken.html":{"url":"interfaces/UserToken.html","title":"interface - UserToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user-token.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courses\n                                \n                                \n                                        is_professor\n                                \n                                \n                                        token\n                                \n                                \n                                        token_form\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courses\n                                    \n                                \n                                \n                                    \n                                        courses:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_professor\n                                    \n                                \n                                \n                                    \n                                        is_professor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_form\n                                    \n                                \n                                \n                                    \n                                        token_form:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Course} from './course';\nexport interface UserToken {\n    user: number;\n    is_professor: boolean;\n    token: string;\n    courses: Array;\n    token_form:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course_id\n                            \n                            \n                                is_professor\n                            \n                            \n                                list_of_students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete_student\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, activatedRoute: ActivatedRoute, userservice: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/users.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userservice\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete_student\n                        \n                        \n                    \n                \n            \n            \n                \ndelete_student(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        This represents the username of the person to be removed\nThis function calls the userservice to delete the student of a particular username \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/users/users.component.ts:43\n                \n            \n\n\n            \n                \n                    First the course id is extracted using activatedRoute from the path\nThen userService is called to get the list_of_students \nNote here the professor cannot remove himself from the course via the UI\nThis function also sets the is_professor variable by looking into the local storage to give permission to remove students/TA's\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_professor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list_of_students\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users/users.component.ts:22\n                            \n                        \n\n                \n                    \n                        Represents the list of users registered in the course including the professor\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport {BASE_URL} from  '../services/base';\nimport {UserService} from '../services/user.service';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\n\nexport class UsersComponent implements OnInit {\n  /**\n   * Represents the list of users registered in the course including the professor\n   * \n   */\nlist_of_students:any;\n\ncourse_id:any;\n\nis_professor:boolean;\n  constructor(private http:HttpClient,\n    private activatedRoute:ActivatedRoute,\n    private userservice:UserService,\n    ) { \n    \n  }\n/**\n * First the course id is extracted using activatedRoute from the path\n * \n * Then userService is called to get the list_of_students \n * \n * Note here the professor cannot remove himself from the course via the UI\n * \n * This function also sets the is_professor variable by looking into the local storage to give permission to remove students/TA's\n * \n */\n  ngOnInit(): void {\n    this.course_id=this.activatedRoute.snapshot.paramMap.get('id');\n    this.userservice.get_students(this.course_id).subscribe((data)=>{this.list_of_students=data;});\n    \n    if(localStorage.getItem('is_professor')=='true'){\n      this.is_professor=true;\n    }\n    else{\n      this.is_professor=false;\n    }\n\n  }\n/**\n * \n * @param username This represents the username of the person to be removed\n * This function calls the userservice to delete the student of a particular username \n */\n  delete_student(username:string)\n  {\n    this.userservice.delete_students(this.course_id,username).subscribe(data=>{location.reload()});\n    \n  }\n\n\n}\n\n    \n\n    \n        Professor\n\n \n    \n        \n            {{student.username}}\n        \n        \n    \n\n\nStudents and TA's\n \n    \n        \n            {{student.username}}\n        \n        \n            \n                Remove the student\n            \n        \n    \n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                .list{\n    margin-bottom: 3%;\n    margin-right:80%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Professor                         {{student.username}}                    Students and TA\\'s                         {{student.username}}                                            Remove the student                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AddCourseComponent', 'selector': 'app-add-course'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseHomeComponent', 'selector': 'app-course-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'ReadComponent', 'selector': 'app-read'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserwhoService.html":{"url":"injectables/UserwhoService.html","title":"injectable - UserwhoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserwhoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/userwho.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                IDENTITY\n                            \n                            \n                                STATUS\n                            \n                            \n                                WHO\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/userwho.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            IDENTITY\n                        \n                        \n                    \n                \n            \n            \n                \nIDENTITY()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            STATUS\n                        \n                        \n                    \n                \n            \n            \n                \nSTATUS(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            WHO\n                        \n                        \n                    \n                \n            \n            \n                \nWHO()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/userwho.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {UserReal} from '../_models/user-real';\nimport {Course} from '../_models/course';\nimport {BASE_URL} from './base';\nconst USER_URL = BASE_URL+'/api/user/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserwhoService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n  /**\n   * \n   */\n  WHO(){\n    const USE_URL = BASE_URL+'/api/courses/';\n    return this.http.get(USE_URL, httpOptions);\n  }\n  /**\n   * \n   * @param id \n   */\n  STATUS(id:number){\n    const USE_URL=BASE_URL+'/api/user/'+id.toString()+'/abc/';\n    return this.http.get(USE_URL,httpOptions);\n  }\n  /**\n   * \n   */\n  IDENTITY(){\n    const USE_URL = BASE_URL + '/api/usermy/';\n    return this.http.get(USE_URL,httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/course-status.ts\n            \n            interface\n            CourseStatus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/course.ts\n            \n            interface\n            Course\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_models/list_of_student.ts\n            \n            interface\n            UserMyList\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/_models/login.ts\n            \n            interface\n            Login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/message.ts\n            \n            interface\n            Message\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/_models/message_sent.ts\n            \n            interface\n            MessageSent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_models/read_by.ts\n            \n            interface\n            ReadBy\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/_models/user-my.ts\n            \n            interface\n            UserMy\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/_models/user-real.ts\n            \n            interface\n            UserReal\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/_models/user-token.ts\n            \n            interface\n            UserToken\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_models/user.ts\n            \n            class\n            User\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/add-course/add-course.component.ts\n            \n            component\n            AddCourseComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/course-home/course-home.component.ts\n            \n            component\n            CourseHomeComponent\n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/read/read.component.ts\n            \n            component\n            ReadComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            variable\n            professor_expression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            variable\n            student_expression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            injectable\n            AddCourseService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            variable\n            COURSE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/add-course.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/add-to-course.service.ts\n            \n            injectable\n            AddToCourseService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/add-to-course.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            JWTPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            LOGIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            REFRESH_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/base.ts\n            \n            variable\n            BASE_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            injectable\n            LogoutService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/logout.service.ts\n            \n            variable\n            LOGOUT_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            REGISTER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            injectable\n            UserwhoService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/userwho.service.ts\n            \n            variable\n            USER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/top-bar/top-bar.component.ts\n            \n            component\n            TopBarComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 9.1.12\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : 9.1.12\n        \n            @angular/compiler : 9.1.12\n        \n            @angular/core : 9.1.12\n        \n            @angular/forms : 9.1.12\n        \n            @angular/localize : 9.1.12\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : 9.1.12\n        \n            @angular/platform-browser-dynamic : 9.1.12\n        \n            @angular/router : 9.1.12\n        \n            @ng-bootstrap/ng-bootstrap : ^6.2.0\n        \n            @types/jasmine : 3.5.14\n        \n            @types/jasminewd2 : 2.0.8\n        \n            @types/jwt-decode : ^2.2.1\n        \n            @types/node : 12.12.67\n        \n            bootstrap : ^4.5.3\n        \n            cors : 2.8.5\n        \n            jquery : ^3.5.1\n        \n            jwt-decode : ^3.1.2\n        \n            jwt-token : ^1.0.9\n        \n            moment : ^2.29.1\n        \n            ngx-bootstrap : ^6.1.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : 6.5.5\n        \n            tslib : 1.14.1\n        \n            zone.js : 0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDashboard\nThis project was generated with Angular CLI version 9.1.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAddCourseComponent\n\nAddCourseComponent\n\nAppModule -->\n\nAddCourseComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCourseHomeComponent\n\nCourseHomeComponent\n\nAppModule -->\n\nCourseHomeComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nReadComponent\n\nReadComponent\n\nAppModule -->\n\nReadComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_URL   (src/.../base.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            COURSE_URL   (src/.../add-course.service.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            httpOptions   (src/.../users.component.ts)\n                        \n                        \n                            httpOptions   (src/.../add-course.service.ts)\n                        \n                        \n                            httpOptions   (src/.../add-to-course.service.ts)\n                        \n                        \n                            httpOptions   (src/.../userwho.service.ts)\n                        \n                        \n                            httpOptions   (src/.../message.service.ts)\n                        \n                        \n                            httpOptions   (src/.../authentication.service.ts)\n                        \n                        \n                            httpOptions   (src/.../user.service.ts)\n                        \n                        \n                            httpOptions   (src/.../logout.service.ts)\n                        \n                        \n                            LOGIN_URL   (src/.../authentication.service.ts)\n                        \n                        \n                            LOGOUT_URL   (src/.../logout.service.ts)\n                        \n                        \n                            professor_expression   (src/.../register.component.ts)\n                        \n                        \n                            REFRESH_URL   (src/.../authentication.service.ts)\n                        \n                        \n                            REGISTER_URL   (src/.../user.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            student_expression   (src/.../register.component.ts)\n                        \n                        \n                            USER_URL   (src/.../userwho.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/base.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://back-dashboard.herokuapp.com'\n                        \n                    \n\n                \n                    \n                        Contains the base url which is common to all request url\nSo this is used as prefix and various requests are sent by adding appropriate suffix\n\n                    \n                \n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/services/add-course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COURSE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/courses/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/users/users.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/add-to-course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/userwho.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/user/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/message.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGIN_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/get-token/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REFRESH_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/refresh-token/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REGISTER_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/user/'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/logout.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOGOUT_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BASE_URL+'/api/auth/logout/'\n                        \n                    \n\n\n            \n        \n\n    src/app/register/register.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            professor_expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /P[A-Z]{2,3}\\d{3}/\n                        \n                    \n\n                \n                    \n                        This is the authentication code regular expression for professors\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student_expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /[1-2]\\d[A-Z0-9]\\d{6}/\n                        \n                    \n\n                \n                    \n                        This expression is a regular expression representing student code\nSo students only with this matching will be allowed,else wont be\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
